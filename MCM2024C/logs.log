2024-02-04 10:50:20,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 10:50:20,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 10:50:20,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 10:50:20,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 10:50:21,861:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\mpld3\mplexporter\exporter.py:84: UserWarning: Blended transforms not yet supported. Zoom behavior may not work as expected.
  warnings.warn("Blended transforms not yet supported. "

2024-02-04 10:50:22,038:INFO:PyCaret RegressionExperiment
2024-02-04 10:50:22,038:INFO:Logging name: reg-default-name
2024-02-04 10:50:22,038:INFO:ML Usecase: MLUsecase.REGRESSION
2024-02-04 10:50:22,038:INFO:version 3.2.0
2024-02-04 10:50:22,038:INFO:Initializing setup()
2024-02-04 10:50:22,038:INFO:self.USI: 1bac
2024-02-04 10:50:22,038:INFO:self._variable_keys: {'_ml_usecase', 'fold_generator', 'X_train', 'target_param', 'USI', 'X', 'log_plots_param', 'idx', 'gpu_param', 'y_test', 'gpu_n_jobs_param', 'data', 'html_param', 'exp_name_log', 'X_test', 'y_train', 'fold_shuffle_param', '_available_plots', 'pipeline', 'y', 'memory', 'seed', 'fold_groups_param', 'transform_target_param', 'n_jobs_param', 'exp_id', 'logging_param'}
2024-02-04 10:50:22,038:INFO:Checking environment
2024-02-04 10:50:22,038:INFO:python_version: 3.11.7
2024-02-04 10:50:22,038:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 10:50:22,038:INFO:machine: AMD64
2024-02-04 10:50:22,061:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 10:50:22,065:INFO:Memory: svmem(total=16892026880, available=5502279680, percent=67.4, used=11389747200, free=5502279680)
2024-02-04 10:50:22,065:INFO:Physical Core: 12
2024-02-04 10:50:22,065:INFO:Logical Core: 16
2024-02-04 10:50:22,065:INFO:Checking libraries
2024-02-04 10:50:22,065:INFO:System:
2024-02-04 10:50:22,065:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 10:50:22,065:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 10:50:22,065:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 10:50:22,065:INFO:PyCaret required dependencies:
2024-02-04 10:50:25,030:INFO:                 pip: 23.3.2
2024-02-04 10:50:25,030:INFO:          setuptools: 65.5.0
2024-02-04 10:50:25,030:INFO:             pycaret: 3.2.0
2024-02-04 10:50:25,030:INFO:             IPython: 8.20.0
2024-02-04 10:50:25,030:INFO:          ipywidgets: 8.1.1
2024-02-04 10:50:25,030:INFO:                tqdm: 4.66.1
2024-02-04 10:50:25,030:INFO:               numpy: 1.25.2
2024-02-04 10:50:25,030:INFO:              pandas: 1.5.3
2024-02-04 10:50:25,030:INFO:              jinja2: 3.1.3
2024-02-04 10:50:25,030:INFO:               scipy: 1.10.1
2024-02-04 10:50:25,030:INFO:              joblib: 1.3.2
2024-02-04 10:50:25,030:INFO:             sklearn: 1.2.2
2024-02-04 10:50:25,030:INFO:                pyod: 1.1.2
2024-02-04 10:50:25,030:INFO:            imblearn: 0.12.0
2024-02-04 10:50:25,030:INFO:   category_encoders: 2.6.3
2024-02-04 10:50:25,030:INFO:            lightgbm: 4.3.0
2024-02-04 10:50:25,031:INFO:               numba: 0.58.1
2024-02-04 10:50:25,031:INFO:            requests: 2.31.0
2024-02-04 10:50:25,031:INFO:          matplotlib: 3.6.0
2024-02-04 10:50:25,031:INFO:          scikitplot: 0.3.7
2024-02-04 10:50:25,031:INFO:         yellowbrick: 1.5
2024-02-04 10:50:25,031:INFO:              plotly: 5.18.0
2024-02-04 10:50:25,031:INFO:    plotly-resampler: Not installed
2024-02-04 10:50:25,031:INFO:             kaleido: 0.2.1
2024-02-04 10:50:25,031:INFO:           schemdraw: 0.15
2024-02-04 10:50:25,031:INFO:         statsmodels: 0.14.1
2024-02-04 10:50:25,031:INFO:              sktime: 0.21.1
2024-02-04 10:50:25,031:INFO:               tbats: 1.1.3
2024-02-04 10:50:25,031:INFO:            pmdarima: 2.0.4
2024-02-04 10:50:25,031:INFO:              psutil: 5.9.8
2024-02-04 10:50:25,031:INFO:          markupsafe: 2.1.4
2024-02-04 10:50:25,031:INFO:             pickle5: Not installed
2024-02-04 10:50:25,031:INFO:         cloudpickle: 3.0.0
2024-02-04 10:50:25,031:INFO:         deprecation: 2.1.0
2024-02-04 10:50:25,031:INFO:              xxhash: 3.4.1
2024-02-04 10:50:25,031:INFO:           wurlitzer: Not installed
2024-02-04 10:50:25,031:INFO:PyCaret optional dependencies:
2024-02-04 10:50:25,089:INFO:                shap: Not installed
2024-02-04 10:50:25,089:INFO:           interpret: Not installed
2024-02-04 10:50:25,089:INFO:                umap: Not installed
2024-02-04 10:50:25,089:INFO:     ydata_profiling: Not installed
2024-02-04 10:50:25,089:INFO:  explainerdashboard: Not installed
2024-02-04 10:50:25,089:INFO:             autoviz: Not installed
2024-02-04 10:50:25,089:INFO:           fairlearn: Not installed
2024-02-04 10:50:25,089:INFO:          deepchecks: Not installed
2024-02-04 10:50:25,089:INFO:             xgboost: 2.0.3
2024-02-04 10:50:25,089:INFO:            catboost: 1.2.2
2024-02-04 10:50:25,089:INFO:              kmodes: Not installed
2024-02-04 10:50:25,089:INFO:             mlxtend: Not installed
2024-02-04 10:50:25,089:INFO:       statsforecast: Not installed
2024-02-04 10:50:25,089:INFO:        tune_sklearn: Not installed
2024-02-04 10:50:25,089:INFO:                 ray: Not installed
2024-02-04 10:50:25,089:INFO:            hyperopt: Not installed
2024-02-04 10:50:25,089:INFO:              optuna: Not installed
2024-02-04 10:50:25,089:INFO:               skopt: Not installed
2024-02-04 10:50:25,089:INFO:              mlflow: Not installed
2024-02-04 10:50:25,089:INFO:              gradio: Not installed
2024-02-04 10:50:25,089:INFO:             fastapi: Not installed
2024-02-04 10:50:25,089:INFO:             uvicorn: Not installed
2024-02-04 10:50:25,089:INFO:              m2cgen: Not installed
2024-02-04 10:50:25,089:INFO:           evidently: Not installed
2024-02-04 10:50:25,089:INFO:               fugue: Not installed
2024-02-04 10:50:25,090:INFO:           streamlit: Not installed
2024-02-04 10:50:25,090:INFO:             prophet: 1.1.5
2024-02-04 10:50:25,090:INFO:None
2024-02-04 10:50:25,090:INFO:Set up data.
2024-02-04 10:50:25,094:INFO:Set up folding strategy.
2024-02-04 10:50:25,094:INFO:Set up train/test split.
2024-02-04 10:50:25,096:INFO:Set up index.
2024-02-04 10:50:25,096:INFO:Assigning column types.
2024-02-04 10:50:25,098:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 10:50:25,098:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,100:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,103:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,137:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,161:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,161:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:25,162:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:25,250:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,252:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,255:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,285:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,309:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,310:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:25,314:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:25,314:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-02-04 10:50:25,316:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,319:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,356:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,385:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,385:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:25,386:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:25,389:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,393:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,432:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,461:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:25,462:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:25,462:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-02-04 10:50:25,467:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,499:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,526:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:25,527:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:25,533:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,567:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,594:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,594:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:25,596:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:25,596:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-02-04 10:50:25,638:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,666:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:25,667:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:25,709:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,742:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:25,743:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:25,744:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 10:50:25,783:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,811:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:25,813:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:25,853:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 10:50:25,879:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:25,881:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:25,881:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-02-04 10:50:25,948:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:25,949:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:26,010:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:26,013:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:26,025:INFO:Preparing preprocessing pipeline...
2024-02-04 10:50:26,025:INFO:Set up simple imputation.
2024-02-04 10:50:26,037:INFO:Finished creating preprocessing pipeline.
2024-02-04 10:50:26,040:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['momentum1'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-02-04 10:50:26,040:INFO:Creating final display dataframe.
2024-02-04 10:50:26,066:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            points
2                   Target type        Regression
3           Original data shape          (334, 2)
4        Transformed data shape          (334, 2)
5   Transformed train set shape          (233, 2)
6    Transformed test set shape          (101, 2)
7              Numeric features                 1
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              1bac
2024-02-04 10:50:26,127:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:26,129:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:26,188:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 10:50:26,190:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 10:50:26,190:INFO:setup() successfully completed in 4.15s...............
2024-02-04 10:50:26,190:INFO:Initializing compare_models()
2024-02-04 10:50:26,190:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-02-04 10:50:26,190:INFO:Checking exceptions
2024-02-04 10:50:26,191:INFO:Preparing display monitor
2024-02-04 10:50:26,195:INFO:Initializing Linear Regression
2024-02-04 10:50:26,195:INFO:Total runtime is 0.0 minutes
2024-02-04 10:50:26,195:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:26,195:INFO:Initializing create_model()
2024-02-04 10:50:26,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:26,195:INFO:Checking exceptions
2024-02-04 10:50:26,195:INFO:Importing libraries
2024-02-04 10:50:26,195:INFO:Copying training dataset
2024-02-04 10:50:26,196:INFO:Defining folds
2024-02-04 10:50:26,197:INFO:Declaring metric variables
2024-02-04 10:50:26,197:INFO:Importing untrained model
2024-02-04 10:50:26,197:INFO:Linear Regression Imported successfully
2024-02-04 10:50:26,197:INFO:Starting cross validation
2024-02-04 10:50:26,202:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:29,978:INFO:Calculating mean and std
2024-02-04 10:50:29,989:INFO:Creating metrics dataframe
2024-02-04 10:50:29,993:INFO:Uploading results into container
2024-02-04 10:50:29,993:INFO:Uploading model into container now
2024-02-04 10:50:29,994:INFO:_master_model_container: 1
2024-02-04 10:50:29,994:INFO:_display_container: 2
2024-02-04 10:50:29,994:INFO:LinearRegression(n_jobs=-1)
2024-02-04 10:50:29,994:INFO:create_model() successfully completed......................................
2024-02-04 10:50:30,047:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:30,047:INFO:Creating metrics dataframe
2024-02-04 10:50:30,050:INFO:Initializing Lasso Regression
2024-02-04 10:50:30,050:INFO:Total runtime is 0.06424396435419719 minutes
2024-02-04 10:50:30,050:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:30,050:INFO:Initializing create_model()
2024-02-04 10:50:30,050:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:30,050:INFO:Checking exceptions
2024-02-04 10:50:30,051:INFO:Importing libraries
2024-02-04 10:50:30,051:INFO:Copying training dataset
2024-02-04 10:50:30,052:INFO:Defining folds
2024-02-04 10:50:30,052:INFO:Declaring metric variables
2024-02-04 10:50:30,052:INFO:Importing untrained model
2024-02-04 10:50:30,052:INFO:Lasso Regression Imported successfully
2024-02-04 10:50:30,052:INFO:Starting cross validation
2024-02-04 10:50:30,052:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:32,069:INFO:Calculating mean and std
2024-02-04 10:50:32,070:INFO:Creating metrics dataframe
2024-02-04 10:50:32,072:INFO:Uploading results into container
2024-02-04 10:50:32,072:INFO:Uploading model into container now
2024-02-04 10:50:32,072:INFO:_master_model_container: 2
2024-02-04 10:50:32,072:INFO:_display_container: 2
2024-02-04 10:50:32,072:INFO:Lasso(random_state=123)
2024-02-04 10:50:32,072:INFO:create_model() successfully completed......................................
2024-02-04 10:50:32,128:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:32,128:INFO:Creating metrics dataframe
2024-02-04 10:50:32,130:INFO:Initializing Ridge Regression
2024-02-04 10:50:32,132:INFO:Total runtime is 0.0989431937535604 minutes
2024-02-04 10:50:32,132:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:32,132:INFO:Initializing create_model()
2024-02-04 10:50:32,132:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:32,132:INFO:Checking exceptions
2024-02-04 10:50:32,132:INFO:Importing libraries
2024-02-04 10:50:32,132:INFO:Copying training dataset
2024-02-04 10:50:32,133:INFO:Defining folds
2024-02-04 10:50:32,133:INFO:Declaring metric variables
2024-02-04 10:50:32,134:INFO:Importing untrained model
2024-02-04 10:50:32,134:INFO:Ridge Regression Imported successfully
2024-02-04 10:50:32,134:INFO:Starting cross validation
2024-02-04 10:50:32,134:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:32,170:INFO:Calculating mean and std
2024-02-04 10:50:32,170:INFO:Creating metrics dataframe
2024-02-04 10:50:32,170:INFO:Uploading results into container
2024-02-04 10:50:32,172:INFO:Uploading model into container now
2024-02-04 10:50:32,172:INFO:_master_model_container: 3
2024-02-04 10:50:32,172:INFO:_display_container: 2
2024-02-04 10:50:32,172:INFO:Ridge(random_state=123)
2024-02-04 10:50:32,172:INFO:create_model() successfully completed......................................
2024-02-04 10:50:32,224:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:32,224:INFO:Creating metrics dataframe
2024-02-04 10:50:32,227:INFO:Initializing Elastic Net
2024-02-04 10:50:32,227:INFO:Total runtime is 0.10052896340688071 minutes
2024-02-04 10:50:32,227:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:32,227:INFO:Initializing create_model()
2024-02-04 10:50:32,227:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:32,227:INFO:Checking exceptions
2024-02-04 10:50:32,227:INFO:Importing libraries
2024-02-04 10:50:32,227:INFO:Copying training dataset
2024-02-04 10:50:32,229:INFO:Defining folds
2024-02-04 10:50:32,229:INFO:Declaring metric variables
2024-02-04 10:50:32,229:INFO:Importing untrained model
2024-02-04 10:50:32,229:INFO:Elastic Net Imported successfully
2024-02-04 10:50:32,229:INFO:Starting cross validation
2024-02-04 10:50:32,229:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:32,266:INFO:Calculating mean and std
2024-02-04 10:50:32,266:INFO:Creating metrics dataframe
2024-02-04 10:50:32,268:INFO:Uploading results into container
2024-02-04 10:50:32,269:INFO:Uploading model into container now
2024-02-04 10:50:32,269:INFO:_master_model_container: 4
2024-02-04 10:50:32,269:INFO:_display_container: 2
2024-02-04 10:50:32,269:INFO:ElasticNet(random_state=123)
2024-02-04 10:50:32,269:INFO:create_model() successfully completed......................................
2024-02-04 10:50:32,322:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:32,322:INFO:Creating metrics dataframe
2024-02-04 10:50:32,325:INFO:Initializing Least Angle Regression
2024-02-04 10:50:32,325:INFO:Total runtime is 0.10216060479482016 minutes
2024-02-04 10:50:32,325:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:32,325:INFO:Initializing create_model()
2024-02-04 10:50:32,325:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:32,325:INFO:Checking exceptions
2024-02-04 10:50:32,325:INFO:Importing libraries
2024-02-04 10:50:32,325:INFO:Copying training dataset
2024-02-04 10:50:32,327:INFO:Defining folds
2024-02-04 10:50:32,327:INFO:Declaring metric variables
2024-02-04 10:50:32,327:INFO:Importing untrained model
2024-02-04 10:50:32,327:INFO:Least Angle Regression Imported successfully
2024-02-04 10:50:32,327:INFO:Starting cross validation
2024-02-04 10:50:32,327:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:32,363:INFO:Calculating mean and std
2024-02-04 10:50:32,363:INFO:Creating metrics dataframe
2024-02-04 10:50:32,365:INFO:Uploading results into container
2024-02-04 10:50:32,365:INFO:Uploading model into container now
2024-02-04 10:50:32,366:INFO:_master_model_container: 5
2024-02-04 10:50:32,366:INFO:_display_container: 2
2024-02-04 10:50:32,366:INFO:Lars(random_state=123)
2024-02-04 10:50:32,366:INFO:create_model() successfully completed......................................
2024-02-04 10:50:32,420:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:32,421:INFO:Creating metrics dataframe
2024-02-04 10:50:32,423:INFO:Initializing Lasso Least Angle Regression
2024-02-04 10:50:32,423:INFO:Total runtime is 0.10379605293273926 minutes
2024-02-04 10:50:32,423:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:32,423:INFO:Initializing create_model()
2024-02-04 10:50:32,423:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:32,423:INFO:Checking exceptions
2024-02-04 10:50:32,423:INFO:Importing libraries
2024-02-04 10:50:32,423:INFO:Copying training dataset
2024-02-04 10:50:32,424:INFO:Defining folds
2024-02-04 10:50:32,424:INFO:Declaring metric variables
2024-02-04 10:50:32,424:INFO:Importing untrained model
2024-02-04 10:50:32,425:INFO:Lasso Least Angle Regression Imported successfully
2024-02-04 10:50:32,425:INFO:Starting cross validation
2024-02-04 10:50:32,425:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:32,462:INFO:Calculating mean and std
2024-02-04 10:50:32,462:INFO:Creating metrics dataframe
2024-02-04 10:50:32,463:INFO:Uploading results into container
2024-02-04 10:50:32,464:INFO:Uploading model into container now
2024-02-04 10:50:32,464:INFO:_master_model_container: 6
2024-02-04 10:50:32,464:INFO:_display_container: 2
2024-02-04 10:50:32,464:INFO:LassoLars(random_state=123)
2024-02-04 10:50:32,464:INFO:create_model() successfully completed......................................
2024-02-04 10:50:32,519:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:32,519:INFO:Creating metrics dataframe
2024-02-04 10:50:32,521:INFO:Initializing Orthogonal Matching Pursuit
2024-02-04 10:50:32,521:INFO:Total runtime is 0.10542118151982625 minutes
2024-02-04 10:50:32,521:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:32,521:INFO:Initializing create_model()
2024-02-04 10:50:32,521:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:32,521:INFO:Checking exceptions
2024-02-04 10:50:32,521:INFO:Importing libraries
2024-02-04 10:50:32,521:INFO:Copying training dataset
2024-02-04 10:50:32,523:INFO:Defining folds
2024-02-04 10:50:32,523:INFO:Declaring metric variables
2024-02-04 10:50:32,523:INFO:Importing untrained model
2024-02-04 10:50:32,523:INFO:Orthogonal Matching Pursuit Imported successfully
2024-02-04 10:50:32,523:INFO:Starting cross validation
2024-02-04 10:50:32,524:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:32,560:INFO:Calculating mean and std
2024-02-04 10:50:32,560:INFO:Creating metrics dataframe
2024-02-04 10:50:32,562:INFO:Uploading results into container
2024-02-04 10:50:32,563:INFO:Uploading model into container now
2024-02-04 10:50:32,563:INFO:_master_model_container: 7
2024-02-04 10:50:32,563:INFO:_display_container: 2
2024-02-04 10:50:32,563:INFO:OrthogonalMatchingPursuit()
2024-02-04 10:50:32,563:INFO:create_model() successfully completed......................................
2024-02-04 10:50:32,618:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:32,618:INFO:Creating metrics dataframe
2024-02-04 10:50:32,620:INFO:Initializing Bayesian Ridge
2024-02-04 10:50:32,620:INFO:Total runtime is 0.10708280404408772 minutes
2024-02-04 10:50:32,620:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:32,620:INFO:Initializing create_model()
2024-02-04 10:50:32,620:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:32,620:INFO:Checking exceptions
2024-02-04 10:50:32,620:INFO:Importing libraries
2024-02-04 10:50:32,620:INFO:Copying training dataset
2024-02-04 10:50:32,622:INFO:Defining folds
2024-02-04 10:50:32,623:INFO:Declaring metric variables
2024-02-04 10:50:32,623:INFO:Importing untrained model
2024-02-04 10:50:32,623:INFO:Bayesian Ridge Imported successfully
2024-02-04 10:50:32,623:INFO:Starting cross validation
2024-02-04 10:50:32,623:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:32,660:INFO:Calculating mean and std
2024-02-04 10:50:32,660:INFO:Creating metrics dataframe
2024-02-04 10:50:32,662:INFO:Uploading results into container
2024-02-04 10:50:32,662:INFO:Uploading model into container now
2024-02-04 10:50:32,662:INFO:_master_model_container: 8
2024-02-04 10:50:32,662:INFO:_display_container: 2
2024-02-04 10:50:32,663:INFO:BayesianRidge()
2024-02-04 10:50:32,663:INFO:create_model() successfully completed......................................
2024-02-04 10:50:32,716:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:32,716:INFO:Creating metrics dataframe
2024-02-04 10:50:32,718:INFO:Initializing Passive Aggressive Regressor
2024-02-04 10:50:32,718:INFO:Total runtime is 0.10870962937672933 minutes
2024-02-04 10:50:32,718:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:32,719:INFO:Initializing create_model()
2024-02-04 10:50:32,719:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:32,719:INFO:Checking exceptions
2024-02-04 10:50:32,719:INFO:Importing libraries
2024-02-04 10:50:32,719:INFO:Copying training dataset
2024-02-04 10:50:32,720:INFO:Defining folds
2024-02-04 10:50:32,720:INFO:Declaring metric variables
2024-02-04 10:50:32,720:INFO:Importing untrained model
2024-02-04 10:50:32,720:INFO:Passive Aggressive Regressor Imported successfully
2024-02-04 10:50:32,720:INFO:Starting cross validation
2024-02-04 10:50:32,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:32,755:INFO:Calculating mean and std
2024-02-04 10:50:32,756:INFO:Creating metrics dataframe
2024-02-04 10:50:32,757:INFO:Uploading results into container
2024-02-04 10:50:32,758:INFO:Uploading model into container now
2024-02-04 10:50:32,758:INFO:_master_model_container: 9
2024-02-04 10:50:32,758:INFO:_display_container: 2
2024-02-04 10:50:32,758:INFO:PassiveAggressiveRegressor(random_state=123)
2024-02-04 10:50:32,758:INFO:create_model() successfully completed......................................
2024-02-04 10:50:32,812:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:32,812:INFO:Creating metrics dataframe
2024-02-04 10:50:32,814:INFO:Initializing Huber Regressor
2024-02-04 10:50:32,814:INFO:Total runtime is 0.11031761169433593 minutes
2024-02-04 10:50:32,814:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:32,814:INFO:Initializing create_model()
2024-02-04 10:50:32,814:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:32,814:INFO:Checking exceptions
2024-02-04 10:50:32,814:INFO:Importing libraries
2024-02-04 10:50:32,814:INFO:Copying training dataset
2024-02-04 10:50:32,815:INFO:Defining folds
2024-02-04 10:50:32,815:INFO:Declaring metric variables
2024-02-04 10:50:32,816:INFO:Importing untrained model
2024-02-04 10:50:32,816:INFO:Huber Regressor Imported successfully
2024-02-04 10:50:32,816:INFO:Starting cross validation
2024-02-04 10:50:32,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:32,852:INFO:Calculating mean and std
2024-02-04 10:50:32,852:INFO:Creating metrics dataframe
2024-02-04 10:50:32,854:INFO:Uploading results into container
2024-02-04 10:50:32,854:INFO:Uploading model into container now
2024-02-04 10:50:32,854:INFO:_master_model_container: 10
2024-02-04 10:50:32,854:INFO:_display_container: 2
2024-02-04 10:50:32,855:INFO:HuberRegressor()
2024-02-04 10:50:32,855:INFO:create_model() successfully completed......................................
2024-02-04 10:50:32,908:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:32,908:INFO:Creating metrics dataframe
2024-02-04 10:50:32,912:INFO:Initializing K Neighbors Regressor
2024-02-04 10:50:32,912:INFO:Total runtime is 0.11194380521774291 minutes
2024-02-04 10:50:32,912:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:32,912:INFO:Initializing create_model()
2024-02-04 10:50:32,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:32,912:INFO:Checking exceptions
2024-02-04 10:50:32,912:INFO:Importing libraries
2024-02-04 10:50:32,912:INFO:Copying training dataset
2024-02-04 10:50:32,914:INFO:Defining folds
2024-02-04 10:50:32,914:INFO:Declaring metric variables
2024-02-04 10:50:32,914:INFO:Importing untrained model
2024-02-04 10:50:32,914:INFO:K Neighbors Regressor Imported successfully
2024-02-04 10:50:32,914:INFO:Starting cross validation
2024-02-04 10:50:32,915:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:32,972:INFO:Calculating mean and std
2024-02-04 10:50:32,972:INFO:Creating metrics dataframe
2024-02-04 10:50:32,974:INFO:Uploading results into container
2024-02-04 10:50:32,974:INFO:Uploading model into container now
2024-02-04 10:50:32,974:INFO:_master_model_container: 11
2024-02-04 10:50:32,974:INFO:_display_container: 2
2024-02-04 10:50:32,975:INFO:KNeighborsRegressor(n_jobs=-1)
2024-02-04 10:50:32,975:INFO:create_model() successfully completed......................................
2024-02-04 10:50:33,025:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:33,025:INFO:Creating metrics dataframe
2024-02-04 10:50:33,028:INFO:Initializing Decision Tree Regressor
2024-02-04 10:50:33,028:INFO:Total runtime is 0.11387439966201782 minutes
2024-02-04 10:50:33,028:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:33,028:INFO:Initializing create_model()
2024-02-04 10:50:33,028:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:33,028:INFO:Checking exceptions
2024-02-04 10:50:33,028:INFO:Importing libraries
2024-02-04 10:50:33,028:INFO:Copying training dataset
2024-02-04 10:50:33,029:INFO:Defining folds
2024-02-04 10:50:33,030:INFO:Declaring metric variables
2024-02-04 10:50:33,030:INFO:Importing untrained model
2024-02-04 10:50:33,030:INFO:Decision Tree Regressor Imported successfully
2024-02-04 10:50:33,030:INFO:Starting cross validation
2024-02-04 10:50:33,030:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:33,065:INFO:Calculating mean and std
2024-02-04 10:50:33,065:INFO:Creating metrics dataframe
2024-02-04 10:50:33,067:INFO:Uploading results into container
2024-02-04 10:50:33,067:INFO:Uploading model into container now
2024-02-04 10:50:33,067:INFO:_master_model_container: 12
2024-02-04 10:50:33,067:INFO:_display_container: 2
2024-02-04 10:50:33,068:INFO:DecisionTreeRegressor(random_state=123)
2024-02-04 10:50:33,068:INFO:create_model() successfully completed......................................
2024-02-04 10:50:33,121:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:33,121:INFO:Creating metrics dataframe
2024-02-04 10:50:33,124:INFO:Initializing Random Forest Regressor
2024-02-04 10:50:33,124:INFO:Total runtime is 0.11548357407251993 minutes
2024-02-04 10:50:33,124:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:33,124:INFO:Initializing create_model()
2024-02-04 10:50:33,124:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:33,124:INFO:Checking exceptions
2024-02-04 10:50:33,124:INFO:Importing libraries
2024-02-04 10:50:33,124:INFO:Copying training dataset
2024-02-04 10:50:33,126:INFO:Defining folds
2024-02-04 10:50:33,126:INFO:Declaring metric variables
2024-02-04 10:50:33,126:INFO:Importing untrained model
2024-02-04 10:50:33,126:INFO:Random Forest Regressor Imported successfully
2024-02-04 10:50:33,126:INFO:Starting cross validation
2024-02-04 10:50:33,126:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:33,318:INFO:Calculating mean and std
2024-02-04 10:50:33,319:INFO:Creating metrics dataframe
2024-02-04 10:50:33,320:INFO:Uploading results into container
2024-02-04 10:50:33,321:INFO:Uploading model into container now
2024-02-04 10:50:33,321:INFO:_master_model_container: 13
2024-02-04 10:50:33,321:INFO:_display_container: 2
2024-02-04 10:50:33,321:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-02-04 10:50:33,321:INFO:create_model() successfully completed......................................
2024-02-04 10:50:33,370:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:33,370:INFO:Creating metrics dataframe
2024-02-04 10:50:33,373:INFO:Initializing Extra Trees Regressor
2024-02-04 10:50:33,373:INFO:Total runtime is 0.11962615251541137 minutes
2024-02-04 10:50:33,373:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:33,373:INFO:Initializing create_model()
2024-02-04 10:50:33,373:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:33,373:INFO:Checking exceptions
2024-02-04 10:50:33,373:INFO:Importing libraries
2024-02-04 10:50:33,374:INFO:Copying training dataset
2024-02-04 10:50:33,375:INFO:Defining folds
2024-02-04 10:50:33,375:INFO:Declaring metric variables
2024-02-04 10:50:33,375:INFO:Importing untrained model
2024-02-04 10:50:33,375:INFO:Extra Trees Regressor Imported successfully
2024-02-04 10:50:33,375:INFO:Starting cross validation
2024-02-04 10:50:33,376:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:33,525:INFO:Calculating mean and std
2024-02-04 10:50:33,525:INFO:Creating metrics dataframe
2024-02-04 10:50:33,527:INFO:Uploading results into container
2024-02-04 10:50:33,527:INFO:Uploading model into container now
2024-02-04 10:50:33,527:INFO:_master_model_container: 14
2024-02-04 10:50:33,528:INFO:_display_container: 2
2024-02-04 10:50:33,528:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-02-04 10:50:33,528:INFO:create_model() successfully completed......................................
2024-02-04 10:50:33,580:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:33,580:INFO:Creating metrics dataframe
2024-02-04 10:50:33,582:INFO:Initializing AdaBoost Regressor
2024-02-04 10:50:33,582:INFO:Total runtime is 0.12311865488688149 minutes
2024-02-04 10:50:33,582:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:33,582:INFO:Initializing create_model()
2024-02-04 10:50:33,582:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:33,582:INFO:Checking exceptions
2024-02-04 10:50:33,582:INFO:Importing libraries
2024-02-04 10:50:33,582:INFO:Copying training dataset
2024-02-04 10:50:33,584:INFO:Defining folds
2024-02-04 10:50:33,584:INFO:Declaring metric variables
2024-02-04 10:50:33,584:INFO:Importing untrained model
2024-02-04 10:50:33,584:INFO:AdaBoost Regressor Imported successfully
2024-02-04 10:50:33,584:INFO:Starting cross validation
2024-02-04 10:50:33,584:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:33,622:INFO:Calculating mean and std
2024-02-04 10:50:33,622:INFO:Creating metrics dataframe
2024-02-04 10:50:33,623:INFO:Uploading results into container
2024-02-04 10:50:33,624:INFO:Uploading model into container now
2024-02-04 10:50:33,624:INFO:_master_model_container: 15
2024-02-04 10:50:33,624:INFO:_display_container: 2
2024-02-04 10:50:33,624:INFO:AdaBoostRegressor(random_state=123)
2024-02-04 10:50:33,624:INFO:create_model() successfully completed......................................
2024-02-04 10:50:33,677:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:33,678:INFO:Creating metrics dataframe
2024-02-04 10:50:33,680:INFO:Initializing Gradient Boosting Regressor
2024-02-04 10:50:33,680:INFO:Total runtime is 0.12474602858225503 minutes
2024-02-04 10:50:33,680:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:33,680:INFO:Initializing create_model()
2024-02-04 10:50:33,680:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:33,680:INFO:Checking exceptions
2024-02-04 10:50:33,680:INFO:Importing libraries
2024-02-04 10:50:33,680:INFO:Copying training dataset
2024-02-04 10:50:33,682:INFO:Defining folds
2024-02-04 10:50:33,682:INFO:Declaring metric variables
2024-02-04 10:50:33,682:INFO:Importing untrained model
2024-02-04 10:50:33,683:INFO:Gradient Boosting Regressor Imported successfully
2024-02-04 10:50:33,683:INFO:Starting cross validation
2024-02-04 10:50:33,683:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:33,753:INFO:Calculating mean and std
2024-02-04 10:50:33,753:INFO:Creating metrics dataframe
2024-02-04 10:50:33,755:INFO:Uploading results into container
2024-02-04 10:50:33,755:INFO:Uploading model into container now
2024-02-04 10:50:33,755:INFO:_master_model_container: 16
2024-02-04 10:50:33,755:INFO:_display_container: 2
2024-02-04 10:50:33,755:INFO:GradientBoostingRegressor(random_state=123)
2024-02-04 10:50:33,755:INFO:create_model() successfully completed......................................
2024-02-04 10:50:33,811:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:33,811:INFO:Creating metrics dataframe
2024-02-04 10:50:33,813:INFO:Initializing Extreme Gradient Boosting
2024-02-04 10:50:33,813:INFO:Total runtime is 0.12696189483006795 minutes
2024-02-04 10:50:33,813:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:33,813:INFO:Initializing create_model()
2024-02-04 10:50:33,813:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:33,813:INFO:Checking exceptions
2024-02-04 10:50:33,813:INFO:Importing libraries
2024-02-04 10:50:33,813:INFO:Copying training dataset
2024-02-04 10:50:33,815:INFO:Defining folds
2024-02-04 10:50:33,815:INFO:Declaring metric variables
2024-02-04 10:50:33,815:INFO:Importing untrained model
2024-02-04 10:50:33,815:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 10:50:33,815:INFO:Starting cross validation
2024-02-04 10:50:33,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:33,981:INFO:Calculating mean and std
2024-02-04 10:50:33,982:INFO:Creating metrics dataframe
2024-02-04 10:50:33,983:INFO:Uploading results into container
2024-02-04 10:50:33,984:INFO:Uploading model into container now
2024-02-04 10:50:33,984:INFO:_master_model_container: 17
2024-02-04 10:50:33,984:INFO:_display_container: 2
2024-02-04 10:50:33,984:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2024-02-04 10:50:33,984:INFO:create_model() successfully completed......................................
2024-02-04 10:50:34,037:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:34,037:INFO:Creating metrics dataframe
2024-02-04 10:50:34,039:INFO:Initializing Light Gradient Boosting Machine
2024-02-04 10:50:34,039:INFO:Total runtime is 0.1307265877723694 minutes
2024-02-04 10:50:34,040:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:34,040:INFO:Initializing create_model()
2024-02-04 10:50:34,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:34,040:INFO:Checking exceptions
2024-02-04 10:50:34,040:INFO:Importing libraries
2024-02-04 10:50:34,040:INFO:Copying training dataset
2024-02-04 10:50:34,041:INFO:Defining folds
2024-02-04 10:50:34,041:INFO:Declaring metric variables
2024-02-04 10:50:34,041:INFO:Importing untrained model
2024-02-04 10:50:34,041:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-04 10:50:34,042:INFO:Starting cross validation
2024-02-04 10:50:34,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:34,413:INFO:Calculating mean and std
2024-02-04 10:50:34,413:INFO:Creating metrics dataframe
2024-02-04 10:50:34,415:INFO:Uploading results into container
2024-02-04 10:50:34,416:INFO:Uploading model into container now
2024-02-04 10:50:34,416:INFO:_master_model_container: 18
2024-02-04 10:50:34,416:INFO:_display_container: 2
2024-02-04 10:50:34,416:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-02-04 10:50:34,416:INFO:create_model() successfully completed......................................
2024-02-04 10:50:34,481:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:34,481:INFO:Creating metrics dataframe
2024-02-04 10:50:34,485:INFO:Initializing CatBoost Regressor
2024-02-04 10:50:34,485:INFO:Total runtime is 0.13815330664316813 minutes
2024-02-04 10:50:34,485:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:34,485:INFO:Initializing create_model()
2024-02-04 10:50:34,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:34,485:INFO:Checking exceptions
2024-02-04 10:50:34,485:INFO:Importing libraries
2024-02-04 10:50:34,485:INFO:Copying training dataset
2024-02-04 10:50:34,487:INFO:Defining folds
2024-02-04 10:50:34,487:INFO:Declaring metric variables
2024-02-04 10:50:34,487:INFO:Importing untrained model
2024-02-04 10:50:34,490:INFO:CatBoost Regressor Imported successfully
2024-02-04 10:50:34,490:INFO:Starting cross validation
2024-02-04 10:50:34,491:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:36,001:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
2 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\catboost\core.py", line 5703, in fit
    return self._fit(X, y, cat_features, text_features, embedding_features, None, sample_weight, None, None, None, None, baseline,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\catboost\core.py", line 2319, in _fit
    self._train(
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\catboost\core.py", line 1723, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 4645, in _catboost._CatBoost._train
  File "_catboost.pyx", line 4694, in _catboost._CatBoost._train
_catboost.CatBoostError: C:/Go_Agent/pipelines/BuildMaster/catboost.git/catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-02-04 10:50:36,001:INFO:Calculating mean and std
2024-02-04 10:50:36,001:INFO:Creating metrics dataframe
2024-02-04 10:50:36,003:INFO:Uploading results into container
2024-02-04 10:50:36,003:INFO:Uploading model into container now
2024-02-04 10:50:36,003:INFO:_master_model_container: 19
2024-02-04 10:50:36,003:INFO:_display_container: 2
2024-02-04 10:50:36,003:INFO:<catboost.core.CatBoostRegressor object at 0x000002049F98F490>
2024-02-04 10:50:36,003:INFO:create_model() successfully completed......................................
2024-02-04 10:50:36,054:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:36,054:INFO:Creating metrics dataframe
2024-02-04 10:50:36,057:INFO:Initializing Dummy Regressor
2024-02-04 10:50:36,057:INFO:Total runtime is 0.16436163187026978 minutes
2024-02-04 10:50:36,057:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:36,057:INFO:Initializing create_model()
2024-02-04 10:50:36,057:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A30B0E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:36,057:INFO:Checking exceptions
2024-02-04 10:50:36,057:INFO:Importing libraries
2024-02-04 10:50:36,058:INFO:Copying training dataset
2024-02-04 10:50:36,059:INFO:Defining folds
2024-02-04 10:50:36,059:INFO:Declaring metric variables
2024-02-04 10:50:36,059:INFO:Importing untrained model
2024-02-04 10:50:36,059:INFO:Dummy Regressor Imported successfully
2024-02-04 10:50:36,059:INFO:Starting cross validation
2024-02-04 10:50:36,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:36,096:INFO:Calculating mean and std
2024-02-04 10:50:36,097:INFO:Creating metrics dataframe
2024-02-04 10:50:36,098:INFO:Uploading results into container
2024-02-04 10:50:36,099:INFO:Uploading model into container now
2024-02-04 10:50:36,099:INFO:_master_model_container: 20
2024-02-04 10:50:36,099:INFO:_display_container: 2
2024-02-04 10:50:36,099:INFO:DummyRegressor()
2024-02-04 10:50:36,099:INFO:create_model() successfully completed......................................
2024-02-04 10:50:36,151:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:36,151:INFO:Creating metrics dataframe
2024-02-04 10:50:36,154:INFO:Initializing create_model()
2024-02-04 10:50:36,155:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:36,155:INFO:Checking exceptions
2024-02-04 10:50:36,155:INFO:Importing libraries
2024-02-04 10:50:36,155:INFO:Copying training dataset
2024-02-04 10:50:36,156:INFO:Defining folds
2024-02-04 10:50:36,156:INFO:Declaring metric variables
2024-02-04 10:50:36,156:INFO:Importing untrained model
2024-02-04 10:50:36,156:INFO:Declaring custom model
2024-02-04 10:50:36,157:INFO:Gradient Boosting Regressor Imported successfully
2024-02-04 10:50:36,157:INFO:Cross validation set to False
2024-02-04 10:50:36,157:INFO:Fitting Model
2024-02-04 10:50:36,184:INFO:GradientBoostingRegressor(random_state=123)
2024-02-04 10:50:36,184:INFO:create_model() successfully completed......................................
2024-02-04 10:50:36,248:INFO:_master_model_container: 20
2024-02-04 10:50:36,248:INFO:_display_container: 2
2024-02-04 10:50:36,248:INFO:GradientBoostingRegressor(random_state=123)
2024-02-04 10:50:36,248:INFO:compare_models() successfully completed......................................
2024-02-04 10:50:36,248:INFO:Initializing tune_model()
2024-02-04 10:50:36,248:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-02-04 10:50:36,248:INFO:Checking exceptions
2024-02-04 10:50:36,249:INFO:Copying training dataset
2024-02-04 10:50:36,250:INFO:Checking base model
2024-02-04 10:50:36,250:INFO:Base model : Gradient Boosting Regressor
2024-02-04 10:50:36,250:INFO:Declaring metric variables
2024-02-04 10:50:36,250:INFO:Defining Hyperparameters
2024-02-04 10:50:36,304:INFO:Tuning with n_jobs=-1
2024-02-04 10:50:36,304:INFO:Initializing RandomizedSearchCV
2024-02-04 10:50:36,986:INFO:best_params: {'actual_estimator__subsample': 0.35, 'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.01}
2024-02-04 10:50:36,987:INFO:Hyperparameter search completed
2024-02-04 10:50:36,987:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:36,987:INFO:Initializing create_model()
2024-02-04 10:50:36,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204A2C070D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.35, 'n_estimators': 140, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.05, 'max_features': 'sqrt', 'max_depth': 7, 'learning_rate': 0.01})
2024-02-04 10:50:36,987:INFO:Checking exceptions
2024-02-04 10:50:36,987:INFO:Importing libraries
2024-02-04 10:50:36,987:INFO:Copying training dataset
2024-02-04 10:50:36,990:INFO:Defining folds
2024-02-04 10:50:36,991:INFO:Declaring metric variables
2024-02-04 10:50:36,991:INFO:Importing untrained model
2024-02-04 10:50:36,991:INFO:Declaring custom model
2024-02-04 10:50:36,991:INFO:Gradient Boosting Regressor Imported successfully
2024-02-04 10:50:36,992:INFO:Starting cross validation
2024-02-04 10:50:36,992:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:37,093:INFO:Calculating mean and std
2024-02-04 10:50:37,093:INFO:Creating metrics dataframe
2024-02-04 10:50:37,094:INFO:Finalizing model
2024-02-04 10:50:37,133:INFO:Uploading results into container
2024-02-04 10:50:37,133:INFO:Uploading model into container now
2024-02-04 10:50:37,133:INFO:_master_model_container: 21
2024-02-04 10:50:37,133:INFO:_display_container: 3
2024-02-04 10:50:37,134:INFO:GradientBoostingRegressor(learning_rate=0.01, max_depth=7, max_features='sqrt',
                          min_impurity_decrease=0.05, min_samples_leaf=2,
                          n_estimators=140, random_state=123, subsample=0.35)
2024-02-04 10:50:37,134:INFO:create_model() successfully completed......................................
2024-02-04 10:50:37,187:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:37,187:INFO:choose_better activated
2024-02-04 10:50:37,187:INFO:SubProcess create_model() called ==================================
2024-02-04 10:50:37,187:INFO:Initializing create_model()
2024-02-04 10:50:37,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 10:50:37,187:INFO:Checking exceptions
2024-02-04 10:50:37,188:INFO:Importing libraries
2024-02-04 10:50:37,188:INFO:Copying training dataset
2024-02-04 10:50:37,189:INFO:Defining folds
2024-02-04 10:50:37,189:INFO:Declaring metric variables
2024-02-04 10:50:37,190:INFO:Importing untrained model
2024-02-04 10:50:37,190:INFO:Declaring custom model
2024-02-04 10:50:37,190:INFO:Gradient Boosting Regressor Imported successfully
2024-02-04 10:50:37,190:INFO:Starting cross validation
2024-02-04 10:50:37,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 10:50:37,259:INFO:Calculating mean and std
2024-02-04 10:50:37,259:INFO:Creating metrics dataframe
2024-02-04 10:50:37,260:INFO:Finalizing model
2024-02-04 10:50:37,284:INFO:Uploading results into container
2024-02-04 10:50:37,285:INFO:Uploading model into container now
2024-02-04 10:50:37,285:INFO:_master_model_container: 22
2024-02-04 10:50:37,285:INFO:_display_container: 4
2024-02-04 10:50:37,285:INFO:GradientBoostingRegressor(random_state=123)
2024-02-04 10:50:37,285:INFO:create_model() successfully completed......................................
2024-02-04 10:50:37,337:INFO:SubProcess create_model() end ==================================
2024-02-04 10:50:37,338:INFO:GradientBoostingRegressor(random_state=123) result for R2 is 0.1681
2024-02-04 10:50:37,338:INFO:GradientBoostingRegressor(learning_rate=0.01, max_depth=7, max_features='sqrt',
                          min_impurity_decrease=0.05, min_samples_leaf=2,
                          n_estimators=140, random_state=123, subsample=0.35) result for R2 is 0.1319
2024-02-04 10:50:37,338:INFO:GradientBoostingRegressor(random_state=123) is best model
2024-02-04 10:50:37,338:INFO:choose_better completed
2024-02-04 10:50:37,338:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-02-04 10:50:37,343:INFO:_master_model_container: 22
2024-02-04 10:50:37,343:INFO:_display_container: 3
2024-02-04 10:50:37,344:INFO:GradientBoostingRegressor(random_state=123)
2024-02-04 10:50:37,344:INFO:tune_model() successfully completed......................................
2024-02-04 10:50:37,397:INFO:Initializing predict_model()
2024-02-04 10:50:37,397:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002049F902990>, estimator=GradientBoostingRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000204A2A28E00>)
2024-02-04 10:50:37,397:INFO:Checking exceptions
2024-02-04 10:50:37,397:INFO:Preloading libraries
2024-02-04 10:50:37,398:INFO:Set up data.
2024-02-04 10:50:37,399:INFO:Set up index.
2024-02-04 15:19:23,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:19:23,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:19:23,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:19:23,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:20:38,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:20:38,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:20:38,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:20:38,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:22:57,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:22:57,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:22:57,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:22:57,130:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:22:58,085:INFO:PyCaret ClassificationExperiment
2024-02-04 15:22:58,086:INFO:Logging name: clf-default-name
2024-02-04 15:22:58,086:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:22:58,086:INFO:version 3.2.0
2024-02-04 15:22:58,086:INFO:Initializing setup()
2024-02-04 15:22:58,086:INFO:self.USI: f571
2024-02-04 15:22:58,086:INFO:self._variable_keys: {'exp_id', 'fold_shuffle_param', 'data', 'pipeline', 'USI', 'fold_generator', 'y', 'html_param', 'X_train', 'logging_param', 'seed', 'fold_groups_param', 'exp_name_log', '_available_plots', 'y_test', 'gpu_n_jobs_param', 'X', '_ml_usecase', 'is_multiclass', 'n_jobs_param', 'X_test', 'fix_imbalance', 'y_train', 'memory', 'log_plots_param', 'idx', 'gpu_param', 'target_param'}
2024-02-04 15:22:58,086:INFO:Checking environment
2024-02-04 15:22:58,086:INFO:python_version: 3.11.7
2024-02-04 15:22:58,086:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:22:58,086:INFO:machine: AMD64
2024-02-04 15:22:58,095:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:22:58,100:INFO:Memory: svmem(total=16892026880, available=4459167744, percent=73.6, used=12432859136, free=4459167744)
2024-02-04 15:22:58,100:INFO:Physical Core: 12
2024-02-04 15:22:58,100:INFO:Logical Core: 16
2024-02-04 15:22:58,100:INFO:Checking libraries
2024-02-04 15:22:58,100:INFO:System:
2024-02-04 15:22:58,100:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:22:58,100:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:22:58,100:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:22:58,100:INFO:PyCaret required dependencies:
2024-02-04 15:22:58,157:INFO:                 pip: 23.3.2
2024-02-04 15:22:58,157:INFO:          setuptools: 65.5.0
2024-02-04 15:22:58,157:INFO:             pycaret: 3.2.0
2024-02-04 15:22:58,157:INFO:             IPython: 8.20.0
2024-02-04 15:22:58,157:INFO:          ipywidgets: 8.1.1
2024-02-04 15:22:58,157:INFO:                tqdm: 4.66.1
2024-02-04 15:22:58,157:INFO:               numpy: 1.25.2
2024-02-04 15:22:58,157:INFO:              pandas: 1.5.3
2024-02-04 15:22:58,157:INFO:              jinja2: 3.1.3
2024-02-04 15:22:58,157:INFO:               scipy: 1.10.1
2024-02-04 15:22:58,157:INFO:              joblib: 1.3.2
2024-02-04 15:22:58,157:INFO:             sklearn: 1.2.2
2024-02-04 15:22:58,157:INFO:                pyod: 1.1.2
2024-02-04 15:22:58,157:INFO:            imblearn: 0.12.0
2024-02-04 15:22:58,157:INFO:   category_encoders: 2.6.3
2024-02-04 15:22:58,157:INFO:            lightgbm: 4.3.0
2024-02-04 15:22:58,157:INFO:               numba: 0.58.1
2024-02-04 15:22:58,157:INFO:            requests: 2.31.0
2024-02-04 15:22:58,157:INFO:          matplotlib: 3.6.0
2024-02-04 15:22:58,157:INFO:          scikitplot: 0.3.7
2024-02-04 15:22:58,157:INFO:         yellowbrick: 1.5
2024-02-04 15:22:58,157:INFO:              plotly: 5.18.0
2024-02-04 15:22:58,157:INFO:    plotly-resampler: Not installed
2024-02-04 15:22:58,157:INFO:             kaleido: 0.2.1
2024-02-04 15:22:58,157:INFO:           schemdraw: 0.15
2024-02-04 15:22:58,157:INFO:         statsmodels: 0.14.1
2024-02-04 15:22:58,157:INFO:              sktime: 0.21.1
2024-02-04 15:22:58,157:INFO:               tbats: 1.1.3
2024-02-04 15:22:58,157:INFO:            pmdarima: 2.0.4
2024-02-04 15:22:58,157:INFO:              psutil: 5.9.8
2024-02-04 15:22:58,157:INFO:          markupsafe: 2.1.4
2024-02-04 15:22:58,157:INFO:             pickle5: Not installed
2024-02-04 15:22:58,157:INFO:         cloudpickle: 3.0.0
2024-02-04 15:22:58,157:INFO:         deprecation: 2.1.0
2024-02-04 15:22:58,157:INFO:              xxhash: 3.4.1
2024-02-04 15:22:58,157:INFO:           wurlitzer: Not installed
2024-02-04 15:22:58,157:INFO:PyCaret optional dependencies:
2024-02-04 15:22:58,217:INFO:                shap: Not installed
2024-02-04 15:22:58,217:INFO:           interpret: Not installed
2024-02-04 15:22:58,217:INFO:                umap: Not installed
2024-02-04 15:22:58,217:INFO:     ydata_profiling: Not installed
2024-02-04 15:22:58,217:INFO:  explainerdashboard: Not installed
2024-02-04 15:22:58,217:INFO:             autoviz: Not installed
2024-02-04 15:22:58,217:INFO:           fairlearn: Not installed
2024-02-04 15:22:58,217:INFO:          deepchecks: Not installed
2024-02-04 15:22:58,217:INFO:             xgboost: 2.0.3
2024-02-04 15:22:58,217:INFO:            catboost: 1.2.2
2024-02-04 15:22:58,217:INFO:              kmodes: Not installed
2024-02-04 15:22:58,217:INFO:             mlxtend: Not installed
2024-02-04 15:22:58,217:INFO:       statsforecast: Not installed
2024-02-04 15:22:58,217:INFO:        tune_sklearn: Not installed
2024-02-04 15:22:58,217:INFO:                 ray: Not installed
2024-02-04 15:22:58,217:INFO:            hyperopt: Not installed
2024-02-04 15:22:58,217:INFO:              optuna: Not installed
2024-02-04 15:22:58,217:INFO:               skopt: Not installed
2024-02-04 15:22:58,217:INFO:              mlflow: Not installed
2024-02-04 15:22:58,217:INFO:              gradio: Not installed
2024-02-04 15:22:58,217:INFO:             fastapi: Not installed
2024-02-04 15:22:58,217:INFO:             uvicorn: Not installed
2024-02-04 15:22:58,217:INFO:              m2cgen: Not installed
2024-02-04 15:22:58,217:INFO:           evidently: Not installed
2024-02-04 15:22:58,217:INFO:               fugue: Not installed
2024-02-04 15:22:58,217:INFO:           streamlit: Not installed
2024-02-04 15:22:58,217:INFO:             prophet: 1.1.5
2024-02-04 15:22:58,217:INFO:None
2024-02-04 15:22:58,217:INFO:Set up data.
2024-02-04 15:22:58,223:INFO:Set up folding strategy.
2024-02-04 15:22:58,223:INFO:Set up train/test split.
2024-02-04 15:22:58,228:INFO:Set up index.
2024-02-04 15:22:58,229:INFO:Assigning column types.
2024-02-04 15:22:58,231:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:22:58,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:22:58,259:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:22:58,281:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:22:58,282:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:22:58,398:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:22:58,398:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:22:58,416:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:22:58,417:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:22:58,418:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:22:58,443:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:22:58,459:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:22:58,460:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:22:58,487:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:22:58,503:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:22:58,504:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:22:58,504:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:22:58,546:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:22:58,548:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:22:58,592:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:22:58,594:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:22:58,596:INFO:Preparing preprocessing pipeline...
2024-02-04 15:22:58,599:INFO:Set up label encoding.
2024-02-04 15:22:58,599:INFO:Set up simple imputation.
2024-02-04 15:22:58,683:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:22:58,687:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:22:58,687:INFO:Creating final display dataframe.
2024-02-04 15:22:58,730:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                    10
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  f571
2024-02-04 15:22:58,771:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:22:58,773:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:22:58,815:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:22:58,816:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:22:58,817:INFO:setup() successfully completed in 0.74s...............
2024-02-04 15:22:58,817:INFO:Initializing create_model()
2024-02-04 15:22:58,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CCC299090>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:22:58,817:INFO:Checking exceptions
2024-02-04 15:22:58,819:INFO:Importing libraries
2024-02-04 15:22:58,819:INFO:Copying training dataset
2024-02-04 15:22:58,821:INFO:Defining folds
2024-02-04 15:22:58,821:INFO:Declaring metric variables
2024-02-04 15:22:58,822:INFO:Importing untrained model
2024-02-04 15:22:58,823:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:22:58,823:INFO:Starting cross validation
2024-02-04 15:22:58,824:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:23:02,341:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,343:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,343:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,344:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,346:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,346:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,346:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,348:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,348:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,368:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,369:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,370:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,507:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,508:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,509:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,577:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,578:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,580:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,594:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,596:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,597:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,603:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,606:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,608:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,610:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,611:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,613:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,618:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,621:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,622:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:02,633:INFO:Calculating mean and std
2024-02-04 15:23:02,643:INFO:Creating metrics dataframe
2024-02-04 15:23:02,645:INFO:Finalizing model
2024-02-04 15:23:02,690:INFO:Uploading results into container
2024-02-04 15:23:02,691:INFO:Uploading model into container now
2024-02-04 15:23:02,697:INFO:_master_model_container: 1
2024-02-04 15:23:02,697:INFO:_display_container: 2
2024-02-04 15:23:02,698:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:23:02,698:INFO:create_model() successfully completed......................................
2024-02-04 15:23:02,766:INFO:Initializing tune_model()
2024-02-04 15:23:02,766:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CCC299090>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-02-04 15:23:02,766:INFO:Checking exceptions
2024-02-04 15:23:02,770:INFO:Copying training dataset
2024-02-04 15:23:02,772:INFO:Checking base model
2024-02-04 15:23:02,772:INFO:Base model : Extreme Gradient Boosting
2024-02-04 15:23:02,773:INFO:Declaring metric variables
2024-02-04 15:23:02,773:INFO:Defining Hyperparameters
2024-02-04 15:23:02,833:INFO:Tuning with n_jobs=-1
2024-02-04 15:23:02,834:INFO:Initializing RandomizedSearchCV
2024-02-04 15:23:05,145:INFO:best_params: {'actual_estimator__subsample': 1, 'actual_estimator__scale_pos_weight': 35.1, 'actual_estimator__reg_lambda': 0.5, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__n_estimators': 100, 'actual_estimator__min_child_weight': 1, 'actual_estimator__max_depth': 1, 'actual_estimator__learning_rate': 0.5, 'actual_estimator__colsample_bytree': 1}
2024-02-04 15:23:05,145:INFO:Hyperparameter search completed
2024-02-04 15:23:05,145:INFO:SubProcess create_model() called ==================================
2024-02-04 15:23:05,146:INFO:Initializing create_model()
2024-02-04 15:23:05,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CCC299090>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024CD06A38D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 1, 'scale_pos_weight': 35.1, 'reg_lambda': 0.5, 'reg_alpha': 0.0005, 'n_estimators': 100, 'min_child_weight': 1, 'max_depth': 1, 'learning_rate': 0.5, 'colsample_bytree': 1})
2024-02-04 15:23:05,146:INFO:Checking exceptions
2024-02-04 15:23:05,146:INFO:Importing libraries
2024-02-04 15:23:05,146:INFO:Copying training dataset
2024-02-04 15:23:05,148:INFO:Defining folds
2024-02-04 15:23:05,148:INFO:Declaring metric variables
2024-02-04 15:23:05,148:INFO:Importing untrained model
2024-02-04 15:23:05,148:INFO:Declaring custom model
2024-02-04 15:23:05,149:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:23:05,149:INFO:Starting cross validation
2024-02-04 15:23:05,150:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:23:05,180:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,181:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,183:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,183:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,184:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,185:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,186:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,186:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,187:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,187:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,187:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,187:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,188:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,188:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,188:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,190:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,191:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,191:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,195:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,195:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,196:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,196:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,196:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,197:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,197:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,197:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,197:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,198:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,198:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,199:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,209:INFO:Calculating mean and std
2024-02-04 15:23:05,209:INFO:Creating metrics dataframe
2024-02-04 15:23:05,210:INFO:Finalizing model
2024-02-04 15:23:05,238:INFO:Uploading results into container
2024-02-04 15:23:05,239:INFO:Uploading model into container now
2024-02-04 15:23:05,239:INFO:_master_model_container: 2
2024-02-04 15:23:05,240:INFO:_display_container: 3
2024-02-04 15:23:05,240:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.5, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=1, max_leaves=None,
              min_child_weight=1, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:23:05,240:INFO:create_model() successfully completed......................................
2024-02-04 15:23:05,307:INFO:SubProcess create_model() end ==================================
2024-02-04 15:23:05,307:INFO:choose_better activated
2024-02-04 15:23:05,308:INFO:SubProcess create_model() called ==================================
2024-02-04 15:23:05,309:INFO:Initializing create_model()
2024-02-04 15:23:05,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024CCC299090>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:23:05,309:INFO:Checking exceptions
2024-02-04 15:23:05,310:INFO:Importing libraries
2024-02-04 15:23:05,310:INFO:Copying training dataset
2024-02-04 15:23:05,313:INFO:Defining folds
2024-02-04 15:23:05,313:INFO:Declaring metric variables
2024-02-04 15:23:05,313:INFO:Importing untrained model
2024-02-04 15:23:05,314:INFO:Declaring custom model
2024-02-04 15:23:05,315:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:23:05,315:INFO:Starting cross validation
2024-02-04 15:23:05,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:23:05,359:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,360:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,360:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,361:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,362:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,364:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,366:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,367:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,368:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,368:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,369:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,369:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,370:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,370:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,370:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,372:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,372:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,372:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,373:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,373:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,373:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,373:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,374:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,374:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,375:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,375:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,376:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,376:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,377:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:05,382:INFO:Calculating mean and std
2024-02-04 15:23:05,383:INFO:Creating metrics dataframe
2024-02-04 15:23:05,384:INFO:Finalizing model
2024-02-04 15:23:05,414:INFO:Uploading results into container
2024-02-04 15:23:05,415:INFO:Uploading model into container now
2024-02-04 15:23:05,415:INFO:_master_model_container: 3
2024-02-04 15:23:05,416:INFO:_display_container: 4
2024-02-04 15:23:05,416:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:23:05,416:INFO:create_model() successfully completed......................................
2024-02-04 15:23:05,481:INFO:SubProcess create_model() end ==================================
2024-02-04 15:23:05,481:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...) result for Accuracy is 0.9064
2024-02-04 15:23:05,483:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.5, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=1, max_leaves=None,
              min_child_weight=1, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...) result for Accuracy is 0.8618
2024-02-04 15:23:05,483:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...) is best model
2024-02-04 15:23:05,484:INFO:choose_better completed
2024-02-04 15:23:05,484:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-02-04 15:23:05,489:INFO:_master_model_container: 3
2024-02-04 15:23:05,489:INFO:_display_container: 3
2024-02-04 15:23:05,490:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:23:05,490:INFO:tune_model() successfully completed......................................
2024-02-04 15:23:37,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:23:37,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:23:37,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:23:37,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:23:37,962:INFO:PyCaret ClassificationExperiment
2024-02-04 15:23:37,962:INFO:Logging name: clf-default-name
2024-02-04 15:23:37,962:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:23:37,962:INFO:version 3.2.0
2024-02-04 15:23:37,962:INFO:Initializing setup()
2024-02-04 15:23:37,962:INFO:self.USI: 5051
2024-02-04 15:23:37,962:INFO:self._variable_keys: {'_available_plots', 'is_multiclass', 'fold_groups_param', 'y_train', 'data', 'exp_name_log', 'idx', 'html_param', 'fix_imbalance', 'USI', 'y_test', 'memory', 'y', 'n_jobs_param', 'pipeline', 'gpu_param', 'fold_shuffle_param', 'X_test', 'exp_id', 'fold_generator', 'X_train', '_ml_usecase', 'seed', 'logging_param', 'X', 'target_param', 'log_plots_param', 'gpu_n_jobs_param'}
2024-02-04 15:23:37,962:INFO:Checking environment
2024-02-04 15:23:37,963:INFO:python_version: 3.11.7
2024-02-04 15:23:37,963:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:23:37,963:INFO:machine: AMD64
2024-02-04 15:23:37,970:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:23:37,974:INFO:Memory: svmem(total=16892026880, available=4610306048, percent=72.7, used=12281720832, free=4610306048)
2024-02-04 15:23:37,974:INFO:Physical Core: 12
2024-02-04 15:23:37,974:INFO:Logical Core: 16
2024-02-04 15:23:37,974:INFO:Checking libraries
2024-02-04 15:23:37,974:INFO:System:
2024-02-04 15:23:37,974:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:23:37,974:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:23:37,974:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:23:37,975:INFO:PyCaret required dependencies:
2024-02-04 15:23:38,004:INFO:                 pip: 23.3.2
2024-02-04 15:23:38,004:INFO:          setuptools: 65.5.0
2024-02-04 15:23:38,004:INFO:             pycaret: 3.2.0
2024-02-04 15:23:38,004:INFO:             IPython: 8.20.0
2024-02-04 15:23:38,004:INFO:          ipywidgets: 8.1.1
2024-02-04 15:23:38,004:INFO:                tqdm: 4.66.1
2024-02-04 15:23:38,004:INFO:               numpy: 1.25.2
2024-02-04 15:23:38,004:INFO:              pandas: 1.5.3
2024-02-04 15:23:38,004:INFO:              jinja2: 3.1.3
2024-02-04 15:23:38,004:INFO:               scipy: 1.10.1
2024-02-04 15:23:38,004:INFO:              joblib: 1.3.2
2024-02-04 15:23:38,004:INFO:             sklearn: 1.2.2
2024-02-04 15:23:38,004:INFO:                pyod: 1.1.2
2024-02-04 15:23:38,004:INFO:            imblearn: 0.12.0
2024-02-04 15:23:38,004:INFO:   category_encoders: 2.6.3
2024-02-04 15:23:38,004:INFO:            lightgbm: 4.3.0
2024-02-04 15:23:38,004:INFO:               numba: 0.58.1
2024-02-04 15:23:38,005:INFO:            requests: 2.31.0
2024-02-04 15:23:38,005:INFO:          matplotlib: 3.6.0
2024-02-04 15:23:38,005:INFO:          scikitplot: 0.3.7
2024-02-04 15:23:38,005:INFO:         yellowbrick: 1.5
2024-02-04 15:23:38,005:INFO:              plotly: 5.18.0
2024-02-04 15:23:38,005:INFO:    plotly-resampler: Not installed
2024-02-04 15:23:38,005:INFO:             kaleido: 0.2.1
2024-02-04 15:23:38,005:INFO:           schemdraw: 0.15
2024-02-04 15:23:38,005:INFO:         statsmodels: 0.14.1
2024-02-04 15:23:38,005:INFO:              sktime: 0.21.1
2024-02-04 15:23:38,005:INFO:               tbats: 1.1.3
2024-02-04 15:23:38,005:INFO:            pmdarima: 2.0.4
2024-02-04 15:23:38,005:INFO:              psutil: 5.9.8
2024-02-04 15:23:38,005:INFO:          markupsafe: 2.1.4
2024-02-04 15:23:38,005:INFO:             pickle5: Not installed
2024-02-04 15:23:38,005:INFO:         cloudpickle: 3.0.0
2024-02-04 15:23:38,005:INFO:         deprecation: 2.1.0
2024-02-04 15:23:38,005:INFO:              xxhash: 3.4.1
2024-02-04 15:23:38,005:INFO:           wurlitzer: Not installed
2024-02-04 15:23:38,005:INFO:PyCaret optional dependencies:
2024-02-04 15:23:38,036:INFO:                shap: Not installed
2024-02-04 15:23:38,036:INFO:           interpret: Not installed
2024-02-04 15:23:38,036:INFO:                umap: Not installed
2024-02-04 15:23:38,036:INFO:     ydata_profiling: Not installed
2024-02-04 15:23:38,036:INFO:  explainerdashboard: Not installed
2024-02-04 15:23:38,036:INFO:             autoviz: Not installed
2024-02-04 15:23:38,036:INFO:           fairlearn: Not installed
2024-02-04 15:23:38,036:INFO:          deepchecks: Not installed
2024-02-04 15:23:38,036:INFO:             xgboost: 2.0.3
2024-02-04 15:23:38,036:INFO:            catboost: 1.2.2
2024-02-04 15:23:38,036:INFO:              kmodes: Not installed
2024-02-04 15:23:38,036:INFO:             mlxtend: Not installed
2024-02-04 15:23:38,036:INFO:       statsforecast: Not installed
2024-02-04 15:23:38,036:INFO:        tune_sklearn: Not installed
2024-02-04 15:23:38,036:INFO:                 ray: Not installed
2024-02-04 15:23:38,036:INFO:            hyperopt: Not installed
2024-02-04 15:23:38,036:INFO:              optuna: Not installed
2024-02-04 15:23:38,036:INFO:               skopt: Not installed
2024-02-04 15:23:38,036:INFO:              mlflow: Not installed
2024-02-04 15:23:38,036:INFO:              gradio: Not installed
2024-02-04 15:23:38,036:INFO:             fastapi: Not installed
2024-02-04 15:23:38,036:INFO:             uvicorn: Not installed
2024-02-04 15:23:38,036:INFO:              m2cgen: Not installed
2024-02-04 15:23:38,036:INFO:           evidently: Not installed
2024-02-04 15:23:38,036:INFO:               fugue: Not installed
2024-02-04 15:23:38,036:INFO:           streamlit: Not installed
2024-02-04 15:23:38,036:INFO:             prophet: 1.1.5
2024-02-04 15:23:38,036:INFO:None
2024-02-04 15:23:38,037:INFO:Set up data.
2024-02-04 15:23:38,042:INFO:Set up folding strategy.
2024-02-04 15:23:38,042:INFO:Set up train/test split.
2024-02-04 15:23:38,044:INFO:Set up index.
2024-02-04 15:23:38,045:INFO:Assigning column types.
2024-02-04 15:23:38,046:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:23:38,071:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:23:38,072:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:23:38,092:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:23:38,093:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:23:38,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:23:38,136:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:23:38,151:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:23:38,153:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:23:38,153:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:23:38,178:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:23:38,194:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:23:38,196:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:23:38,220:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:23:38,237:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:23:38,239:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:23:38,239:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:23:38,278:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:23:38,279:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:23:38,318:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:23:38,319:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:23:38,321:INFO:Preparing preprocessing pipeline...
2024-02-04 15:23:38,321:INFO:Set up label encoding.
2024-02-04 15:23:38,321:INFO:Set up simple imputation.
2024-02-04 15:23:38,399:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:23:38,402:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:23:38,402:INFO:Creating final display dataframe.
2024-02-04 15:23:38,440:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  5051
2024-02-04 15:23:38,480:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:23:38,483:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:23:38,522:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:23:38,523:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:23:38,524:INFO:setup() successfully completed in 0.56s...............
2024-02-04 15:23:38,524:INFO:Initializing create_model()
2024-02-04 15:23:38,524:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001694A31B4D0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:23:38,524:INFO:Checking exceptions
2024-02-04 15:23:38,526:INFO:Importing libraries
2024-02-04 15:23:38,526:INFO:Copying training dataset
2024-02-04 15:23:38,528:INFO:Defining folds
2024-02-04 15:23:38,528:INFO:Declaring metric variables
2024-02-04 15:23:38,528:INFO:Importing untrained model
2024-02-04 15:23:38,528:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:23:38,529:INFO:Starting cross validation
2024-02-04 15:23:38,529:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:23:41,025:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,026:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,027:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,160:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,162:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,163:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,171:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,173:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,175:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,186:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,187:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,188:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,196:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,197:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,199:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:41,205:INFO:Calculating mean and std
2024-02-04 15:23:41,205:INFO:Creating metrics dataframe
2024-02-04 15:23:41,207:INFO:Finalizing model
2024-02-04 15:23:41,262:INFO:Uploading results into container
2024-02-04 15:23:41,262:INFO:Uploading model into container now
2024-02-04 15:23:41,270:INFO:_master_model_container: 1
2024-02-04 15:23:41,270:INFO:_display_container: 2
2024-02-04 15:23:41,271:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:23:41,271:INFO:create_model() successfully completed......................................
2024-02-04 15:23:41,339:INFO:Initializing tune_model()
2024-02-04 15:23:41,339:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001694A31B4D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-02-04 15:23:41,339:INFO:Checking exceptions
2024-02-04 15:23:41,343:INFO:Copying training dataset
2024-02-04 15:23:41,344:INFO:Checking base model
2024-02-04 15:23:41,345:INFO:Base model : Extreme Gradient Boosting
2024-02-04 15:23:41,345:INFO:Declaring metric variables
2024-02-04 15:23:41,345:INFO:Defining Hyperparameters
2024-02-04 15:23:41,405:INFO:Tuning with n_jobs=-1
2024-02-04 15:23:41,405:INFO:Initializing RandomizedSearchCV
2024-02-04 15:23:44,613:INFO:best_params: {'actual_estimator__subsample': 1, 'actual_estimator__scale_pos_weight': 35.1, 'actual_estimator__reg_lambda': 0.5, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__n_estimators': 100, 'actual_estimator__min_child_weight': 1, 'actual_estimator__max_depth': 1, 'actual_estimator__learning_rate': 0.5, 'actual_estimator__colsample_bytree': 1}
2024-02-04 15:23:44,614:INFO:Hyperparameter search completed
2024-02-04 15:23:44,614:INFO:SubProcess create_model() called ==================================
2024-02-04 15:23:44,614:INFO:Initializing create_model()
2024-02-04 15:23:44,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001694A31B4D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001694E7BCA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 1, 'scale_pos_weight': 35.1, 'reg_lambda': 0.5, 'reg_alpha': 0.0005, 'n_estimators': 100, 'min_child_weight': 1, 'max_depth': 1, 'learning_rate': 0.5, 'colsample_bytree': 1})
2024-02-04 15:23:44,614:INFO:Checking exceptions
2024-02-04 15:23:44,614:INFO:Importing libraries
2024-02-04 15:23:44,614:INFO:Copying training dataset
2024-02-04 15:23:44,616:INFO:Defining folds
2024-02-04 15:23:44,616:INFO:Declaring metric variables
2024-02-04 15:23:44,616:INFO:Importing untrained model
2024-02-04 15:23:44,616:INFO:Declaring custom model
2024-02-04 15:23:44,617:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:23:44,617:INFO:Starting cross validation
2024-02-04 15:23:44,618:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:23:44,642:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,643:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,644:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,644:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,645:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,646:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,647:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,649:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,649:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,649:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,650:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,652:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,653:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,654:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,655:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,663:INFO:Calculating mean and std
2024-02-04 15:23:44,663:INFO:Creating metrics dataframe
2024-02-04 15:23:44,664:INFO:Finalizing model
2024-02-04 15:23:44,686:INFO:Uploading results into container
2024-02-04 15:23:44,687:INFO:Uploading model into container now
2024-02-04 15:23:44,687:INFO:_master_model_container: 2
2024-02-04 15:23:44,687:INFO:_display_container: 3
2024-02-04 15:23:44,688:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.5, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=1, max_leaves=None,
              min_child_weight=1, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:23:44,688:INFO:create_model() successfully completed......................................
2024-02-04 15:23:44,751:INFO:SubProcess create_model() end ==================================
2024-02-04 15:23:44,751:INFO:choose_better activated
2024-02-04 15:23:44,752:INFO:SubProcess create_model() called ==================================
2024-02-04 15:23:44,752:INFO:Initializing create_model()
2024-02-04 15:23:44,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001694A31B4D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:23:44,752:INFO:Checking exceptions
2024-02-04 15:23:44,753:INFO:Importing libraries
2024-02-04 15:23:44,753:INFO:Copying training dataset
2024-02-04 15:23:44,756:INFO:Defining folds
2024-02-04 15:23:44,756:INFO:Declaring metric variables
2024-02-04 15:23:44,757:INFO:Importing untrained model
2024-02-04 15:23:44,757:INFO:Declaring custom model
2024-02-04 15:23:44,758:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:23:44,758:INFO:Starting cross validation
2024-02-04 15:23:44,759:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:23:44,792:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,792:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,794:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,794:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,795:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,795:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,795:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,795:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,798:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,801:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,801:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,802:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,802:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,803:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,804:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:23:44,807:INFO:Calculating mean and std
2024-02-04 15:23:44,807:INFO:Creating metrics dataframe
2024-02-04 15:23:44,809:INFO:Finalizing model
2024-02-04 15:23:44,831:INFO:Uploading results into container
2024-02-04 15:23:44,831:INFO:Uploading model into container now
2024-02-04 15:23:44,831:INFO:_master_model_container: 3
2024-02-04 15:23:44,831:INFO:_display_container: 4
2024-02-04 15:23:44,831:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:23:44,832:INFO:create_model() successfully completed......................................
2024-02-04 15:23:44,898:INFO:SubProcess create_model() end ==================================
2024-02-04 15:23:44,899:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...) result for Accuracy is 0.926
2024-02-04 15:23:44,899:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.5, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=1, max_leaves=None,
              min_child_weight=1, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...) result for Accuracy is 0.8797
2024-02-04 15:23:44,900:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...) is best model
2024-02-04 15:23:44,900:INFO:choose_better completed
2024-02-04 15:23:44,900:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-02-04 15:23:44,904:INFO:_master_model_container: 3
2024-02-04 15:23:44,904:INFO:_display_container: 3
2024-02-04 15:23:44,905:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:23:44,905:INFO:tune_model() successfully completed......................................
2024-02-04 15:25:24,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:25:24,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:25:24,693:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:25:24,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:25:25,504:INFO:PyCaret ClassificationExperiment
2024-02-04 15:25:25,504:INFO:Logging name: clf-default-name
2024-02-04 15:25:25,504:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:25:25,504:INFO:version 3.2.0
2024-02-04 15:25:25,504:INFO:Initializing setup()
2024-02-04 15:25:25,504:INFO:self.USI: 4a45
2024-02-04 15:25:25,504:INFO:self._variable_keys: {'fold_generator', 'exp_name_log', 'seed', 'logging_param', 'log_plots_param', 'gpu_n_jobs_param', 'idx', 'X_train', 'X_test', '_available_plots', 'fold_shuffle_param', 'y', 'data', 'X', 'exp_id', 'memory', 'is_multiclass', 'gpu_param', 'y_train', 'html_param', 'n_jobs_param', 'fix_imbalance', 'y_test', 'pipeline', 'fold_groups_param', '_ml_usecase', 'target_param', 'USI'}
2024-02-04 15:25:25,504:INFO:Checking environment
2024-02-04 15:25:25,504:INFO:python_version: 3.11.7
2024-02-04 15:25:25,504:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:25:25,505:INFO:machine: AMD64
2024-02-04 15:25:25,514:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:25:25,518:INFO:Memory: svmem(total=16892026880, available=4477566976, percent=73.5, used=12414459904, free=4477566976)
2024-02-04 15:25:25,518:INFO:Physical Core: 12
2024-02-04 15:25:25,518:INFO:Logical Core: 16
2024-02-04 15:25:25,518:INFO:Checking libraries
2024-02-04 15:25:25,518:INFO:System:
2024-02-04 15:25:25,518:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:25:25,518:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:25:25,518:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:25:25,518:INFO:PyCaret required dependencies:
2024-02-04 15:25:25,545:INFO:                 pip: 23.3.2
2024-02-04 15:25:25,545:INFO:          setuptools: 65.5.0
2024-02-04 15:25:25,545:INFO:             pycaret: 3.2.0
2024-02-04 15:25:25,545:INFO:             IPython: 8.20.0
2024-02-04 15:25:25,545:INFO:          ipywidgets: 8.1.1
2024-02-04 15:25:25,545:INFO:                tqdm: 4.66.1
2024-02-04 15:25:25,545:INFO:               numpy: 1.25.2
2024-02-04 15:25:25,545:INFO:              pandas: 1.5.3
2024-02-04 15:25:25,545:INFO:              jinja2: 3.1.3
2024-02-04 15:25:25,545:INFO:               scipy: 1.10.1
2024-02-04 15:25:25,545:INFO:              joblib: 1.3.2
2024-02-04 15:25:25,545:INFO:             sklearn: 1.2.2
2024-02-04 15:25:25,545:INFO:                pyod: 1.1.2
2024-02-04 15:25:25,545:INFO:            imblearn: 0.12.0
2024-02-04 15:25:25,545:INFO:   category_encoders: 2.6.3
2024-02-04 15:25:25,545:INFO:            lightgbm: 4.3.0
2024-02-04 15:25:25,545:INFO:               numba: 0.58.1
2024-02-04 15:25:25,545:INFO:            requests: 2.31.0
2024-02-04 15:25:25,545:INFO:          matplotlib: 3.6.0
2024-02-04 15:25:25,545:INFO:          scikitplot: 0.3.7
2024-02-04 15:25:25,545:INFO:         yellowbrick: 1.5
2024-02-04 15:25:25,547:INFO:              plotly: 5.18.0
2024-02-04 15:25:25,547:INFO:    plotly-resampler: Not installed
2024-02-04 15:25:25,547:INFO:             kaleido: 0.2.1
2024-02-04 15:25:25,547:INFO:           schemdraw: 0.15
2024-02-04 15:25:25,547:INFO:         statsmodels: 0.14.1
2024-02-04 15:25:25,547:INFO:              sktime: 0.21.1
2024-02-04 15:25:25,547:INFO:               tbats: 1.1.3
2024-02-04 15:25:25,547:INFO:            pmdarima: 2.0.4
2024-02-04 15:25:25,547:INFO:              psutil: 5.9.8
2024-02-04 15:25:25,547:INFO:          markupsafe: 2.1.4
2024-02-04 15:25:25,547:INFO:             pickle5: Not installed
2024-02-04 15:25:25,547:INFO:         cloudpickle: 3.0.0
2024-02-04 15:25:25,547:INFO:         deprecation: 2.1.0
2024-02-04 15:25:25,547:INFO:              xxhash: 3.4.1
2024-02-04 15:25:25,547:INFO:           wurlitzer: Not installed
2024-02-04 15:25:25,547:INFO:PyCaret optional dependencies:
2024-02-04 15:25:25,577:INFO:                shap: Not installed
2024-02-04 15:25:25,577:INFO:           interpret: Not installed
2024-02-04 15:25:25,577:INFO:                umap: Not installed
2024-02-04 15:25:25,577:INFO:     ydata_profiling: Not installed
2024-02-04 15:25:25,577:INFO:  explainerdashboard: Not installed
2024-02-04 15:25:25,577:INFO:             autoviz: Not installed
2024-02-04 15:25:25,577:INFO:           fairlearn: Not installed
2024-02-04 15:25:25,577:INFO:          deepchecks: Not installed
2024-02-04 15:25:25,577:INFO:             xgboost: 2.0.3
2024-02-04 15:25:25,577:INFO:            catboost: 1.2.2
2024-02-04 15:25:25,577:INFO:              kmodes: Not installed
2024-02-04 15:25:25,577:INFO:             mlxtend: Not installed
2024-02-04 15:25:25,577:INFO:       statsforecast: Not installed
2024-02-04 15:25:25,577:INFO:        tune_sklearn: Not installed
2024-02-04 15:25:25,577:INFO:                 ray: Not installed
2024-02-04 15:25:25,577:INFO:            hyperopt: Not installed
2024-02-04 15:25:25,577:INFO:              optuna: Not installed
2024-02-04 15:25:25,577:INFO:               skopt: Not installed
2024-02-04 15:25:25,577:INFO:              mlflow: Not installed
2024-02-04 15:25:25,577:INFO:              gradio: Not installed
2024-02-04 15:25:25,577:INFO:             fastapi: Not installed
2024-02-04 15:25:25,577:INFO:             uvicorn: Not installed
2024-02-04 15:25:25,577:INFO:              m2cgen: Not installed
2024-02-04 15:25:25,577:INFO:           evidently: Not installed
2024-02-04 15:25:25,577:INFO:               fugue: Not installed
2024-02-04 15:25:25,578:INFO:           streamlit: Not installed
2024-02-04 15:25:25,578:INFO:             prophet: 1.1.5
2024-02-04 15:25:25,578:INFO:None
2024-02-04 15:25:25,578:INFO:Set up data.
2024-02-04 15:25:25,582:INFO:Set up folding strategy.
2024-02-04 15:25:25,582:INFO:Set up train/test split.
2024-02-04 15:25:25,585:INFO:Set up index.
2024-02-04 15:25:25,585:INFO:Assigning column types.
2024-02-04 15:25:25,586:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:25:25,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:25:25,610:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:25:25,627:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:25:25,629:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:25:25,672:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:25:25,673:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:25:25,687:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:25:25,689:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:25:25,689:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:25:25,713:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:25:25,727:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:25:25,729:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:25:25,753:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:25:25,768:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:25:25,770:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:25:25,770:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:25:25,809:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:25:25,810:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:25:25,851:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:25:25,853:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:25:25,854:INFO:Preparing preprocessing pipeline...
2024-02-04 15:25:25,855:INFO:Set up label encoding.
2024-02-04 15:25:25,855:INFO:Set up simple imputation.
2024-02-04 15:25:25,930:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:25:25,933:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:25:25,933:INFO:Creating final display dataframe.
2024-02-04 15:25:25,972:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  4a45
2024-02-04 15:25:26,014:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:25:26,015:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:25:26,055:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:25:26,056:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:25:26,057:INFO:setup() successfully completed in 0.55s...............
2024-02-04 15:25:26,057:INFO:Initializing create_model()
2024-02-04 15:25:26,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D7F987350>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:25:26,057:INFO:Checking exceptions
2024-02-04 15:25:26,058:INFO:Importing libraries
2024-02-04 15:25:26,058:INFO:Copying training dataset
2024-02-04 15:25:26,060:INFO:Defining folds
2024-02-04 15:25:26,060:INFO:Declaring metric variables
2024-02-04 15:25:26,060:INFO:Importing untrained model
2024-02-04 15:25:26,060:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:25:26,060:INFO:Starting cross validation
2024-02-04 15:25:26,062:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:25:28,617:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,618:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,620:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,630:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,631:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,632:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,735:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,736:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,737:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,738:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,740:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,741:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,749:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,753:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,755:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:25:28,759:INFO:Calculating mean and std
2024-02-04 15:25:28,759:INFO:Creating metrics dataframe
2024-02-04 15:25:28,762:INFO:Finalizing model
2024-02-04 15:25:28,817:INFO:Uploading results into container
2024-02-04 15:25:28,818:INFO:Uploading model into container now
2024-02-04 15:25:28,823:INFO:_master_model_container: 1
2024-02-04 15:25:28,823:INFO:_display_container: 2
2024-02-04 15:25:28,824:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:25:28,824:INFO:create_model() successfully completed......................................
2024-02-04 15:25:28,891:INFO:Initializing predict_model()
2024-02-04 15:25:28,891:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D7F987350>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020D6A556660>)
2024-02-04 15:25:28,891:INFO:Checking exceptions
2024-02-04 15:25:28,892:INFO:Preloading libraries
2024-02-04 15:25:28,892:INFO:Set up data.
2024-02-04 15:25:28,893:INFO:Set up index.
2024-02-04 15:26:20,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:26:20,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:26:20,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:26:20,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:26:21,746:INFO:PyCaret ClassificationExperiment
2024-02-04 15:26:21,746:INFO:Logging name: clf-default-name
2024-02-04 15:26:21,746:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:26:21,746:INFO:version 3.2.0
2024-02-04 15:26:21,746:INFO:Initializing setup()
2024-02-04 15:26:21,746:INFO:self.USI: 2fd0
2024-02-04 15:26:21,746:INFO:self._variable_keys: {'exp_name_log', 'idx', 'seed', 'X', 'pipeline', 'memory', 'is_multiclass', 'X_train', 'gpu_param', 'data', 'exp_id', 'n_jobs_param', '_ml_usecase', 'fold_groups_param', 'fold_generator', 'gpu_n_jobs_param', 'y', 'fix_imbalance', 'fold_shuffle_param', '_available_plots', 'USI', 'y_test', 'y_train', 'target_param', 'html_param', 'logging_param', 'X_test', 'log_plots_param'}
2024-02-04 15:26:21,746:INFO:Checking environment
2024-02-04 15:26:21,746:INFO:python_version: 3.11.7
2024-02-04 15:26:21,746:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:26:21,746:INFO:machine: AMD64
2024-02-04 15:26:21,755:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:26:21,760:INFO:Memory: svmem(total=16892026880, available=4384460800, percent=74.0, used=12507566080, free=4384460800)
2024-02-04 15:26:21,760:INFO:Physical Core: 12
2024-02-04 15:26:21,760:INFO:Logical Core: 16
2024-02-04 15:26:21,761:INFO:Checking libraries
2024-02-04 15:26:21,761:INFO:System:
2024-02-04 15:26:21,761:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:26:21,761:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:26:21,761:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:26:21,761:INFO:PyCaret required dependencies:
2024-02-04 15:26:21,791:INFO:                 pip: 23.3.2
2024-02-04 15:26:21,792:INFO:          setuptools: 65.5.0
2024-02-04 15:26:21,792:INFO:             pycaret: 3.2.0
2024-02-04 15:26:21,792:INFO:             IPython: 8.20.0
2024-02-04 15:26:21,792:INFO:          ipywidgets: 8.1.1
2024-02-04 15:26:21,792:INFO:                tqdm: 4.66.1
2024-02-04 15:26:21,792:INFO:               numpy: 1.25.2
2024-02-04 15:26:21,792:INFO:              pandas: 1.5.3
2024-02-04 15:26:21,792:INFO:              jinja2: 3.1.3
2024-02-04 15:26:21,792:INFO:               scipy: 1.10.1
2024-02-04 15:26:21,792:INFO:              joblib: 1.3.2
2024-02-04 15:26:21,792:INFO:             sklearn: 1.2.2
2024-02-04 15:26:21,792:INFO:                pyod: 1.1.2
2024-02-04 15:26:21,792:INFO:            imblearn: 0.12.0
2024-02-04 15:26:21,792:INFO:   category_encoders: 2.6.3
2024-02-04 15:26:21,792:INFO:            lightgbm: 4.3.0
2024-02-04 15:26:21,792:INFO:               numba: 0.58.1
2024-02-04 15:26:21,792:INFO:            requests: 2.31.0
2024-02-04 15:26:21,792:INFO:          matplotlib: 3.6.0
2024-02-04 15:26:21,792:INFO:          scikitplot: 0.3.7
2024-02-04 15:26:21,792:INFO:         yellowbrick: 1.5
2024-02-04 15:26:21,792:INFO:              plotly: 5.18.0
2024-02-04 15:26:21,792:INFO:    plotly-resampler: Not installed
2024-02-04 15:26:21,792:INFO:             kaleido: 0.2.1
2024-02-04 15:26:21,792:INFO:           schemdraw: 0.15
2024-02-04 15:26:21,792:INFO:         statsmodels: 0.14.1
2024-02-04 15:26:21,792:INFO:              sktime: 0.21.1
2024-02-04 15:26:21,792:INFO:               tbats: 1.1.3
2024-02-04 15:26:21,792:INFO:            pmdarima: 2.0.4
2024-02-04 15:26:21,792:INFO:              psutil: 5.9.8
2024-02-04 15:26:21,792:INFO:          markupsafe: 2.1.4
2024-02-04 15:26:21,792:INFO:             pickle5: Not installed
2024-02-04 15:26:21,792:INFO:         cloudpickle: 3.0.0
2024-02-04 15:26:21,792:INFO:         deprecation: 2.1.0
2024-02-04 15:26:21,792:INFO:              xxhash: 3.4.1
2024-02-04 15:26:21,792:INFO:           wurlitzer: Not installed
2024-02-04 15:26:21,792:INFO:PyCaret optional dependencies:
2024-02-04 15:26:21,825:INFO:                shap: Not installed
2024-02-04 15:26:21,825:INFO:           interpret: Not installed
2024-02-04 15:26:21,826:INFO:                umap: Not installed
2024-02-04 15:26:21,826:INFO:     ydata_profiling: Not installed
2024-02-04 15:26:21,826:INFO:  explainerdashboard: Not installed
2024-02-04 15:26:21,826:INFO:             autoviz: Not installed
2024-02-04 15:26:21,826:INFO:           fairlearn: Not installed
2024-02-04 15:26:21,826:INFO:          deepchecks: Not installed
2024-02-04 15:26:21,826:INFO:             xgboost: 2.0.3
2024-02-04 15:26:21,826:INFO:            catboost: 1.2.2
2024-02-04 15:26:21,826:INFO:              kmodes: Not installed
2024-02-04 15:26:21,826:INFO:             mlxtend: Not installed
2024-02-04 15:26:21,826:INFO:       statsforecast: Not installed
2024-02-04 15:26:21,826:INFO:        tune_sklearn: Not installed
2024-02-04 15:26:21,826:INFO:                 ray: Not installed
2024-02-04 15:26:21,826:INFO:            hyperopt: Not installed
2024-02-04 15:26:21,826:INFO:              optuna: Not installed
2024-02-04 15:26:21,826:INFO:               skopt: Not installed
2024-02-04 15:26:21,826:INFO:              mlflow: Not installed
2024-02-04 15:26:21,826:INFO:              gradio: Not installed
2024-02-04 15:26:21,826:INFO:             fastapi: Not installed
2024-02-04 15:26:21,826:INFO:             uvicorn: Not installed
2024-02-04 15:26:21,826:INFO:              m2cgen: Not installed
2024-02-04 15:26:21,826:INFO:           evidently: Not installed
2024-02-04 15:26:21,826:INFO:               fugue: Not installed
2024-02-04 15:26:21,826:INFO:           streamlit: Not installed
2024-02-04 15:26:21,826:INFO:             prophet: 1.1.5
2024-02-04 15:26:21,826:INFO:None
2024-02-04 15:26:21,826:INFO:Set up data.
2024-02-04 15:26:21,830:INFO:Set up folding strategy.
2024-02-04 15:26:21,830:INFO:Set up train/test split.
2024-02-04 15:26:21,832:INFO:Set up index.
2024-02-04 15:26:21,832:INFO:Assigning column types.
2024-02-04 15:26:21,834:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:26:21,859:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:26:21,860:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:26:21,879:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:26:21,880:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:26:21,926:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:26:21,927:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:26:21,942:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:26:21,943:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:26:21,943:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:26:21,967:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:26:21,982:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:26:21,983:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:26:22,007:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:26:22,022:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:26:22,023:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:26:22,023:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:26:22,062:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:26:22,063:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:26:22,106:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:26:22,108:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:26:22,109:INFO:Preparing preprocessing pipeline...
2024-02-04 15:26:22,110:INFO:Set up label encoding.
2024-02-04 15:26:22,110:INFO:Set up simple imputation.
2024-02-04 15:26:22,190:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:26:22,192:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:26:22,192:INFO:Creating final display dataframe.
2024-02-04 15:26:22,232:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  2fd0
2024-02-04 15:26:22,276:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:26:22,278:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:26:22,317:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:26:22,319:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:26:22,320:INFO:setup() successfully completed in 0.58s...............
2024-02-04 15:26:22,320:INFO:Initializing create_model()
2024-02-04 15:26:22,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022BDE24AC10>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:26:22,320:INFO:Checking exceptions
2024-02-04 15:26:22,323:INFO:Importing libraries
2024-02-04 15:26:22,323:INFO:Copying training dataset
2024-02-04 15:26:22,325:INFO:Defining folds
2024-02-04 15:26:22,325:INFO:Declaring metric variables
2024-02-04 15:26:22,325:INFO:Importing untrained model
2024-02-04 15:26:22,325:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:26:22,325:INFO:Starting cross validation
2024-02-04 15:26:22,326:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:26:25,034:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,036:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,037:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,176:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,178:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,179:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,194:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,195:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,196:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,201:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,203:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,205:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,213:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,215:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:26:25,222:INFO:Calculating mean and std
2024-02-04 15:26:25,223:INFO:Creating metrics dataframe
2024-02-04 15:26:25,224:INFO:Finalizing model
2024-02-04 15:26:25,280:INFO:Uploading results into container
2024-02-04 15:26:25,281:INFO:Uploading model into container now
2024-02-04 15:26:25,285:INFO:_master_model_container: 1
2024-02-04 15:26:25,286:INFO:_display_container: 2
2024-02-04 15:26:25,286:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:26:25,286:INFO:create_model() successfully completed......................................
2024-02-04 15:26:25,353:INFO:Initializing predict_model()
2024-02-04 15:26:25,353:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022BDE24AC10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022BBAE265C0>)
2024-02-04 15:26:25,354:INFO:Checking exceptions
2024-02-04 15:26:25,354:INFO:Preloading libraries
2024-02-04 15:26:25,354:INFO:Set up data.
2024-02-04 15:26:25,356:INFO:Set up index.
2024-02-04 15:27:33,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:27:33,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:27:33,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:27:33,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:27:34,659:INFO:PyCaret ClassificationExperiment
2024-02-04 15:27:34,659:INFO:Logging name: clf-default-name
2024-02-04 15:27:34,659:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:27:34,659:INFO:version 3.2.0
2024-02-04 15:27:34,659:INFO:Initializing setup()
2024-02-04 15:27:34,659:INFO:self.USI: 2aca
2024-02-04 15:27:34,659:INFO:self._variable_keys: {'USI', 'memory', 'html_param', 'gpu_n_jobs_param', 'n_jobs_param', '_available_plots', 'exp_name_log', 'X', 'y_test', 'X_test', 'fix_imbalance', 'y', '_ml_usecase', 'logging_param', 'idx', 'is_multiclass', 'seed', 'y_train', 'target_param', 'pipeline', 'X_train', 'log_plots_param', 'gpu_param', 'exp_id', 'data', 'fold_shuffle_param', 'fold_groups_param', 'fold_generator'}
2024-02-04 15:27:34,659:INFO:Checking environment
2024-02-04 15:27:34,659:INFO:python_version: 3.11.7
2024-02-04 15:27:34,659:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:27:34,659:INFO:machine: AMD64
2024-02-04 15:27:34,668:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:27:34,672:INFO:Memory: svmem(total=16892026880, available=4227137536, percent=75.0, used=12664889344, free=4227137536)
2024-02-04 15:27:34,672:INFO:Physical Core: 12
2024-02-04 15:27:34,672:INFO:Logical Core: 16
2024-02-04 15:27:34,672:INFO:Checking libraries
2024-02-04 15:27:34,672:INFO:System:
2024-02-04 15:27:34,672:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:27:34,672:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:27:34,672:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:27:34,672:INFO:PyCaret required dependencies:
2024-02-04 15:27:34,705:INFO:                 pip: 23.3.2
2024-02-04 15:27:34,705:INFO:          setuptools: 65.5.0
2024-02-04 15:27:34,705:INFO:             pycaret: 3.2.0
2024-02-04 15:27:34,705:INFO:             IPython: 8.20.0
2024-02-04 15:27:34,705:INFO:          ipywidgets: 8.1.1
2024-02-04 15:27:34,705:INFO:                tqdm: 4.66.1
2024-02-04 15:27:34,705:INFO:               numpy: 1.25.2
2024-02-04 15:27:34,705:INFO:              pandas: 1.5.3
2024-02-04 15:27:34,706:INFO:              jinja2: 3.1.3
2024-02-04 15:27:34,706:INFO:               scipy: 1.10.1
2024-02-04 15:27:34,706:INFO:              joblib: 1.3.2
2024-02-04 15:27:34,706:INFO:             sklearn: 1.2.2
2024-02-04 15:27:34,706:INFO:                pyod: 1.1.2
2024-02-04 15:27:34,706:INFO:            imblearn: 0.12.0
2024-02-04 15:27:34,706:INFO:   category_encoders: 2.6.3
2024-02-04 15:27:34,706:INFO:            lightgbm: 4.3.0
2024-02-04 15:27:34,706:INFO:               numba: 0.58.1
2024-02-04 15:27:34,706:INFO:            requests: 2.31.0
2024-02-04 15:27:34,706:INFO:          matplotlib: 3.6.0
2024-02-04 15:27:34,706:INFO:          scikitplot: 0.3.7
2024-02-04 15:27:34,706:INFO:         yellowbrick: 1.5
2024-02-04 15:27:34,706:INFO:              plotly: 5.18.0
2024-02-04 15:27:34,706:INFO:    plotly-resampler: Not installed
2024-02-04 15:27:34,706:INFO:             kaleido: 0.2.1
2024-02-04 15:27:34,706:INFO:           schemdraw: 0.15
2024-02-04 15:27:34,706:INFO:         statsmodels: 0.14.1
2024-02-04 15:27:34,706:INFO:              sktime: 0.21.1
2024-02-04 15:27:34,706:INFO:               tbats: 1.1.3
2024-02-04 15:27:34,706:INFO:            pmdarima: 2.0.4
2024-02-04 15:27:34,706:INFO:              psutil: 5.9.8
2024-02-04 15:27:34,706:INFO:          markupsafe: 2.1.4
2024-02-04 15:27:34,706:INFO:             pickle5: Not installed
2024-02-04 15:27:34,706:INFO:         cloudpickle: 3.0.0
2024-02-04 15:27:34,706:INFO:         deprecation: 2.1.0
2024-02-04 15:27:34,706:INFO:              xxhash: 3.4.1
2024-02-04 15:27:34,706:INFO:           wurlitzer: Not installed
2024-02-04 15:27:34,706:INFO:PyCaret optional dependencies:
2024-02-04 15:27:34,736:INFO:                shap: Not installed
2024-02-04 15:27:34,737:INFO:           interpret: Not installed
2024-02-04 15:27:34,737:INFO:                umap: Not installed
2024-02-04 15:27:34,737:INFO:     ydata_profiling: Not installed
2024-02-04 15:27:34,737:INFO:  explainerdashboard: Not installed
2024-02-04 15:27:34,737:INFO:             autoviz: Not installed
2024-02-04 15:27:34,737:INFO:           fairlearn: Not installed
2024-02-04 15:27:34,737:INFO:          deepchecks: Not installed
2024-02-04 15:27:34,737:INFO:             xgboost: 2.0.3
2024-02-04 15:27:34,737:INFO:            catboost: 1.2.2
2024-02-04 15:27:34,737:INFO:              kmodes: Not installed
2024-02-04 15:27:34,737:INFO:             mlxtend: Not installed
2024-02-04 15:27:34,737:INFO:       statsforecast: Not installed
2024-02-04 15:27:34,737:INFO:        tune_sklearn: Not installed
2024-02-04 15:27:34,737:INFO:                 ray: Not installed
2024-02-04 15:27:34,737:INFO:            hyperopt: Not installed
2024-02-04 15:27:34,737:INFO:              optuna: Not installed
2024-02-04 15:27:34,737:INFO:               skopt: Not installed
2024-02-04 15:27:34,737:INFO:              mlflow: Not installed
2024-02-04 15:27:34,737:INFO:              gradio: Not installed
2024-02-04 15:27:34,737:INFO:             fastapi: Not installed
2024-02-04 15:27:34,737:INFO:             uvicorn: Not installed
2024-02-04 15:27:34,737:INFO:              m2cgen: Not installed
2024-02-04 15:27:34,737:INFO:           evidently: Not installed
2024-02-04 15:27:34,737:INFO:               fugue: Not installed
2024-02-04 15:27:34,737:INFO:           streamlit: Not installed
2024-02-04 15:27:34,737:INFO:             prophet: 1.1.5
2024-02-04 15:27:34,737:INFO:None
2024-02-04 15:27:34,737:INFO:Set up data.
2024-02-04 15:27:34,742:INFO:Set up folding strategy.
2024-02-04 15:27:34,742:INFO:Set up train/test split.
2024-02-04 15:27:34,744:INFO:Set up index.
2024-02-04 15:27:34,744:INFO:Assigning column types.
2024-02-04 15:27:34,746:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:27:34,771:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:27:34,772:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:27:34,792:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:34,794:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:34,837:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:27:34,837:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:27:34,854:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:34,856:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:34,856:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:27:34,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:27:34,897:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:34,898:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:34,923:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:27:34,939:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:34,941:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:34,942:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:27:34,983:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:34,985:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:35,027:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:35,029:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:35,030:INFO:Preparing preprocessing pipeline...
2024-02-04 15:27:35,031:INFO:Set up label encoding.
2024-02-04 15:27:35,031:INFO:Set up simple imputation.
2024-02-04 15:27:35,113:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:27:35,116:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:27:35,116:INFO:Creating final display dataframe.
2024-02-04 15:27:35,160:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  2aca
2024-02-04 15:27:35,205:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:35,207:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:35,248:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:35,250:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:35,250:INFO:setup() successfully completed in 0.59s...............
2024-02-04 15:27:35,250:INFO:Initializing create_model()
2024-02-04 15:27:35,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002913407AF10>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:27:35,250:INFO:Checking exceptions
2024-02-04 15:27:35,252:INFO:Importing libraries
2024-02-04 15:27:35,252:INFO:Copying training dataset
2024-02-04 15:27:35,254:INFO:Defining folds
2024-02-04 15:27:35,254:INFO:Declaring metric variables
2024-02-04 15:27:35,254:INFO:Importing untrained model
2024-02-04 15:27:35,255:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:27:35,255:INFO:Starting cross validation
2024-02-04 15:27:35,256:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:27:37,920:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:37,921:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:37,922:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:37,948:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:37,950:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:37,950:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:38,008:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:38,009:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:38,010:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:38,027:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:38,028:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:38,028:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:38,029:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:38,029:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:38,030:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:38,040:INFO:Calculating mean and std
2024-02-04 15:27:38,042:INFO:Creating metrics dataframe
2024-02-04 15:27:38,044:INFO:Finalizing model
2024-02-04 15:27:38,098:INFO:Uploading results into container
2024-02-04 15:27:38,099:INFO:Uploading model into container now
2024-02-04 15:27:38,103:INFO:_master_model_container: 1
2024-02-04 15:27:38,104:INFO:_display_container: 2
2024-02-04 15:27:38,104:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:27:38,104:INFO:create_model() successfully completed......................................
2024-02-04 15:27:38,174:INFO:Initializing predict_model()
2024-02-04 15:27:38,174:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002913407AF10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000029110C665C0>)
2024-02-04 15:27:38,174:INFO:Checking exceptions
2024-02-04 15:27:38,174:INFO:Preloading libraries
2024-02-04 15:27:38,174:INFO:Set up data.
2024-02-04 15:27:38,176:INFO:Set up index.
2024-02-04 15:27:51,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:27:51,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:27:51,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:27:51,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:27:52,386:INFO:PyCaret ClassificationExperiment
2024-02-04 15:27:52,386:INFO:Logging name: clf-default-name
2024-02-04 15:27:52,386:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:27:52,386:INFO:version 3.2.0
2024-02-04 15:27:52,386:INFO:Initializing setup()
2024-02-04 15:27:52,386:INFO:self.USI: 49fd
2024-02-04 15:27:52,386:INFO:self._variable_keys: {'fold_groups_param', 'logging_param', 'y', 'n_jobs_param', 'fold_shuffle_param', 'X_train', 'idx', 'exp_name_log', '_ml_usecase', 'USI', 'X', 'log_plots_param', 'y_test', 'exp_id', 'fold_generator', 'y_train', 'target_param', 'X_test', 'pipeline', 'seed', 'memory', '_available_plots', 'data', 'html_param', 'fix_imbalance', 'gpu_n_jobs_param', 'is_multiclass', 'gpu_param'}
2024-02-04 15:27:52,386:INFO:Checking environment
2024-02-04 15:27:52,386:INFO:python_version: 3.11.7
2024-02-04 15:27:52,386:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:27:52,386:INFO:machine: AMD64
2024-02-04 15:27:52,394:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:27:52,397:INFO:Memory: svmem(total=16892026880, available=4607864832, percent=72.7, used=12284162048, free=4607864832)
2024-02-04 15:27:52,398:INFO:Physical Core: 12
2024-02-04 15:27:52,398:INFO:Logical Core: 16
2024-02-04 15:27:52,398:INFO:Checking libraries
2024-02-04 15:27:52,398:INFO:System:
2024-02-04 15:27:52,398:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:27:52,398:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:27:52,398:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:27:52,398:INFO:PyCaret required dependencies:
2024-02-04 15:27:52,427:INFO:                 pip: 23.3.2
2024-02-04 15:27:52,427:INFO:          setuptools: 65.5.0
2024-02-04 15:27:52,427:INFO:             pycaret: 3.2.0
2024-02-04 15:27:52,427:INFO:             IPython: 8.20.0
2024-02-04 15:27:52,427:INFO:          ipywidgets: 8.1.1
2024-02-04 15:27:52,427:INFO:                tqdm: 4.66.1
2024-02-04 15:27:52,427:INFO:               numpy: 1.25.2
2024-02-04 15:27:52,427:INFO:              pandas: 1.5.3
2024-02-04 15:27:52,427:INFO:              jinja2: 3.1.3
2024-02-04 15:27:52,427:INFO:               scipy: 1.10.1
2024-02-04 15:27:52,427:INFO:              joblib: 1.3.2
2024-02-04 15:27:52,427:INFO:             sklearn: 1.2.2
2024-02-04 15:27:52,427:INFO:                pyod: 1.1.2
2024-02-04 15:27:52,427:INFO:            imblearn: 0.12.0
2024-02-04 15:27:52,427:INFO:   category_encoders: 2.6.3
2024-02-04 15:27:52,427:INFO:            lightgbm: 4.3.0
2024-02-04 15:27:52,427:INFO:               numba: 0.58.1
2024-02-04 15:27:52,428:INFO:            requests: 2.31.0
2024-02-04 15:27:52,428:INFO:          matplotlib: 3.6.0
2024-02-04 15:27:52,428:INFO:          scikitplot: 0.3.7
2024-02-04 15:27:52,428:INFO:         yellowbrick: 1.5
2024-02-04 15:27:52,428:INFO:              plotly: 5.18.0
2024-02-04 15:27:52,428:INFO:    plotly-resampler: Not installed
2024-02-04 15:27:52,428:INFO:             kaleido: 0.2.1
2024-02-04 15:27:52,428:INFO:           schemdraw: 0.15
2024-02-04 15:27:52,428:INFO:         statsmodels: 0.14.1
2024-02-04 15:27:52,428:INFO:              sktime: 0.21.1
2024-02-04 15:27:52,428:INFO:               tbats: 1.1.3
2024-02-04 15:27:52,428:INFO:            pmdarima: 2.0.4
2024-02-04 15:27:52,428:INFO:              psutil: 5.9.8
2024-02-04 15:27:52,428:INFO:          markupsafe: 2.1.4
2024-02-04 15:27:52,428:INFO:             pickle5: Not installed
2024-02-04 15:27:52,428:INFO:         cloudpickle: 3.0.0
2024-02-04 15:27:52,428:INFO:         deprecation: 2.1.0
2024-02-04 15:27:52,428:INFO:              xxhash: 3.4.1
2024-02-04 15:27:52,428:INFO:           wurlitzer: Not installed
2024-02-04 15:27:52,428:INFO:PyCaret optional dependencies:
2024-02-04 15:27:52,457:INFO:                shap: Not installed
2024-02-04 15:27:52,457:INFO:           interpret: Not installed
2024-02-04 15:27:52,457:INFO:                umap: Not installed
2024-02-04 15:27:52,457:INFO:     ydata_profiling: Not installed
2024-02-04 15:27:52,457:INFO:  explainerdashboard: Not installed
2024-02-04 15:27:52,457:INFO:             autoviz: Not installed
2024-02-04 15:27:52,457:INFO:           fairlearn: Not installed
2024-02-04 15:27:52,457:INFO:          deepchecks: Not installed
2024-02-04 15:27:52,457:INFO:             xgboost: 2.0.3
2024-02-04 15:27:52,457:INFO:            catboost: 1.2.2
2024-02-04 15:27:52,457:INFO:              kmodes: Not installed
2024-02-04 15:27:52,457:INFO:             mlxtend: Not installed
2024-02-04 15:27:52,457:INFO:       statsforecast: Not installed
2024-02-04 15:27:52,457:INFO:        tune_sklearn: Not installed
2024-02-04 15:27:52,457:INFO:                 ray: Not installed
2024-02-04 15:27:52,457:INFO:            hyperopt: Not installed
2024-02-04 15:27:52,457:INFO:              optuna: Not installed
2024-02-04 15:27:52,457:INFO:               skopt: Not installed
2024-02-04 15:27:52,457:INFO:              mlflow: Not installed
2024-02-04 15:27:52,458:INFO:              gradio: Not installed
2024-02-04 15:27:52,458:INFO:             fastapi: Not installed
2024-02-04 15:27:52,458:INFO:             uvicorn: Not installed
2024-02-04 15:27:52,458:INFO:              m2cgen: Not installed
2024-02-04 15:27:52,458:INFO:           evidently: Not installed
2024-02-04 15:27:52,458:INFO:               fugue: Not installed
2024-02-04 15:27:52,458:INFO:           streamlit: Not installed
2024-02-04 15:27:52,458:INFO:             prophet: 1.1.5
2024-02-04 15:27:52,458:INFO:None
2024-02-04 15:27:52,458:INFO:Set up data.
2024-02-04 15:27:52,463:INFO:Set up folding strategy.
2024-02-04 15:27:52,463:INFO:Set up train/test split.
2024-02-04 15:27:52,465:INFO:Set up index.
2024-02-04 15:27:52,465:INFO:Assigning column types.
2024-02-04 15:27:52,466:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:27:52,490:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:27:52,493:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:27:52,512:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:52,513:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:52,556:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:27:52,556:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:27:52,572:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:52,573:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:52,574:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:27:52,598:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:27:52,613:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:52,615:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:52,641:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:27:52,656:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:52,657:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:52,657:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:27:52,698:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:52,699:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:52,740:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:52,743:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:52,744:INFO:Preparing preprocessing pipeline...
2024-02-04 15:27:52,745:INFO:Set up label encoding.
2024-02-04 15:27:52,745:INFO:Set up simple imputation.
2024-02-04 15:27:52,822:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:27:52,824:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:27:52,824:INFO:Creating final display dataframe.
2024-02-04 15:27:52,865:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  49fd
2024-02-04 15:27:52,906:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:52,907:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:52,947:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:27:52,948:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:27:52,949:INFO:setup() successfully completed in 0.57s...............
2024-02-04 15:27:52,949:INFO:Initializing create_model()
2024-02-04 15:27:52,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CB8F228D0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:27:52,949:INFO:Checking exceptions
2024-02-04 15:27:52,950:INFO:Importing libraries
2024-02-04 15:27:52,950:INFO:Copying training dataset
2024-02-04 15:27:52,953:INFO:Defining folds
2024-02-04 15:27:52,953:INFO:Declaring metric variables
2024-02-04 15:27:52,953:INFO:Importing untrained model
2024-02-04 15:27:52,954:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:27:52,954:INFO:Starting cross validation
2024-02-04 15:27:52,954:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:27:55,424:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,425:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,426:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,522:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,523:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,524:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,552:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,553:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,554:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,569:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,571:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,573:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,576:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,577:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,579:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:27:55,582:INFO:Calculating mean and std
2024-02-04 15:27:55,583:INFO:Creating metrics dataframe
2024-02-04 15:27:55,584:INFO:Finalizing model
2024-02-04 15:27:55,637:INFO:Uploading results into container
2024-02-04 15:27:55,637:INFO:Uploading model into container now
2024-02-04 15:27:55,642:INFO:_master_model_container: 1
2024-02-04 15:27:55,642:INFO:_display_container: 2
2024-02-04 15:27:55,643:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:27:55,643:INFO:create_model() successfully completed......................................
2024-02-04 15:27:55,710:INFO:Initializing predict_model()
2024-02-04 15:27:55,710:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CB8F228D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017C95B065C0>)
2024-02-04 15:27:55,710:INFO:Checking exceptions
2024-02-04 15:27:55,710:INFO:Preloading libraries
2024-02-04 15:27:55,710:INFO:Set up data.
2024-02-04 15:27:55,711:INFO:Set up index.
2024-02-04 15:27:55,794:INFO:Initializing plot_model()
2024-02-04 15:27:55,794:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CB8F228D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:27:55,794:INFO:Checking exceptions
2024-02-04 15:27:55,806:INFO:Preloading libraries
2024-02-04 15:27:55,810:INFO:Copying training dataset
2024-02-04 15:27:55,810:INFO:Plot type: auc
2024-02-04 15:27:55,902:INFO:Fitting Model
2024-02-04 15:27:55,903:INFO:Scoring test/hold-out set
2024-02-04 15:27:56,095:INFO:Visual Rendered Successfully
2024-02-04 15:27:56,160:INFO:plot_model() successfully completed......................................
2024-02-04 15:27:56,161:INFO:Initializing plot_model()
2024-02-04 15:27:56,161:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CB8F228D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:27:56,161:INFO:Checking exceptions
2024-02-04 15:27:56,163:INFO:Preloading libraries
2024-02-04 15:27:56,167:INFO:Copying training dataset
2024-02-04 15:27:56,167:INFO:Plot type: confusion_matrix
2024-02-04 15:27:56,217:INFO:Fitting Model
2024-02-04 15:27:56,217:INFO:Scoring test/hold-out set
2024-02-04 15:27:56,346:INFO:Visual Rendered Successfully
2024-02-04 15:27:56,411:INFO:plot_model() successfully completed......................................
2024-02-04 15:27:56,411:INFO:Initializing interpret_model()
2024-02-04 15:27:56,411:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017CB8F228D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-02-04 15:27:56,412:INFO:Checking exceptions
2024-02-04 15:27:56,412:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2024-02-04 15:28:55,051:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:28:55,052:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:28:55,052:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:28:55,052:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:28:55,820:INFO:PyCaret ClassificationExperiment
2024-02-04 15:28:55,820:INFO:Logging name: clf-default-name
2024-02-04 15:28:55,820:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:28:55,820:INFO:version 3.2.0
2024-02-04 15:28:55,820:INFO:Initializing setup()
2024-02-04 15:28:55,820:INFO:self.USI: d0ab
2024-02-04 15:28:55,820:INFO:self._variable_keys: {'html_param', 'fold_shuffle_param', 'exp_id', 'X_test', 'target_param', 'fix_imbalance', 'seed', 'logging_param', 'memory', 'gpu_n_jobs_param', 'y_test', 'X_train', 'y', 'data', '_available_plots', 'is_multiclass', 'X', 'y_train', 'pipeline', 'fold_generator', 'idx', '_ml_usecase', 'exp_name_log', 'n_jobs_param', 'gpu_param', 'USI', 'fold_groups_param', 'log_plots_param'}
2024-02-04 15:28:55,820:INFO:Checking environment
2024-02-04 15:28:55,820:INFO:python_version: 3.11.7
2024-02-04 15:28:55,820:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:28:55,820:INFO:machine: AMD64
2024-02-04 15:28:55,831:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:28:55,834:INFO:Memory: svmem(total=16892026880, available=4399763456, percent=74.0, used=12492263424, free=4399763456)
2024-02-04 15:28:55,835:INFO:Physical Core: 12
2024-02-04 15:28:55,835:INFO:Logical Core: 16
2024-02-04 15:28:55,835:INFO:Checking libraries
2024-02-04 15:28:55,835:INFO:System:
2024-02-04 15:28:55,835:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:28:55,835:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:28:55,835:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:28:55,835:INFO:PyCaret required dependencies:
2024-02-04 15:28:55,863:INFO:                 pip: 23.3.2
2024-02-04 15:28:55,863:INFO:          setuptools: 65.5.0
2024-02-04 15:28:55,863:INFO:             pycaret: 3.2.0
2024-02-04 15:28:55,863:INFO:             IPython: 8.20.0
2024-02-04 15:28:55,863:INFO:          ipywidgets: 8.1.1
2024-02-04 15:28:55,863:INFO:                tqdm: 4.66.1
2024-02-04 15:28:55,863:INFO:               numpy: 1.25.2
2024-02-04 15:28:55,864:INFO:              pandas: 1.5.3
2024-02-04 15:28:55,864:INFO:              jinja2: 3.1.3
2024-02-04 15:28:55,864:INFO:               scipy: 1.10.1
2024-02-04 15:28:55,864:INFO:              joblib: 1.3.2
2024-02-04 15:28:55,864:INFO:             sklearn: 1.2.2
2024-02-04 15:28:55,864:INFO:                pyod: 1.1.2
2024-02-04 15:28:55,864:INFO:            imblearn: 0.12.0
2024-02-04 15:28:55,864:INFO:   category_encoders: 2.6.3
2024-02-04 15:28:55,864:INFO:            lightgbm: 4.3.0
2024-02-04 15:28:55,864:INFO:               numba: 0.58.1
2024-02-04 15:28:55,864:INFO:            requests: 2.31.0
2024-02-04 15:28:55,864:INFO:          matplotlib: 3.6.0
2024-02-04 15:28:55,864:INFO:          scikitplot: 0.3.7
2024-02-04 15:28:55,864:INFO:         yellowbrick: 1.5
2024-02-04 15:28:55,864:INFO:              plotly: 5.18.0
2024-02-04 15:28:55,864:INFO:    plotly-resampler: Not installed
2024-02-04 15:28:55,864:INFO:             kaleido: 0.2.1
2024-02-04 15:28:55,864:INFO:           schemdraw: 0.15
2024-02-04 15:28:55,864:INFO:         statsmodels: 0.14.1
2024-02-04 15:28:55,864:INFO:              sktime: 0.21.1
2024-02-04 15:28:55,864:INFO:               tbats: 1.1.3
2024-02-04 15:28:55,864:INFO:            pmdarima: 2.0.4
2024-02-04 15:28:55,864:INFO:              psutil: 5.9.8
2024-02-04 15:28:55,864:INFO:          markupsafe: 2.1.4
2024-02-04 15:28:55,864:INFO:             pickle5: Not installed
2024-02-04 15:28:55,864:INFO:         cloudpickle: 3.0.0
2024-02-04 15:28:55,864:INFO:         deprecation: 2.1.0
2024-02-04 15:28:55,864:INFO:              xxhash: 3.4.1
2024-02-04 15:28:55,864:INFO:           wurlitzer: Not installed
2024-02-04 15:28:55,864:INFO:PyCaret optional dependencies:
2024-02-04 15:28:55,893:INFO:                shap: 0.44.1
2024-02-04 15:28:55,893:INFO:           interpret: Not installed
2024-02-04 15:28:55,893:INFO:                umap: Not installed
2024-02-04 15:28:55,893:INFO:     ydata_profiling: Not installed
2024-02-04 15:28:55,893:INFO:  explainerdashboard: Not installed
2024-02-04 15:28:55,893:INFO:             autoviz: Not installed
2024-02-04 15:28:55,893:INFO:           fairlearn: Not installed
2024-02-04 15:28:55,893:INFO:          deepchecks: Not installed
2024-02-04 15:28:55,893:INFO:             xgboost: 2.0.3
2024-02-04 15:28:55,893:INFO:            catboost: 1.2.2
2024-02-04 15:28:55,893:INFO:              kmodes: Not installed
2024-02-04 15:28:55,893:INFO:             mlxtend: Not installed
2024-02-04 15:28:55,893:INFO:       statsforecast: Not installed
2024-02-04 15:28:55,893:INFO:        tune_sklearn: Not installed
2024-02-04 15:28:55,893:INFO:                 ray: Not installed
2024-02-04 15:28:55,893:INFO:            hyperopt: Not installed
2024-02-04 15:28:55,893:INFO:              optuna: Not installed
2024-02-04 15:28:55,893:INFO:               skopt: Not installed
2024-02-04 15:28:55,894:INFO:              mlflow: Not installed
2024-02-04 15:28:55,894:INFO:              gradio: Not installed
2024-02-04 15:28:55,894:INFO:             fastapi: Not installed
2024-02-04 15:28:55,894:INFO:             uvicorn: Not installed
2024-02-04 15:28:55,894:INFO:              m2cgen: Not installed
2024-02-04 15:28:55,894:INFO:           evidently: Not installed
2024-02-04 15:28:55,894:INFO:               fugue: Not installed
2024-02-04 15:28:55,894:INFO:           streamlit: Not installed
2024-02-04 15:28:55,894:INFO:             prophet: 1.1.5
2024-02-04 15:28:55,894:INFO:None
2024-02-04 15:28:55,894:INFO:Set up data.
2024-02-04 15:28:55,898:INFO:Set up folding strategy.
2024-02-04 15:28:55,898:INFO:Set up train/test split.
2024-02-04 15:28:55,900:INFO:Set up index.
2024-02-04 15:28:55,900:INFO:Assigning column types.
2024-02-04 15:28:55,901:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:28:55,926:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:28:55,927:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:28:55,944:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:28:55,946:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:28:55,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:28:55,992:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:28:56,005:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:28:56,007:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:28:56,007:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:28:56,032:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:28:56,046:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:28:56,047:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:28:56,073:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:28:56,089:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:28:56,090:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:28:56,090:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:28:56,130:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:28:56,132:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:28:56,172:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:28:56,174:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:28:56,175:INFO:Preparing preprocessing pipeline...
2024-02-04 15:28:56,176:INFO:Set up label encoding.
2024-02-04 15:28:56,176:INFO:Set up simple imputation.
2024-02-04 15:28:56,254:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:28:56,256:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:28:56,256:INFO:Creating final display dataframe.
2024-02-04 15:28:56,295:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  d0ab
2024-02-04 15:28:56,336:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:28:56,338:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:28:56,378:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:28:56,380:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:28:56,380:INFO:setup() successfully completed in 0.56s...............
2024-02-04 15:28:56,380:INFO:Initializing create_model()
2024-02-04 15:28:56,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028496830090>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:28:56,380:INFO:Checking exceptions
2024-02-04 15:28:56,382:INFO:Importing libraries
2024-02-04 15:28:56,382:INFO:Copying training dataset
2024-02-04 15:28:56,384:INFO:Defining folds
2024-02-04 15:28:56,384:INFO:Declaring metric variables
2024-02-04 15:28:56,384:INFO:Importing untrained model
2024-02-04 15:28:56,384:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:28:56,385:INFO:Starting cross validation
2024-02-04 15:28:56,385:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:28:58,998:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:58,999:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,000:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,006:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,008:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,009:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,100:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,101:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,102:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,102:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,104:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,105:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,114:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,116:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,117:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:28:59,121:INFO:Calculating mean and std
2024-02-04 15:28:59,121:INFO:Creating metrics dataframe
2024-02-04 15:28:59,122:INFO:Finalizing model
2024-02-04 15:28:59,180:INFO:Uploading results into container
2024-02-04 15:28:59,180:INFO:Uploading model into container now
2024-02-04 15:28:59,185:INFO:_master_model_container: 1
2024-02-04 15:28:59,185:INFO:_display_container: 2
2024-02-04 15:28:59,186:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:28:59,186:INFO:create_model() successfully completed......................................
2024-02-04 15:28:59,255:INFO:Initializing predict_model()
2024-02-04 15:28:59,255:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028496830090>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000284F33E65C0>)
2024-02-04 15:28:59,255:INFO:Checking exceptions
2024-02-04 15:28:59,255:INFO:Preloading libraries
2024-02-04 15:28:59,255:INFO:Set up data.
2024-02-04 15:28:59,257:INFO:Set up index.
2024-02-04 15:28:59,342:INFO:Initializing plot_model()
2024-02-04 15:28:59,342:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028496830090>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:28:59,342:INFO:Checking exceptions
2024-02-04 15:28:59,345:INFO:Preloading libraries
2024-02-04 15:28:59,349:INFO:Copying training dataset
2024-02-04 15:28:59,349:INFO:Plot type: auc
2024-02-04 15:28:59,429:INFO:Fitting Model
2024-02-04 15:28:59,431:INFO:Scoring test/hold-out set
2024-02-04 15:28:59,446:INFO:Saving 'AUC.png'
2024-02-04 15:28:59,593:INFO:Visual Rendered Successfully
2024-02-04 15:28:59,655:INFO:plot_model() successfully completed......................................
2024-02-04 15:28:59,656:INFO:Initializing plot_model()
2024-02-04 15:28:59,656:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028496830090>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:28:59,656:INFO:Checking exceptions
2024-02-04 15:28:59,657:INFO:Preloading libraries
2024-02-04 15:28:59,661:INFO:Copying training dataset
2024-02-04 15:28:59,661:INFO:Plot type: confusion_matrix
2024-02-04 15:28:59,726:INFO:Fitting Model
2024-02-04 15:28:59,727:INFO:Scoring test/hold-out set
2024-02-04 15:28:59,743:INFO:Saving 'Confusion Matrix.png'
2024-02-04 15:28:59,833:INFO:Visual Rendered Successfully
2024-02-04 15:28:59,893:INFO:plot_model() successfully completed......................................
2024-02-04 15:28:59,894:INFO:Initializing interpret_model()
2024-02-04 15:28:59,894:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028496830090>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-02-04 15:28:59,894:INFO:Checking exceptions
2024-02-04 15:28:59,894:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 15:29:00,129:INFO:plot type: summary
2024-02-04 15:29:00,129:INFO:Creating TreeExplainer
2024-02-04 15:29:00,146:INFO:Compiling shap values
2024-02-04 15:29:00,294:WARNING:Blended transforms not yet supported. Zoom behavior may not work as expected.

2024-02-04 15:29:00,363:INFO:Visual Rendered Successfully
2024-02-04 15:29:00,363:INFO:interpret_model() successfully completed......................................
2024-02-04 15:29:33,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:29:33,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:29:33,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:29:33,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:29:34,184:INFO:PyCaret ClassificationExperiment
2024-02-04 15:29:34,184:INFO:Logging name: clf-default-name
2024-02-04 15:29:34,184:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:29:34,184:INFO:version 3.2.0
2024-02-04 15:29:34,184:INFO:Initializing setup()
2024-02-04 15:29:34,185:INFO:self.USI: e365
2024-02-04 15:29:34,185:INFO:self._variable_keys: {'log_plots_param', '_ml_usecase', 'y', 'exp_name_log', 'X', 'is_multiclass', 'exp_id', 'seed', 'gpu_n_jobs_param', 'y_test', 'fold_generator', 'X_test', 'y_train', 'USI', 'html_param', 'X_train', 'pipeline', 'fix_imbalance', 'memory', 'logging_param', '_available_plots', 'target_param', 'idx', 'fold_groups_param', 'data', 'gpu_param', 'n_jobs_param', 'fold_shuffle_param'}
2024-02-04 15:29:34,185:INFO:Checking environment
2024-02-04 15:29:34,185:INFO:python_version: 3.11.7
2024-02-04 15:29:34,185:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:29:34,185:INFO:machine: AMD64
2024-02-04 15:29:34,193:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:29:34,197:INFO:Memory: svmem(total=16892026880, available=3050332160, percent=81.9, used=13841694720, free=3050332160)
2024-02-04 15:29:34,197:INFO:Physical Core: 12
2024-02-04 15:29:34,197:INFO:Logical Core: 16
2024-02-04 15:29:34,197:INFO:Checking libraries
2024-02-04 15:29:34,197:INFO:System:
2024-02-04 15:29:34,197:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:29:34,197:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:29:34,197:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:29:34,197:INFO:PyCaret required dependencies:
2024-02-04 15:29:34,226:INFO:                 pip: 23.3.2
2024-02-04 15:29:34,226:INFO:          setuptools: 65.5.0
2024-02-04 15:29:34,226:INFO:             pycaret: 3.2.0
2024-02-04 15:29:34,226:INFO:             IPython: 8.20.0
2024-02-04 15:29:34,226:INFO:          ipywidgets: 8.1.1
2024-02-04 15:29:34,226:INFO:                tqdm: 4.66.1
2024-02-04 15:29:34,226:INFO:               numpy: 1.25.2
2024-02-04 15:29:34,226:INFO:              pandas: 1.5.3
2024-02-04 15:29:34,226:INFO:              jinja2: 3.1.3
2024-02-04 15:29:34,226:INFO:               scipy: 1.10.1
2024-02-04 15:29:34,226:INFO:              joblib: 1.3.2
2024-02-04 15:29:34,226:INFO:             sklearn: 1.2.2
2024-02-04 15:29:34,226:INFO:                pyod: 1.1.2
2024-02-04 15:29:34,226:INFO:            imblearn: 0.12.0
2024-02-04 15:29:34,226:INFO:   category_encoders: 2.6.3
2024-02-04 15:29:34,226:INFO:            lightgbm: 4.3.0
2024-02-04 15:29:34,226:INFO:               numba: 0.58.1
2024-02-04 15:29:34,226:INFO:            requests: 2.31.0
2024-02-04 15:29:34,226:INFO:          matplotlib: 3.6.0
2024-02-04 15:29:34,226:INFO:          scikitplot: 0.3.7
2024-02-04 15:29:34,226:INFO:         yellowbrick: 1.5
2024-02-04 15:29:34,226:INFO:              plotly: 5.18.0
2024-02-04 15:29:34,226:INFO:    plotly-resampler: Not installed
2024-02-04 15:29:34,226:INFO:             kaleido: 0.2.1
2024-02-04 15:29:34,226:INFO:           schemdraw: 0.15
2024-02-04 15:29:34,226:INFO:         statsmodels: 0.14.1
2024-02-04 15:29:34,226:INFO:              sktime: 0.21.1
2024-02-04 15:29:34,226:INFO:               tbats: 1.1.3
2024-02-04 15:29:34,226:INFO:            pmdarima: 2.0.4
2024-02-04 15:29:34,226:INFO:              psutil: 5.9.8
2024-02-04 15:29:34,226:INFO:          markupsafe: 2.1.4
2024-02-04 15:29:34,226:INFO:             pickle5: Not installed
2024-02-04 15:29:34,226:INFO:         cloudpickle: 3.0.0
2024-02-04 15:29:34,226:INFO:         deprecation: 2.1.0
2024-02-04 15:29:34,226:INFO:              xxhash: 3.4.1
2024-02-04 15:29:34,226:INFO:           wurlitzer: Not installed
2024-02-04 15:29:34,226:INFO:PyCaret optional dependencies:
2024-02-04 15:29:34,257:INFO:                shap: 0.44.1
2024-02-04 15:29:34,257:INFO:           interpret: Not installed
2024-02-04 15:29:34,257:INFO:                umap: Not installed
2024-02-04 15:29:34,257:INFO:     ydata_profiling: Not installed
2024-02-04 15:29:34,257:INFO:  explainerdashboard: Not installed
2024-02-04 15:29:34,257:INFO:             autoviz: Not installed
2024-02-04 15:29:34,257:INFO:           fairlearn: Not installed
2024-02-04 15:29:34,257:INFO:          deepchecks: Not installed
2024-02-04 15:29:34,257:INFO:             xgboost: 2.0.3
2024-02-04 15:29:34,257:INFO:            catboost: 1.2.2
2024-02-04 15:29:34,257:INFO:              kmodes: Not installed
2024-02-04 15:29:34,257:INFO:             mlxtend: Not installed
2024-02-04 15:29:34,257:INFO:       statsforecast: Not installed
2024-02-04 15:29:34,257:INFO:        tune_sklearn: Not installed
2024-02-04 15:29:34,257:INFO:                 ray: Not installed
2024-02-04 15:29:34,257:INFO:            hyperopt: Not installed
2024-02-04 15:29:34,257:INFO:              optuna: Not installed
2024-02-04 15:29:34,257:INFO:               skopt: Not installed
2024-02-04 15:29:34,257:INFO:              mlflow: Not installed
2024-02-04 15:29:34,257:INFO:              gradio: Not installed
2024-02-04 15:29:34,257:INFO:             fastapi: Not installed
2024-02-04 15:29:34,257:INFO:             uvicorn: Not installed
2024-02-04 15:29:34,257:INFO:              m2cgen: Not installed
2024-02-04 15:29:34,258:INFO:           evidently: Not installed
2024-02-04 15:29:34,258:INFO:               fugue: Not installed
2024-02-04 15:29:34,258:INFO:           streamlit: Not installed
2024-02-04 15:29:34,258:INFO:             prophet: 1.1.5
2024-02-04 15:29:34,258:INFO:None
2024-02-04 15:29:34,258:INFO:Set up data.
2024-02-04 15:29:34,262:INFO:Set up folding strategy.
2024-02-04 15:29:34,262:INFO:Set up train/test split.
2024-02-04 15:29:34,264:INFO:Set up index.
2024-02-04 15:29:34,264:INFO:Assigning column types.
2024-02-04 15:29:34,266:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:29:34,289:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:29:34,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:29:34,309:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:29:34,312:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:29:34,355:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:29:34,355:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:29:34,369:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:29:34,372:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:29:34,373:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:29:34,397:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:29:34,413:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:29:34,415:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:29:34,439:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:29:34,455:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:29:34,456:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:29:34,457:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:29:34,496:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:29:34,497:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:29:34,538:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:29:34,539:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:29:34,542:INFO:Preparing preprocessing pipeline...
2024-02-04 15:29:34,542:INFO:Set up label encoding.
2024-02-04 15:29:34,542:INFO:Set up simple imputation.
2024-02-04 15:29:34,623:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:29:34,626:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:29:34,626:INFO:Creating final display dataframe.
2024-02-04 15:29:34,671:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  e365
2024-02-04 15:29:34,716:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:29:34,718:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:29:34,762:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:29:34,763:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:29:34,764:INFO:setup() successfully completed in 0.58s...............
2024-02-04 15:29:34,765:INFO:Initializing create_model()
2024-02-04 15:29:34,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E2A4DA190>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:29:34,765:INFO:Checking exceptions
2024-02-04 15:29:34,767:INFO:Importing libraries
2024-02-04 15:29:34,767:INFO:Copying training dataset
2024-02-04 15:29:34,769:INFO:Defining folds
2024-02-04 15:29:34,769:INFO:Declaring metric variables
2024-02-04 15:29:34,769:INFO:Importing untrained model
2024-02-04 15:29:34,770:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:29:34,770:INFO:Starting cross validation
2024-02-04 15:29:34,771:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:29:37,428:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,431:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,431:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,500:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,501:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,502:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,540:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,541:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,543:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,553:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,554:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,556:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,559:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,561:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,561:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:29:37,573:INFO:Calculating mean and std
2024-02-04 15:29:37,574:INFO:Creating metrics dataframe
2024-02-04 15:29:37,575:INFO:Finalizing model
2024-02-04 15:29:37,622:INFO:Uploading results into container
2024-02-04 15:29:37,623:INFO:Uploading model into container now
2024-02-04 15:29:37,628:INFO:_master_model_container: 1
2024-02-04 15:29:37,628:INFO:_display_container: 2
2024-02-04 15:29:37,628:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:29:37,628:INFO:create_model() successfully completed......................................
2024-02-04 15:29:37,697:INFO:Initializing predict_model()
2024-02-04 15:29:37,698:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E2A4DA190>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026E0713A5C0>)
2024-02-04 15:29:37,698:INFO:Checking exceptions
2024-02-04 15:29:37,698:INFO:Preloading libraries
2024-02-04 15:29:37,698:INFO:Set up data.
2024-02-04 15:29:37,700:INFO:Set up index.
2024-02-04 15:29:37,785:INFO:Initializing plot_model()
2024-02-04 15:29:37,785:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E2A4DA190>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:29:37,785:INFO:Checking exceptions
2024-02-04 15:29:37,788:INFO:Preloading libraries
2024-02-04 15:29:37,791:INFO:Copying training dataset
2024-02-04 15:29:37,791:INFO:Plot type: auc
2024-02-04 15:29:37,874:INFO:Fitting Model
2024-02-04 15:29:37,874:INFO:Scoring test/hold-out set
2024-02-04 15:29:37,891:INFO:Saving 'AUC.png'
2024-02-04 15:29:38,020:INFO:Visual Rendered Successfully
2024-02-04 15:29:38,079:INFO:plot_model() successfully completed......................................
2024-02-04 15:29:38,079:INFO:Initializing plot_model()
2024-02-04 15:29:38,079:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E2A4DA190>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:29:38,079:INFO:Checking exceptions
2024-02-04 15:29:38,081:INFO:Preloading libraries
2024-02-04 15:29:38,087:INFO:Copying training dataset
2024-02-04 15:29:38,087:INFO:Plot type: confusion_matrix
2024-02-04 15:29:38,136:INFO:Fitting Model
2024-02-04 15:29:38,136:INFO:Scoring test/hold-out set
2024-02-04 15:29:38,146:INFO:Saving 'Confusion Matrix.png'
2024-02-04 15:29:38,215:INFO:Visual Rendered Successfully
2024-02-04 15:29:38,277:INFO:plot_model() successfully completed......................................
2024-02-04 15:29:38,278:INFO:Initializing interpret_model()
2024-02-04 15:29:38,278:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E2A4DA190>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 15:29:38,278:INFO:Checking exceptions
2024-02-04 15:29:38,278:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 15:29:38,508:INFO:plot type: summary
2024-02-04 15:29:38,508:INFO:Creating TreeExplainer
2024-02-04 15:29:38,528:INFO:Compiling shap values
2024-02-04 15:29:38,594:INFO:Saving 'SHAP summary.png'
2024-02-04 15:29:38,699:INFO:Visual Rendered Successfully
2024-02-04 15:29:38,699:INFO:interpret_model() successfully completed......................................
2024-02-04 15:32:30,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:32:30,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:32:30,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:32:30,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:32:30,975:INFO:PyCaret ClassificationExperiment
2024-02-04 15:32:30,975:INFO:Logging name: clf-default-name
2024-02-04 15:32:30,975:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:32:30,975:INFO:version 3.2.0
2024-02-04 15:32:30,975:INFO:Initializing setup()
2024-02-04 15:32:30,975:INFO:self.USI: 88d8
2024-02-04 15:32:30,975:INFO:self._variable_keys: {'html_param', '_available_plots', 'y', 'is_multiclass', 'pipeline', 'X_train', 'fold_generator', 'y_train', 'idx', 'fix_imbalance', '_ml_usecase', 'USI', 'logging_param', 'exp_name_log', 'data', 'exp_id', 'memory', 'seed', 'log_plots_param', 'X', 'fold_shuffle_param', 'y_test', 'gpu_param', 'gpu_n_jobs_param', 'fold_groups_param', 'X_test', 'n_jobs_param', 'target_param'}
2024-02-04 15:32:30,975:INFO:Checking environment
2024-02-04 15:32:30,975:INFO:python_version: 3.11.7
2024-02-04 15:32:30,975:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:32:30,975:INFO:machine: AMD64
2024-02-04 15:32:30,984:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:32:30,988:INFO:Memory: svmem(total=16892026880, available=4366528512, percent=74.2, used=12525498368, free=4366528512)
2024-02-04 15:32:30,988:INFO:Physical Core: 12
2024-02-04 15:32:30,988:INFO:Logical Core: 16
2024-02-04 15:32:30,988:INFO:Checking libraries
2024-02-04 15:32:30,988:INFO:System:
2024-02-04 15:32:30,988:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:32:30,988:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:32:30,988:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:32:30,988:INFO:PyCaret required dependencies:
2024-02-04 15:32:31,017:INFO:                 pip: 23.3.2
2024-02-04 15:32:31,017:INFO:          setuptools: 65.5.0
2024-02-04 15:32:31,017:INFO:             pycaret: 3.2.0
2024-02-04 15:32:31,017:INFO:             IPython: 8.20.0
2024-02-04 15:32:31,017:INFO:          ipywidgets: 8.1.1
2024-02-04 15:32:31,017:INFO:                tqdm: 4.66.1
2024-02-04 15:32:31,017:INFO:               numpy: 1.25.2
2024-02-04 15:32:31,017:INFO:              pandas: 1.5.3
2024-02-04 15:32:31,017:INFO:              jinja2: 3.1.3
2024-02-04 15:32:31,017:INFO:               scipy: 1.10.1
2024-02-04 15:32:31,017:INFO:              joblib: 1.3.2
2024-02-04 15:32:31,017:INFO:             sklearn: 1.2.2
2024-02-04 15:32:31,017:INFO:                pyod: 1.1.2
2024-02-04 15:32:31,017:INFO:            imblearn: 0.12.0
2024-02-04 15:32:31,017:INFO:   category_encoders: 2.6.3
2024-02-04 15:32:31,017:INFO:            lightgbm: 4.3.0
2024-02-04 15:32:31,017:INFO:               numba: 0.58.1
2024-02-04 15:32:31,017:INFO:            requests: 2.31.0
2024-02-04 15:32:31,017:INFO:          matplotlib: 3.6.0
2024-02-04 15:32:31,017:INFO:          scikitplot: 0.3.7
2024-02-04 15:32:31,017:INFO:         yellowbrick: 1.5
2024-02-04 15:32:31,017:INFO:              plotly: 5.18.0
2024-02-04 15:32:31,017:INFO:    plotly-resampler: Not installed
2024-02-04 15:32:31,017:INFO:             kaleido: 0.2.1
2024-02-04 15:32:31,017:INFO:           schemdraw: 0.15
2024-02-04 15:32:31,017:INFO:         statsmodels: 0.14.1
2024-02-04 15:32:31,017:INFO:              sktime: 0.21.1
2024-02-04 15:32:31,017:INFO:               tbats: 1.1.3
2024-02-04 15:32:31,017:INFO:            pmdarima: 2.0.4
2024-02-04 15:32:31,017:INFO:              psutil: 5.9.8
2024-02-04 15:32:31,017:INFO:          markupsafe: 2.1.4
2024-02-04 15:32:31,017:INFO:             pickle5: Not installed
2024-02-04 15:32:31,017:INFO:         cloudpickle: 3.0.0
2024-02-04 15:32:31,017:INFO:         deprecation: 2.1.0
2024-02-04 15:32:31,017:INFO:              xxhash: 3.4.1
2024-02-04 15:32:31,017:INFO:           wurlitzer: Not installed
2024-02-04 15:32:31,017:INFO:PyCaret optional dependencies:
2024-02-04 15:32:31,045:INFO:                shap: 0.44.1
2024-02-04 15:32:31,046:INFO:           interpret: Not installed
2024-02-04 15:32:31,046:INFO:                umap: Not installed
2024-02-04 15:32:31,046:INFO:     ydata_profiling: Not installed
2024-02-04 15:32:31,046:INFO:  explainerdashboard: Not installed
2024-02-04 15:32:31,046:INFO:             autoviz: Not installed
2024-02-04 15:32:31,046:INFO:           fairlearn: Not installed
2024-02-04 15:32:31,046:INFO:          deepchecks: Not installed
2024-02-04 15:32:31,046:INFO:             xgboost: 2.0.3
2024-02-04 15:32:31,046:INFO:            catboost: 1.2.2
2024-02-04 15:32:31,046:INFO:              kmodes: Not installed
2024-02-04 15:32:31,046:INFO:             mlxtend: Not installed
2024-02-04 15:32:31,046:INFO:       statsforecast: Not installed
2024-02-04 15:32:31,046:INFO:        tune_sklearn: Not installed
2024-02-04 15:32:31,046:INFO:                 ray: Not installed
2024-02-04 15:32:31,046:INFO:            hyperopt: Not installed
2024-02-04 15:32:31,046:INFO:              optuna: Not installed
2024-02-04 15:32:31,046:INFO:               skopt: Not installed
2024-02-04 15:32:31,046:INFO:              mlflow: Not installed
2024-02-04 15:32:31,046:INFO:              gradio: Not installed
2024-02-04 15:32:31,046:INFO:             fastapi: Not installed
2024-02-04 15:32:31,046:INFO:             uvicorn: Not installed
2024-02-04 15:32:31,046:INFO:              m2cgen: Not installed
2024-02-04 15:32:31,046:INFO:           evidently: Not installed
2024-02-04 15:32:31,046:INFO:               fugue: Not installed
2024-02-04 15:32:31,046:INFO:           streamlit: Not installed
2024-02-04 15:32:31,046:INFO:             prophet: 1.1.5
2024-02-04 15:32:31,046:INFO:None
2024-02-04 15:32:31,046:INFO:Set up data.
2024-02-04 15:32:31,051:INFO:Set up folding strategy.
2024-02-04 15:32:31,051:INFO:Set up train/test split.
2024-02-04 15:32:31,053:INFO:Set up index.
2024-02-04 15:32:31,054:INFO:Assigning column types.
2024-02-04 15:32:31,055:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:32:31,078:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:32:31,079:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:32:31,097:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:32:31,098:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:32:31,138:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:32:31,138:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:32:31,152:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:32:31,154:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:32:31,154:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:32:31,177:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:32:31,191:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:32:31,193:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:32:31,216:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:32:31,231:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:32:31,232:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:32:31,232:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:32:31,269:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:32:31,271:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:32:31,309:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:32:31,312:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:32:31,313:INFO:Preparing preprocessing pipeline...
2024-02-04 15:32:31,314:INFO:Set up label encoding.
2024-02-04 15:32:31,314:INFO:Set up simple imputation.
2024-02-04 15:32:31,385:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:32:31,387:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:32:31,388:INFO:Creating final display dataframe.
2024-02-04 15:32:31,424:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  88d8
2024-02-04 15:32:31,465:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:32:31,466:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:32:31,505:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:32:31,506:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:32:31,507:INFO:setup() successfully completed in 0.53s...............
2024-02-04 15:32:31,507:INFO:Initializing create_model()
2024-02-04 15:32:31,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA2E12B910>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:32:31,507:INFO:Checking exceptions
2024-02-04 15:32:31,509:INFO:Importing libraries
2024-02-04 15:32:31,509:INFO:Copying training dataset
2024-02-04 15:32:31,510:INFO:Defining folds
2024-02-04 15:32:31,512:INFO:Declaring metric variables
2024-02-04 15:32:31,512:INFO:Importing untrained model
2024-02-04 15:32:31,512:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:32:31,512:INFO:Starting cross validation
2024-02-04 15:32:31,513:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:32:34,003:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,005:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,006:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,035:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,036:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,037:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,100:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,101:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,102:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,128:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,129:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,131:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,139:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,140:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,141:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:32:34,152:INFO:Calculating mean and std
2024-02-04 15:32:34,153:INFO:Creating metrics dataframe
2024-02-04 15:32:34,155:INFO:Finalizing model
2024-02-04 15:32:34,201:INFO:Uploading results into container
2024-02-04 15:32:34,202:INFO:Uploading model into container now
2024-02-04 15:32:34,210:INFO:_master_model_container: 1
2024-02-04 15:32:34,210:INFO:_display_container: 2
2024-02-04 15:32:34,211:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:32:34,211:INFO:create_model() successfully completed......................................
2024-02-04 15:32:34,276:INFO:Initializing predict_model()
2024-02-04 15:32:34,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA2E12B910>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CA0AD3A5C0>)
2024-02-04 15:32:34,276:INFO:Checking exceptions
2024-02-04 15:32:34,276:INFO:Preloading libraries
2024-02-04 15:32:34,276:INFO:Set up data.
2024-02-04 15:32:34,279:INFO:Set up index.
2024-02-04 15:32:34,365:INFO:Initializing plot_model()
2024-02-04 15:32:34,365:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA2E12B910>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:32:34,365:INFO:Checking exceptions
2024-02-04 15:32:34,369:INFO:Preloading libraries
2024-02-04 15:32:34,373:INFO:Copying training dataset
2024-02-04 15:32:34,373:INFO:Plot type: auc
2024-02-04 15:32:34,481:INFO:Fitting Model
2024-02-04 15:32:34,482:INFO:Scoring test/hold-out set
2024-02-04 15:32:34,497:INFO:Saving 'AUC.png'
2024-02-04 15:32:34,627:INFO:Visual Rendered Successfully
2024-02-04 15:32:34,681:INFO:plot_model() successfully completed......................................
2024-02-04 15:32:34,682:INFO:Initializing plot_model()
2024-02-04 15:32:34,682:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA2E12B910>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:32:34,682:INFO:Checking exceptions
2024-02-04 15:32:34,683:INFO:Preloading libraries
2024-02-04 15:32:34,689:INFO:Copying training dataset
2024-02-04 15:32:34,689:INFO:Plot type: confusion_matrix
2024-02-04 15:32:34,753:INFO:Fitting Model
2024-02-04 15:32:34,754:INFO:Scoring test/hold-out set
2024-02-04 15:32:34,769:INFO:Saving 'Confusion Matrix.png'
2024-02-04 15:32:34,842:INFO:Visual Rendered Successfully
2024-02-04 15:32:34,897:INFO:plot_model() successfully completed......................................
2024-02-04 15:32:34,898:INFO:Initializing plot_model()
2024-02-04 15:32:34,898:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA2E12B910>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:32:34,898:INFO:Checking exceptions
2024-02-04 15:32:34,899:INFO:Preloading libraries
2024-02-04 15:32:34,903:INFO:Copying training dataset
2024-02-04 15:32:34,903:INFO:Plot type: feature
2024-02-04 15:32:34,904:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 15:32:34,927:INFO:Saving 'Feature Importance.png'
2024-02-04 15:32:35,011:INFO:Visual Rendered Successfully
2024-02-04 15:32:35,066:INFO:plot_model() successfully completed......................................
2024-02-04 15:32:35,067:INFO:Initializing plot_model()
2024-02-04 15:32:35,067:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA2E12B910>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=calibration, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:32:35,067:INFO:Checking exceptions
2024-02-04 15:32:35,068:INFO:Preloading libraries
2024-02-04 15:32:35,073:INFO:Copying training dataset
2024-02-04 15:32:35,074:INFO:Plot type: calibration
2024-02-04 15:32:35,087:INFO:Scoring test/hold-out set
2024-02-04 15:32:35,142:INFO:Saving 'Calibration Curve.png'
2024-02-04 15:32:35,221:INFO:Visual Rendered Successfully
2024-02-04 15:32:35,278:INFO:plot_model() successfully completed......................................
2024-02-04 15:32:35,279:INFO:Initializing plot_model()
2024-02-04 15:32:35,279:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA2E12B910>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=parameter, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:32:35,279:INFO:Checking exceptions
2024-02-04 15:32:35,281:INFO:Preloading libraries
2024-02-04 15:32:35,288:INFO:Copying training dataset
2024-02-04 15:32:35,288:INFO:Plot type: parameter
2024-02-04 15:32:35,290:INFO:                              Parameters
2024-02-04 15:32:35,290:INFO:objective                binary:logistic
2024-02-04 15:32:35,290:INFO:base_score                          None
2024-02-04 15:32:35,290:INFO:booster                           gbtree
2024-02-04 15:32:35,290:INFO:callbacks                           None
2024-02-04 15:32:35,290:INFO:colsample_bylevel                   None
2024-02-04 15:32:35,290:INFO:colsample_bynode                    None
2024-02-04 15:32:35,290:INFO:colsample_bytree                    None
2024-02-04 15:32:35,290:INFO:device                               cpu
2024-02-04 15:32:35,290:INFO:early_stopping_rounds               None
2024-02-04 15:32:35,290:INFO:enable_categorical                 False
2024-02-04 15:32:35,290:INFO:eval_metric                         None
2024-02-04 15:32:35,290:INFO:feature_types                       None
2024-02-04 15:32:35,290:INFO:gamma                               None
2024-02-04 15:32:35,290:INFO:grow_policy                         None
2024-02-04 15:32:35,290:INFO:importance_type                     None
2024-02-04 15:32:35,290:INFO:interaction_constraints             None
2024-02-04 15:32:35,290:INFO:learning_rate                       None
2024-02-04 15:32:35,290:INFO:max_bin                             None
2024-02-04 15:32:35,290:INFO:max_cat_threshold                   None
2024-02-04 15:32:35,290:INFO:max_cat_to_onehot                   None
2024-02-04 15:32:35,290:INFO:max_delta_step                      None
2024-02-04 15:32:35,291:INFO:max_depth                           None
2024-02-04 15:32:35,291:INFO:max_leaves                          None
2024-02-04 15:32:35,291:INFO:min_child_weight                    None
2024-02-04 15:32:35,291:INFO:missing                              nan
2024-02-04 15:32:35,291:INFO:monotone_constraints                None
2024-02-04 15:32:35,291:INFO:multi_strategy                      None
2024-02-04 15:32:35,291:INFO:n_estimators                        None
2024-02-04 15:32:35,291:INFO:n_jobs                                -1
2024-02-04 15:32:35,291:INFO:num_parallel_tree                   None
2024-02-04 15:32:35,291:INFO:random_state                         123
2024-02-04 15:32:35,291:INFO:reg_alpha                           None
2024-02-04 15:32:35,291:INFO:reg_lambda                          None
2024-02-04 15:32:35,291:INFO:sampling_method                     None
2024-02-04 15:32:35,291:INFO:scale_pos_weight                    None
2024-02-04 15:32:35,291:INFO:subsample                           None
2024-02-04 15:32:35,291:INFO:tree_method                         auto
2024-02-04 15:32:35,291:INFO:validate_parameters                 None
2024-02-04 15:32:35,291:INFO:verbosity                              0
2024-02-04 15:32:35,291:INFO:Visual Rendered Successfully
2024-02-04 15:32:35,353:INFO:plot_model() successfully completed......................................
2024-02-04 15:32:35,354:INFO:Initializing interpret_model()
2024-02-04 15:32:35,354:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CA2E12B910>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 15:32:35,354:INFO:Checking exceptions
2024-02-04 15:32:35,355:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 15:32:35,588:INFO:plot type: summary
2024-02-04 15:32:35,588:INFO:Creating TreeExplainer
2024-02-04 15:32:35,610:INFO:Compiling shap values
2024-02-04 15:32:35,675:INFO:Saving 'SHAP summary.png'
2024-02-04 15:32:35,774:INFO:Visual Rendered Successfully
2024-02-04 15:32:35,774:INFO:interpret_model() successfully completed......................................
2024-02-04 15:33:35,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:33:35,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:33:35,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:33:35,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:33:36,538:INFO:PyCaret ClassificationExperiment
2024-02-04 15:33:36,538:INFO:Logging name: clf-default-name
2024-02-04 15:33:36,538:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:33:36,538:INFO:version 3.2.0
2024-02-04 15:33:36,538:INFO:Initializing setup()
2024-02-04 15:33:36,538:INFO:self.USI: 6141
2024-02-04 15:33:36,538:INFO:self._variable_keys: {'target_param', 'n_jobs_param', '_available_plots', 'y_train', 'fold_groups_param', '_ml_usecase', 'is_multiclass', 'html_param', 'seed', 'logging_param', 'memory', 'exp_id', 'exp_name_log', 'pipeline', 'idx', 'log_plots_param', 'data', 'X_train', 'X_test', 'fold_shuffle_param', 'y_test', 'y', 'fold_generator', 'gpu_n_jobs_param', 'X', 'fix_imbalance', 'gpu_param', 'USI'}
2024-02-04 15:33:36,538:INFO:Checking environment
2024-02-04 15:33:36,538:INFO:python_version: 3.11.7
2024-02-04 15:33:36,538:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:33:36,538:INFO:machine: AMD64
2024-02-04 15:33:36,548:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:33:36,551:INFO:Memory: svmem(total=16892026880, available=4494241792, percent=73.4, used=12397785088, free=4494241792)
2024-02-04 15:33:36,551:INFO:Physical Core: 12
2024-02-04 15:33:36,551:INFO:Logical Core: 16
2024-02-04 15:33:36,552:INFO:Checking libraries
2024-02-04 15:33:36,552:INFO:System:
2024-02-04 15:33:36,552:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:33:36,552:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:33:36,552:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:33:36,552:INFO:PyCaret required dependencies:
2024-02-04 15:33:36,581:INFO:                 pip: 23.3.2
2024-02-04 15:33:36,581:INFO:          setuptools: 65.5.0
2024-02-04 15:33:36,581:INFO:             pycaret: 3.2.0
2024-02-04 15:33:36,581:INFO:             IPython: 8.20.0
2024-02-04 15:33:36,581:INFO:          ipywidgets: 8.1.1
2024-02-04 15:33:36,581:INFO:                tqdm: 4.66.1
2024-02-04 15:33:36,581:INFO:               numpy: 1.25.2
2024-02-04 15:33:36,581:INFO:              pandas: 1.5.3
2024-02-04 15:33:36,581:INFO:              jinja2: 3.1.3
2024-02-04 15:33:36,581:INFO:               scipy: 1.10.1
2024-02-04 15:33:36,581:INFO:              joblib: 1.3.2
2024-02-04 15:33:36,581:INFO:             sklearn: 1.2.2
2024-02-04 15:33:36,581:INFO:                pyod: 1.1.2
2024-02-04 15:33:36,581:INFO:            imblearn: 0.12.0
2024-02-04 15:33:36,581:INFO:   category_encoders: 2.6.3
2024-02-04 15:33:36,581:INFO:            lightgbm: 4.3.0
2024-02-04 15:33:36,581:INFO:               numba: 0.58.1
2024-02-04 15:33:36,581:INFO:            requests: 2.31.0
2024-02-04 15:33:36,581:INFO:          matplotlib: 3.6.0
2024-02-04 15:33:36,581:INFO:          scikitplot: 0.3.7
2024-02-04 15:33:36,582:INFO:         yellowbrick: 1.5
2024-02-04 15:33:36,582:INFO:              plotly: 5.18.0
2024-02-04 15:33:36,582:INFO:    plotly-resampler: Not installed
2024-02-04 15:33:36,582:INFO:             kaleido: 0.2.1
2024-02-04 15:33:36,582:INFO:           schemdraw: 0.15
2024-02-04 15:33:36,582:INFO:         statsmodels: 0.14.1
2024-02-04 15:33:36,582:INFO:              sktime: 0.21.1
2024-02-04 15:33:36,582:INFO:               tbats: 1.1.3
2024-02-04 15:33:36,582:INFO:            pmdarima: 2.0.4
2024-02-04 15:33:36,582:INFO:              psutil: 5.9.8
2024-02-04 15:33:36,582:INFO:          markupsafe: 2.1.4
2024-02-04 15:33:36,582:INFO:             pickle5: Not installed
2024-02-04 15:33:36,582:INFO:         cloudpickle: 3.0.0
2024-02-04 15:33:36,582:INFO:         deprecation: 2.1.0
2024-02-04 15:33:36,582:INFO:              xxhash: 3.4.1
2024-02-04 15:33:36,582:INFO:           wurlitzer: Not installed
2024-02-04 15:33:36,582:INFO:PyCaret optional dependencies:
2024-02-04 15:33:36,613:INFO:                shap: 0.44.1
2024-02-04 15:33:36,613:INFO:           interpret: Not installed
2024-02-04 15:33:36,613:INFO:                umap: Not installed
2024-02-04 15:33:36,613:INFO:     ydata_profiling: Not installed
2024-02-04 15:33:36,614:INFO:  explainerdashboard: Not installed
2024-02-04 15:33:36,614:INFO:             autoviz: Not installed
2024-02-04 15:33:36,614:INFO:           fairlearn: Not installed
2024-02-04 15:33:36,614:INFO:          deepchecks: Not installed
2024-02-04 15:33:36,614:INFO:             xgboost: 2.0.3
2024-02-04 15:33:36,614:INFO:            catboost: 1.2.2
2024-02-04 15:33:36,614:INFO:              kmodes: Not installed
2024-02-04 15:33:36,614:INFO:             mlxtend: Not installed
2024-02-04 15:33:36,614:INFO:       statsforecast: Not installed
2024-02-04 15:33:36,614:INFO:        tune_sklearn: Not installed
2024-02-04 15:33:36,614:INFO:                 ray: Not installed
2024-02-04 15:33:36,614:INFO:            hyperopt: Not installed
2024-02-04 15:33:36,614:INFO:              optuna: Not installed
2024-02-04 15:33:36,614:INFO:               skopt: Not installed
2024-02-04 15:33:36,614:INFO:              mlflow: Not installed
2024-02-04 15:33:36,614:INFO:              gradio: Not installed
2024-02-04 15:33:36,614:INFO:             fastapi: Not installed
2024-02-04 15:33:36,614:INFO:             uvicorn: Not installed
2024-02-04 15:33:36,614:INFO:              m2cgen: Not installed
2024-02-04 15:33:36,614:INFO:           evidently: Not installed
2024-02-04 15:33:36,614:INFO:               fugue: Not installed
2024-02-04 15:33:36,614:INFO:           streamlit: Not installed
2024-02-04 15:33:36,614:INFO:             prophet: 1.1.5
2024-02-04 15:33:36,614:INFO:None
2024-02-04 15:33:36,614:INFO:Set up data.
2024-02-04 15:33:36,619:INFO:Set up folding strategy.
2024-02-04 15:33:36,619:INFO:Set up train/test split.
2024-02-04 15:33:36,622:INFO:Set up index.
2024-02-04 15:33:36,622:INFO:Assigning column types.
2024-02-04 15:33:36,624:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:33:36,650:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:33:36,651:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:33:36,671:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:33:36,673:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:33:36,713:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:33:36,714:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:33:36,729:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:33:36,730:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:33:36,730:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:33:36,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:33:36,775:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:33:36,777:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:33:36,802:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:33:36,817:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:33:36,818:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:33:36,818:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:33:36,857:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:33:36,858:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:33:36,901:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:33:36,903:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:33:36,905:INFO:Preparing preprocessing pipeline...
2024-02-04 15:33:36,906:INFO:Set up label encoding.
2024-02-04 15:33:36,906:INFO:Set up simple imputation.
2024-02-04 15:33:36,984:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:33:36,988:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:33:36,988:INFO:Creating final display dataframe.
2024-02-04 15:33:37,030:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  6141
2024-02-04 15:33:37,072:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:33:37,074:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:33:37,112:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:33:37,114:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:33:37,114:INFO:setup() successfully completed in 0.58s...............
2024-02-04 15:33:37,114:INFO:Initializing create_model()
2024-02-04 15:33:37,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ABBBFEA9D0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:33:37,114:INFO:Checking exceptions
2024-02-04 15:33:37,116:INFO:Importing libraries
2024-02-04 15:33:37,116:INFO:Copying training dataset
2024-02-04 15:33:37,120:INFO:Defining folds
2024-02-04 15:33:37,120:INFO:Declaring metric variables
2024-02-04 15:33:37,120:INFO:Importing untrained model
2024-02-04 15:33:37,120:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:33:37,120:INFO:Starting cross validation
2024-02-04 15:33:37,120:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:33:39,691:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,693:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,694:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,760:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,761:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,763:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,807:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,808:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,809:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,835:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,836:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,842:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,843:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,845:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:33:39,850:INFO:Calculating mean and std
2024-02-04 15:33:39,851:INFO:Creating metrics dataframe
2024-02-04 15:33:39,852:INFO:Finalizing model
2024-02-04 15:33:39,910:INFO:Uploading results into container
2024-02-04 15:33:39,911:INFO:Uploading model into container now
2024-02-04 15:33:39,916:INFO:_master_model_container: 1
2024-02-04 15:33:39,916:INFO:_display_container: 2
2024-02-04 15:33:39,917:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:33:39,917:INFO:create_model() successfully completed......................................
2024-02-04 15:33:39,987:INFO:Initializing predict_model()
2024-02-04 15:33:39,987:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ABBBFEA9D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AB98C3A5C0>)
2024-02-04 15:33:39,987:INFO:Checking exceptions
2024-02-04 15:33:39,987:INFO:Preloading libraries
2024-02-04 15:33:39,987:INFO:Set up data.
2024-02-04 15:33:39,990:INFO:Set up index.
2024-02-04 15:33:40,082:INFO:Initializing plot_model()
2024-02-04 15:33:40,083:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ABBBFEA9D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:33:40,083:INFO:Checking exceptions
2024-02-04 15:33:40,086:INFO:Preloading libraries
2024-02-04 15:33:40,089:INFO:Copying training dataset
2024-02-04 15:33:40,089:INFO:Plot type: auc
2024-02-04 15:33:40,168:INFO:Fitting Model
2024-02-04 15:33:40,170:INFO:Scoring test/hold-out set
2024-02-04 15:33:40,185:INFO:Saving 'AUC.png'
2024-02-04 15:33:40,320:INFO:Visual Rendered Successfully
2024-02-04 15:33:40,383:INFO:plot_model() successfully completed......................................
2024-02-04 15:33:40,383:INFO:Initializing plot_model()
2024-02-04 15:33:40,383:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ABBBFEA9D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:33:40,383:INFO:Checking exceptions
2024-02-04 15:33:40,385:INFO:Preloading libraries
2024-02-04 15:33:40,389:INFO:Copying training dataset
2024-02-04 15:33:40,389:INFO:Plot type: confusion_matrix
2024-02-04 15:33:40,446:INFO:Fitting Model
2024-02-04 15:33:40,446:INFO:Scoring test/hold-out set
2024-02-04 15:33:40,457:INFO:Saving 'Confusion Matrix.png'
2024-02-04 15:33:40,531:INFO:Visual Rendered Successfully
2024-02-04 15:33:40,591:INFO:plot_model() successfully completed......................................
2024-02-04 15:33:40,591:INFO:Initializing plot_model()
2024-02-04 15:33:40,592:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ABBBFEA9D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:33:40,592:INFO:Checking exceptions
2024-02-04 15:33:40,593:INFO:Preloading libraries
2024-02-04 15:33:40,599:INFO:Copying training dataset
2024-02-04 15:33:40,599:INFO:Plot type: feature
2024-02-04 15:33:40,601:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 15:33:40,637:INFO:Saving 'Feature Importance.png'
2024-02-04 15:33:40,713:INFO:Visual Rendered Successfully
2024-02-04 15:33:40,772:INFO:plot_model() successfully completed......................................
2024-02-04 15:33:40,773:INFO:Initializing plot_model()
2024-02-04 15:33:40,773:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ABBBFEA9D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=calibration, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:33:40,773:INFO:Checking exceptions
2024-02-04 15:33:40,775:INFO:Preloading libraries
2024-02-04 15:33:40,779:INFO:Copying training dataset
2024-02-04 15:33:40,779:INFO:Plot type: calibration
2024-02-04 15:33:40,787:INFO:Scoring test/hold-out set
2024-02-04 15:33:40,833:INFO:Saving 'Calibration Curve.png'
2024-02-04 15:33:40,917:INFO:Visual Rendered Successfully
2024-02-04 15:33:40,978:INFO:plot_model() successfully completed......................................
2024-02-04 15:33:40,979:INFO:Initializing plot_model()
2024-02-04 15:33:40,979:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ABBBFEA9D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=parameter, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:33:40,979:INFO:Checking exceptions
2024-02-04 15:33:40,980:INFO:Preloading libraries
2024-02-04 15:33:40,983:INFO:Copying training dataset
2024-02-04 15:33:40,984:INFO:Plot type: parameter
2024-02-04 15:33:40,987:INFO:                              Parameters
2024-02-04 15:33:40,987:INFO:objective                binary:logistic
2024-02-04 15:33:40,987:INFO:base_score                          None
2024-02-04 15:33:40,987:INFO:booster                           gbtree
2024-02-04 15:33:40,987:INFO:callbacks                           None
2024-02-04 15:33:40,987:INFO:colsample_bylevel                   None
2024-02-04 15:33:40,987:INFO:colsample_bynode                    None
2024-02-04 15:33:40,987:INFO:colsample_bytree                    None
2024-02-04 15:33:40,987:INFO:device                               cpu
2024-02-04 15:33:40,987:INFO:early_stopping_rounds               None
2024-02-04 15:33:40,987:INFO:enable_categorical                 False
2024-02-04 15:33:40,987:INFO:eval_metric                         None
2024-02-04 15:33:40,987:INFO:feature_types                       None
2024-02-04 15:33:40,987:INFO:gamma                               None
2024-02-04 15:33:40,987:INFO:grow_policy                         None
2024-02-04 15:33:40,987:INFO:importance_type                     None
2024-02-04 15:33:40,987:INFO:interaction_constraints             None
2024-02-04 15:33:40,987:INFO:learning_rate                       None
2024-02-04 15:33:40,987:INFO:max_bin                             None
2024-02-04 15:33:40,987:INFO:max_cat_threshold                   None
2024-02-04 15:33:40,987:INFO:max_cat_to_onehot                   None
2024-02-04 15:33:40,987:INFO:max_delta_step                      None
2024-02-04 15:33:40,987:INFO:max_depth                           None
2024-02-04 15:33:40,987:INFO:max_leaves                          None
2024-02-04 15:33:40,987:INFO:min_child_weight                    None
2024-02-04 15:33:40,987:INFO:missing                              nan
2024-02-04 15:33:40,987:INFO:monotone_constraints                None
2024-02-04 15:33:40,987:INFO:multi_strategy                      None
2024-02-04 15:33:40,987:INFO:n_estimators                        None
2024-02-04 15:33:40,987:INFO:n_jobs                                -1
2024-02-04 15:33:40,987:INFO:num_parallel_tree                   None
2024-02-04 15:33:40,987:INFO:random_state                         123
2024-02-04 15:33:40,987:INFO:reg_alpha                           None
2024-02-04 15:33:40,987:INFO:reg_lambda                          None
2024-02-04 15:33:40,987:INFO:sampling_method                     None
2024-02-04 15:33:40,987:INFO:scale_pos_weight                    None
2024-02-04 15:33:40,987:INFO:subsample                           None
2024-02-04 15:33:40,987:INFO:tree_method                         auto
2024-02-04 15:33:40,987:INFO:validate_parameters                 None
2024-02-04 15:33:40,987:INFO:verbosity                              0
2024-02-04 15:33:40,987:INFO:Visual Rendered Successfully
2024-02-04 15:33:41,055:INFO:plot_model() successfully completed......................................
2024-02-04 15:33:41,056:INFO:Initializing interpret_model()
2024-02-04 15:33:41,056:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ABBBFEA9D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 15:33:41,056:INFO:Checking exceptions
2024-02-04 15:33:41,056:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 15:33:41,292:INFO:plot type: summary
2024-02-04 15:33:41,292:INFO:Creating TreeExplainer
2024-02-04 15:33:41,306:INFO:Compiling shap values
2024-02-04 15:33:41,368:INFO:Saving 'SHAP summary.png'
2024-02-04 15:33:41,469:INFO:Visual Rendered Successfully
2024-02-04 15:33:41,469:INFO:interpret_model() successfully completed......................................
2024-02-04 15:36:48,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:36:48,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:36:48,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:36:48,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:36:49,058:INFO:PyCaret ClassificationExperiment
2024-02-04 15:36:49,058:INFO:Logging name: clf-default-name
2024-02-04 15:36:49,058:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:36:49,058:INFO:version 3.2.0
2024-02-04 15:36:49,058:INFO:Initializing setup()
2024-02-04 15:36:49,058:INFO:self.USI: 075d
2024-02-04 15:36:49,058:INFO:self._variable_keys: {'X_test', 'y', 'y_test', 'X', 'fold_groups_param', 'gpu_n_jobs_param', 'log_plots_param', 'pipeline', 'target_param', 'fold_generator', 'n_jobs_param', 'logging_param', 'exp_name_log', 'idx', 'html_param', '_available_plots', 'memory', 'exp_id', 'gpu_param', '_ml_usecase', 'fix_imbalance', 'data', 'X_train', 'is_multiclass', 'y_train', 'seed', 'fold_shuffle_param', 'USI'}
2024-02-04 15:36:49,058:INFO:Checking environment
2024-02-04 15:36:49,058:INFO:python_version: 3.11.7
2024-02-04 15:36:49,058:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:36:49,058:INFO:machine: AMD64
2024-02-04 15:36:49,066:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:36:49,069:INFO:Memory: svmem(total=16892026880, available=4471738368, percent=73.5, used=12420288512, free=4471738368)
2024-02-04 15:36:49,069:INFO:Physical Core: 12
2024-02-04 15:36:49,069:INFO:Logical Core: 16
2024-02-04 15:36:49,069:INFO:Checking libraries
2024-02-04 15:36:49,069:INFO:System:
2024-02-04 15:36:49,070:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:36:49,070:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:36:49,070:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:36:49,070:INFO:PyCaret required dependencies:
2024-02-04 15:36:49,096:INFO:                 pip: 23.3.2
2024-02-04 15:36:49,097:INFO:          setuptools: 65.5.0
2024-02-04 15:36:49,097:INFO:             pycaret: 3.2.0
2024-02-04 15:36:49,097:INFO:             IPython: 8.20.0
2024-02-04 15:36:49,097:INFO:          ipywidgets: 8.1.1
2024-02-04 15:36:49,097:INFO:                tqdm: 4.66.1
2024-02-04 15:36:49,097:INFO:               numpy: 1.25.2
2024-02-04 15:36:49,097:INFO:              pandas: 1.5.3
2024-02-04 15:36:49,097:INFO:              jinja2: 3.1.3
2024-02-04 15:36:49,097:INFO:               scipy: 1.10.1
2024-02-04 15:36:49,097:INFO:              joblib: 1.3.2
2024-02-04 15:36:49,097:INFO:             sklearn: 1.2.2
2024-02-04 15:36:49,097:INFO:                pyod: 1.1.2
2024-02-04 15:36:49,097:INFO:            imblearn: 0.12.0
2024-02-04 15:36:49,097:INFO:   category_encoders: 2.6.3
2024-02-04 15:36:49,097:INFO:            lightgbm: 4.3.0
2024-02-04 15:36:49,097:INFO:               numba: 0.58.1
2024-02-04 15:36:49,097:INFO:            requests: 2.31.0
2024-02-04 15:36:49,097:INFO:          matplotlib: 3.6.0
2024-02-04 15:36:49,097:INFO:          scikitplot: 0.3.7
2024-02-04 15:36:49,097:INFO:         yellowbrick: 1.5
2024-02-04 15:36:49,097:INFO:              plotly: 5.18.0
2024-02-04 15:36:49,097:INFO:    plotly-resampler: Not installed
2024-02-04 15:36:49,097:INFO:             kaleido: 0.2.1
2024-02-04 15:36:49,097:INFO:           schemdraw: 0.15
2024-02-04 15:36:49,097:INFO:         statsmodels: 0.14.1
2024-02-04 15:36:49,097:INFO:              sktime: 0.21.1
2024-02-04 15:36:49,097:INFO:               tbats: 1.1.3
2024-02-04 15:36:49,097:INFO:            pmdarima: 2.0.4
2024-02-04 15:36:49,097:INFO:              psutil: 5.9.8
2024-02-04 15:36:49,097:INFO:          markupsafe: 2.1.4
2024-02-04 15:36:49,097:INFO:             pickle5: Not installed
2024-02-04 15:36:49,097:INFO:         cloudpickle: 3.0.0
2024-02-04 15:36:49,097:INFO:         deprecation: 2.1.0
2024-02-04 15:36:49,097:INFO:              xxhash: 3.4.1
2024-02-04 15:36:49,097:INFO:           wurlitzer: Not installed
2024-02-04 15:36:49,097:INFO:PyCaret optional dependencies:
2024-02-04 15:36:49,125:INFO:                shap: 0.44.1
2024-02-04 15:36:49,125:INFO:           interpret: Not installed
2024-02-04 15:36:49,125:INFO:                umap: Not installed
2024-02-04 15:36:49,125:INFO:     ydata_profiling: Not installed
2024-02-04 15:36:49,125:INFO:  explainerdashboard: Not installed
2024-02-04 15:36:49,125:INFO:             autoviz: Not installed
2024-02-04 15:36:49,125:INFO:           fairlearn: Not installed
2024-02-04 15:36:49,125:INFO:          deepchecks: Not installed
2024-02-04 15:36:49,125:INFO:             xgboost: 2.0.3
2024-02-04 15:36:49,125:INFO:            catboost: 1.2.2
2024-02-04 15:36:49,125:INFO:              kmodes: Not installed
2024-02-04 15:36:49,125:INFO:             mlxtend: Not installed
2024-02-04 15:36:49,125:INFO:       statsforecast: Not installed
2024-02-04 15:36:49,125:INFO:        tune_sklearn: Not installed
2024-02-04 15:36:49,125:INFO:                 ray: Not installed
2024-02-04 15:36:49,125:INFO:            hyperopt: Not installed
2024-02-04 15:36:49,125:INFO:              optuna: Not installed
2024-02-04 15:36:49,125:INFO:               skopt: Not installed
2024-02-04 15:36:49,125:INFO:              mlflow: Not installed
2024-02-04 15:36:49,125:INFO:              gradio: Not installed
2024-02-04 15:36:49,125:INFO:             fastapi: Not installed
2024-02-04 15:36:49,125:INFO:             uvicorn: Not installed
2024-02-04 15:36:49,125:INFO:              m2cgen: Not installed
2024-02-04 15:36:49,125:INFO:           evidently: Not installed
2024-02-04 15:36:49,125:INFO:               fugue: Not installed
2024-02-04 15:36:49,125:INFO:           streamlit: Not installed
2024-02-04 15:36:49,125:INFO:             prophet: 1.1.5
2024-02-04 15:36:49,125:INFO:None
2024-02-04 15:36:49,125:INFO:Set up data.
2024-02-04 15:36:49,130:INFO:Set up folding strategy.
2024-02-04 15:36:49,130:INFO:Set up train/test split.
2024-02-04 15:36:49,132:INFO:Set up index.
2024-02-04 15:36:49,132:INFO:Assigning column types.
2024-02-04 15:36:49,133:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:36:49,157:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:36:49,158:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:36:49,176:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:36:49,178:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:36:49,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:36:49,218:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:36:49,233:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:36:49,235:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:36:49,235:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:36:49,260:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:36:49,274:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:36:49,276:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:36:49,302:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:36:49,317:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:36:49,318:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:36:49,319:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:36:49,358:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:36:49,360:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:36:49,398:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:36:49,400:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:36:49,401:INFO:Preparing preprocessing pipeline...
2024-02-04 15:36:49,402:INFO:Set up label encoding.
2024-02-04 15:36:49,402:INFO:Set up simple imputation.
2024-02-04 15:36:49,472:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:36:49,475:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:36:49,475:INFO:Creating final display dataframe.
2024-02-04 15:36:49,512:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  075d
2024-02-04 15:36:49,552:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:36:49,554:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:36:49,592:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:36:49,594:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:36:49,595:INFO:setup() successfully completed in 0.54s...............
2024-02-04 15:36:49,595:INFO:Initializing create_model()
2024-02-04 15:36:49,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF1E8CAC50>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:36:49,595:INFO:Checking exceptions
2024-02-04 15:36:49,596:INFO:Importing libraries
2024-02-04 15:36:49,596:INFO:Copying training dataset
2024-02-04 15:36:49,598:INFO:Defining folds
2024-02-04 15:36:49,598:INFO:Declaring metric variables
2024-02-04 15:36:49,598:INFO:Importing untrained model
2024-02-04 15:36:49,598:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:36:49,598:INFO:Starting cross validation
2024-02-04 15:36:49,599:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:36:52,226:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,227:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,228:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,269:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,271:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,273:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,277:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,278:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,279:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,284:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,286:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,287:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,288:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,289:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,290:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:36:52,303:INFO:Calculating mean and std
2024-02-04 15:36:52,304:INFO:Creating metrics dataframe
2024-02-04 15:36:52,305:INFO:Finalizing model
2024-02-04 15:36:52,352:INFO:Uploading results into container
2024-02-04 15:36:52,352:INFO:Uploading model into container now
2024-02-04 15:36:52,358:INFO:_master_model_container: 1
2024-02-04 15:36:52,358:INFO:_display_container: 2
2024-02-04 15:36:52,358:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:36:52,358:INFO:create_model() successfully completed......................................
2024-02-04 15:36:52,424:INFO:Initializing predict_model()
2024-02-04 15:36:52,424:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF1E8CAC50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EF7B4AA5C0>)
2024-02-04 15:36:52,424:INFO:Checking exceptions
2024-02-04 15:36:52,424:INFO:Preloading libraries
2024-02-04 15:36:52,424:INFO:Set up data.
2024-02-04 15:36:52,426:INFO:Set up index.
2024-02-04 15:36:52,506:INFO:Initializing plot_model()
2024-02-04 15:36:52,506:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF1E8CAC50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:36:52,506:INFO:Checking exceptions
2024-02-04 15:36:52,508:INFO:Preloading libraries
2024-02-04 15:36:52,512:INFO:Copying training dataset
2024-02-04 15:36:52,512:INFO:Plot type: auc
2024-02-04 15:36:52,591:INFO:Fitting Model
2024-02-04 15:36:52,592:INFO:Scoring test/hold-out set
2024-02-04 15:36:52,608:INFO:Saving 'AUC.png'
2024-02-04 15:36:52,739:INFO:Visual Rendered Successfully
2024-02-04 15:36:52,797:INFO:plot_model() successfully completed......................................
2024-02-04 15:36:52,798:INFO:Initializing plot_model()
2024-02-04 15:36:52,798:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF1E8CAC50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:36:52,798:INFO:Checking exceptions
2024-02-04 15:36:52,800:INFO:Preloading libraries
2024-02-04 15:36:52,805:INFO:Copying training dataset
2024-02-04 15:36:52,805:INFO:Plot type: confusion_matrix
2024-02-04 15:36:52,868:INFO:Fitting Model
2024-02-04 15:36:52,869:INFO:Scoring test/hold-out set
2024-02-04 15:36:52,885:INFO:Saving 'Confusion Matrix.png'
2024-02-04 15:36:52,959:INFO:Visual Rendered Successfully
2024-02-04 15:36:53,017:INFO:plot_model() successfully completed......................................
2024-02-04 15:36:53,017:INFO:Initializing plot_model()
2024-02-04 15:36:53,017:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF1E8CAC50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:36:53,017:INFO:Checking exceptions
2024-02-04 15:36:53,018:INFO:Preloading libraries
2024-02-04 15:36:53,022:INFO:Copying training dataset
2024-02-04 15:36:53,022:INFO:Plot type: feature
2024-02-04 15:36:53,022:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 15:36:53,047:INFO:Saving 'Feature Importance.png'
2024-02-04 15:36:53,124:INFO:Visual Rendered Successfully
2024-02-04 15:36:53,182:INFO:plot_model() successfully completed......................................
2024-02-04 15:36:53,182:INFO:Initializing plot_model()
2024-02-04 15:36:53,183:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF1E8CAC50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=parameter, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:36:53,183:INFO:Checking exceptions
2024-02-04 15:36:53,184:INFO:Preloading libraries
2024-02-04 15:36:53,188:INFO:Copying training dataset
2024-02-04 15:36:53,188:INFO:Plot type: parameter
2024-02-04 15:36:53,191:INFO:                              Parameters
2024-02-04 15:36:53,191:INFO:objective                binary:logistic
2024-02-04 15:36:53,192:INFO:base_score                          None
2024-02-04 15:36:53,192:INFO:booster                           gbtree
2024-02-04 15:36:53,192:INFO:callbacks                           None
2024-02-04 15:36:53,192:INFO:colsample_bylevel                   None
2024-02-04 15:36:53,192:INFO:colsample_bynode                    None
2024-02-04 15:36:53,192:INFO:colsample_bytree                    None
2024-02-04 15:36:53,192:INFO:device                               cpu
2024-02-04 15:36:53,192:INFO:early_stopping_rounds               None
2024-02-04 15:36:53,192:INFO:enable_categorical                 False
2024-02-04 15:36:53,192:INFO:eval_metric                         None
2024-02-04 15:36:53,192:INFO:feature_types                       None
2024-02-04 15:36:53,192:INFO:gamma                               None
2024-02-04 15:36:53,192:INFO:grow_policy                         None
2024-02-04 15:36:53,192:INFO:importance_type                     None
2024-02-04 15:36:53,192:INFO:interaction_constraints             None
2024-02-04 15:36:53,192:INFO:learning_rate                       None
2024-02-04 15:36:53,192:INFO:max_bin                             None
2024-02-04 15:36:53,192:INFO:max_cat_threshold                   None
2024-02-04 15:36:53,192:INFO:max_cat_to_onehot                   None
2024-02-04 15:36:53,192:INFO:max_delta_step                      None
2024-02-04 15:36:53,193:INFO:max_depth                           None
2024-02-04 15:36:53,193:INFO:max_leaves                          None
2024-02-04 15:36:53,193:INFO:min_child_weight                    None
2024-02-04 15:36:53,193:INFO:missing                              nan
2024-02-04 15:36:53,193:INFO:monotone_constraints                None
2024-02-04 15:36:53,193:INFO:multi_strategy                      None
2024-02-04 15:36:53,193:INFO:n_estimators                        None
2024-02-04 15:36:53,193:INFO:n_jobs                                -1
2024-02-04 15:36:53,193:INFO:num_parallel_tree                   None
2024-02-04 15:36:53,193:INFO:random_state                         123
2024-02-04 15:36:53,193:INFO:reg_alpha                           None
2024-02-04 15:36:53,193:INFO:reg_lambda                          None
2024-02-04 15:36:53,193:INFO:sampling_method                     None
2024-02-04 15:36:53,193:INFO:scale_pos_weight                    None
2024-02-04 15:36:53,193:INFO:subsample                           None
2024-02-04 15:36:53,193:INFO:tree_method                         auto
2024-02-04 15:36:53,193:INFO:validate_parameters                 None
2024-02-04 15:36:53,193:INFO:verbosity                              0
2024-02-04 15:36:53,193:INFO:Visual Rendered Successfully
2024-02-04 15:36:53,258:INFO:plot_model() successfully completed......................................
2024-02-04 15:36:53,259:INFO:Initializing plot_model()
2024-02-04 15:36:53,259:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF1E8CAC50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=ks, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:36:53,259:INFO:Checking exceptions
2024-02-04 15:36:53,261:INFO:Preloading libraries
2024-02-04 15:36:53,266:INFO:Copying training dataset
2024-02-04 15:36:53,266:INFO:Plot type: ks
2024-02-04 15:36:53,266:INFO:Generating predictions / predict_proba on X_test
2024-02-04 15:36:53,312:INFO:Saving 'KS Statistic Plot.png'
2024-02-04 15:36:53,414:INFO:Visual Rendered Successfully
2024-02-04 15:36:53,470:INFO:plot_model() successfully completed......................................
2024-02-04 15:36:53,471:INFO:Initializing interpret_model()
2024-02-04 15:36:53,471:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF1E8CAC50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 15:36:53,471:INFO:Checking exceptions
2024-02-04 15:36:53,471:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 15:36:53,695:INFO:plot type: summary
2024-02-04 15:36:53,695:INFO:Creating TreeExplainer
2024-02-04 15:36:53,710:INFO:Compiling shap values
2024-02-04 15:36:53,771:INFO:Saving 'SHAP summary.png'
2024-02-04 15:36:53,867:INFO:Visual Rendered Successfully
2024-02-04 15:36:53,867:INFO:interpret_model() successfully completed......................................
2024-02-04 15:40:03,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:40:03,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:40:03,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:40:03,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:40:04,367:INFO:PyCaret ClassificationExperiment
2024-02-04 15:40:04,367:INFO:Logging name: clf-default-name
2024-02-04 15:40:04,367:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:40:04,368:INFO:version 3.2.0
2024-02-04 15:40:04,368:INFO:Initializing setup()
2024-02-04 15:40:04,368:INFO:self.USI: 92cf
2024-02-04 15:40:04,368:INFO:self._variable_keys: {'memory', 'idx', 'fold_shuffle_param', 'exp_name_log', '_available_plots', 'data', 'log_plots_param', 'y', 'gpu_param', 'USI', 'fold_groups_param', 'fix_imbalance', 'gpu_n_jobs_param', 'y_test', 'is_multiclass', 'X_train', 'logging_param', 'n_jobs_param', 'X_test', 'X', 'target_param', 'fold_generator', 'html_param', 'seed', '_ml_usecase', 'exp_id', 'pipeline', 'y_train'}
2024-02-04 15:40:04,368:INFO:Checking environment
2024-02-04 15:40:04,368:INFO:python_version: 3.11.7
2024-02-04 15:40:04,368:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:40:04,368:INFO:machine: AMD64
2024-02-04 15:40:04,368:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:40:04,374:INFO:Memory: svmem(total=16892026880, available=3788857344, percent=77.6, used=13103169536, free=3788857344)
2024-02-04 15:40:04,374:INFO:Physical Core: 12
2024-02-04 15:40:04,375:INFO:Logical Core: 16
2024-02-04 15:40:04,375:INFO:Checking libraries
2024-02-04 15:40:04,375:INFO:System:
2024-02-04 15:40:04,375:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:40:04,375:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:40:04,375:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:40:04,375:INFO:PyCaret required dependencies:
2024-02-04 15:40:04,407:INFO:                 pip: 23.3.2
2024-02-04 15:40:04,407:INFO:          setuptools: 65.5.0
2024-02-04 15:40:04,407:INFO:             pycaret: 3.2.0
2024-02-04 15:40:04,407:INFO:             IPython: 8.20.0
2024-02-04 15:40:04,407:INFO:          ipywidgets: 8.1.1
2024-02-04 15:40:04,407:INFO:                tqdm: 4.66.1
2024-02-04 15:40:04,407:INFO:               numpy: 1.25.2
2024-02-04 15:40:04,407:INFO:              pandas: 1.5.3
2024-02-04 15:40:04,407:INFO:              jinja2: 3.1.3
2024-02-04 15:40:04,407:INFO:               scipy: 1.10.1
2024-02-04 15:40:04,407:INFO:              joblib: 1.3.2
2024-02-04 15:40:04,407:INFO:             sklearn: 1.2.2
2024-02-04 15:40:04,407:INFO:                pyod: 1.1.2
2024-02-04 15:40:04,407:INFO:            imblearn: 0.12.0
2024-02-04 15:40:04,407:INFO:   category_encoders: 2.6.3
2024-02-04 15:40:04,407:INFO:            lightgbm: 4.3.0
2024-02-04 15:40:04,407:INFO:               numba: 0.58.1
2024-02-04 15:40:04,407:INFO:            requests: 2.31.0
2024-02-04 15:40:04,407:INFO:          matplotlib: 3.6.0
2024-02-04 15:40:04,407:INFO:          scikitplot: 0.3.7
2024-02-04 15:40:04,407:INFO:         yellowbrick: 1.5
2024-02-04 15:40:04,407:INFO:              plotly: 5.18.0
2024-02-04 15:40:04,407:INFO:    plotly-resampler: Not installed
2024-02-04 15:40:04,407:INFO:             kaleido: 0.2.1
2024-02-04 15:40:04,407:INFO:           schemdraw: 0.15
2024-02-04 15:40:04,407:INFO:         statsmodels: 0.14.1
2024-02-04 15:40:04,407:INFO:              sktime: 0.21.1
2024-02-04 15:40:04,407:INFO:               tbats: 1.1.3
2024-02-04 15:40:04,407:INFO:            pmdarima: 2.0.4
2024-02-04 15:40:04,407:INFO:              psutil: 5.9.8
2024-02-04 15:40:04,407:INFO:          markupsafe: 2.1.4
2024-02-04 15:40:04,407:INFO:             pickle5: Not installed
2024-02-04 15:40:04,407:INFO:         cloudpickle: 3.0.0
2024-02-04 15:40:04,407:INFO:         deprecation: 2.1.0
2024-02-04 15:40:04,407:INFO:              xxhash: 3.4.1
2024-02-04 15:40:04,407:INFO:           wurlitzer: Not installed
2024-02-04 15:40:04,407:INFO:PyCaret optional dependencies:
2024-02-04 15:40:04,494:INFO:                shap: 0.44.1
2024-02-04 15:40:04,494:INFO:           interpret: Not installed
2024-02-04 15:40:04,494:INFO:                umap: Not installed
2024-02-04 15:40:04,494:INFO:     ydata_profiling: Not installed
2024-02-04 15:40:04,494:INFO:  explainerdashboard: Not installed
2024-02-04 15:40:04,494:INFO:             autoviz: Not installed
2024-02-04 15:40:04,494:INFO:           fairlearn: Not installed
2024-02-04 15:40:04,494:INFO:          deepchecks: Not installed
2024-02-04 15:40:04,494:INFO:             xgboost: 2.0.3
2024-02-04 15:40:04,494:INFO:            catboost: 1.2.2
2024-02-04 15:40:04,494:INFO:              kmodes: Not installed
2024-02-04 15:40:04,494:INFO:             mlxtend: Not installed
2024-02-04 15:40:04,494:INFO:       statsforecast: Not installed
2024-02-04 15:40:04,494:INFO:        tune_sklearn: Not installed
2024-02-04 15:40:04,494:INFO:                 ray: Not installed
2024-02-04 15:40:04,494:INFO:            hyperopt: Not installed
2024-02-04 15:40:04,494:INFO:              optuna: Not installed
2024-02-04 15:40:04,494:INFO:               skopt: Not installed
2024-02-04 15:40:04,494:INFO:              mlflow: Not installed
2024-02-04 15:40:04,494:INFO:              gradio: Not installed
2024-02-04 15:40:04,494:INFO:             fastapi: Not installed
2024-02-04 15:40:04,494:INFO:             uvicorn: Not installed
2024-02-04 15:40:04,494:INFO:              m2cgen: Not installed
2024-02-04 15:40:04,494:INFO:           evidently: Not installed
2024-02-04 15:40:04,494:INFO:               fugue: Not installed
2024-02-04 15:40:04,495:INFO:           streamlit: Not installed
2024-02-04 15:40:04,495:INFO:             prophet: 1.1.5
2024-02-04 15:40:04,495:INFO:None
2024-02-04 15:40:04,495:INFO:Set up data.
2024-02-04 15:40:04,499:INFO:Set up folding strategy.
2024-02-04 15:40:04,499:INFO:Set up train/test split.
2024-02-04 15:40:04,501:INFO:Set up index.
2024-02-04 15:40:04,502:INFO:Assigning column types.
2024-02-04 15:40:04,503:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:40:04,526:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:40:04,527:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:40:04,546:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:40:04,547:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:40:04,592:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:40:04,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:40:04,607:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:40:04,610:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:40:04,610:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:40:04,634:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:40:04,649:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:40:04,651:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:40:04,675:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:40:04,690:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:40:04,692:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:40:04,692:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:40:04,732:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:40:04,733:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:40:04,773:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:40:04,774:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:40:04,776:INFO:Preparing preprocessing pipeline...
2024-02-04 15:40:04,776:INFO:Set up label encoding.
2024-02-04 15:40:04,776:INFO:Set up simple imputation.
2024-02-04 15:40:04,791:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:40:04,793:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:40:04,793:INFO:Creating final display dataframe.
2024-02-04 15:40:04,835:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  92cf
2024-02-04 15:40:04,882:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:40:04,883:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:40:04,926:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:40:04,929:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:40:04,930:INFO:setup() successfully completed in 0.56s...............
2024-02-04 15:40:04,931:INFO:Initializing create_model()
2024-02-04 15:40:04,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E63DC2AA10>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:40:04,931:INFO:Checking exceptions
2024-02-04 15:40:04,949:INFO:Importing libraries
2024-02-04 15:40:04,949:INFO:Copying training dataset
2024-02-04 15:40:04,954:INFO:Defining folds
2024-02-04 15:40:04,954:INFO:Declaring metric variables
2024-02-04 15:40:04,957:INFO:Importing untrained model
2024-02-04 15:40:04,960:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:40:04,967:INFO:Starting cross validation
2024-02-04 15:40:04,968:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:40:08,000:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,003:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,004:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,032:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,034:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,036:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,136:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,137:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,139:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,174:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,175:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,177:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,184:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,185:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,186:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:40:08,191:INFO:Calculating mean and std
2024-02-04 15:40:08,192:INFO:Creating metrics dataframe
2024-02-04 15:40:08,196:INFO:Finalizing model
2024-02-04 15:40:08,270:INFO:Uploading results into container
2024-02-04 15:40:08,271:INFO:Uploading model into container now
2024-02-04 15:40:08,277:INFO:_master_model_container: 1
2024-02-04 15:40:08,277:INFO:_display_container: 2
2024-02-04 15:40:08,277:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:40:08,277:INFO:create_model() successfully completed......................................
2024-02-04 15:40:08,366:INFO:Initializing predict_model()
2024-02-04 15:40:08,366:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E63DC2AA10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E63E000C20>)
2024-02-04 15:40:08,367:INFO:Checking exceptions
2024-02-04 15:40:08,367:INFO:Preloading libraries
2024-02-04 15:40:08,368:INFO:Set up data.
2024-02-04 15:40:08,370:INFO:Set up index.
2024-02-04 15:40:08,469:INFO:Initializing plot_model()
2024-02-04 15:40:08,469:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E63DC2AA10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=parameter, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:40:08,469:INFO:Checking exceptions
2024-02-04 15:40:08,474:INFO:Preloading libraries
2024-02-04 15:40:08,478:INFO:Copying training dataset
2024-02-04 15:40:08,478:INFO:Plot type: parameter
2024-02-04 15:40:08,483:INFO:Visual Rendered Successfully
2024-02-04 15:40:08,563:INFO:plot_model() successfully completed......................................
2024-02-04 15:45:05,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:45:05,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:45:05,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:45:05,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 15:45:06,531:INFO:PyCaret ClassificationExperiment
2024-02-04 15:45:06,531:INFO:Logging name: clf-default-name
2024-02-04 15:45:06,531:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 15:45:06,531:INFO:version 3.2.0
2024-02-04 15:45:06,531:INFO:Initializing setup()
2024-02-04 15:45:06,531:INFO:self.USI: 0fb1
2024-02-04 15:45:06,531:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'idx', 'USI', 'seed', 'log_plots_param', '_ml_usecase', 'logging_param', 'pipeline', 'fold_shuffle_param', 'data', 'X', 'gpu_n_jobs_param', 'exp_id', 'fix_imbalance', 'target_param', 'gpu_param', 'exp_name_log', 'y_test', 'is_multiclass', '_available_plots', 'fold_generator', 'y_train', 'y', 'memory', 'html_param', 'X_test', 'n_jobs_param'}
2024-02-04 15:45:06,531:INFO:Checking environment
2024-02-04 15:45:06,532:INFO:python_version: 3.11.7
2024-02-04 15:45:06,532:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 15:45:06,532:INFO:machine: AMD64
2024-02-04 15:45:06,540:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 15:45:06,543:INFO:Memory: svmem(total=16892026880, available=2627604480, percent=84.4, used=14264422400, free=2627604480)
2024-02-04 15:45:06,543:INFO:Physical Core: 12
2024-02-04 15:45:06,543:INFO:Logical Core: 16
2024-02-04 15:45:06,543:INFO:Checking libraries
2024-02-04 15:45:06,543:INFO:System:
2024-02-04 15:45:06,543:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 15:45:06,544:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 15:45:06,544:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 15:45:06,544:INFO:PyCaret required dependencies:
2024-02-04 15:45:06,572:INFO:                 pip: 23.3.2
2024-02-04 15:45:06,572:INFO:          setuptools: 65.5.0
2024-02-04 15:45:06,572:INFO:             pycaret: 3.2.0
2024-02-04 15:45:06,572:INFO:             IPython: 8.20.0
2024-02-04 15:45:06,572:INFO:          ipywidgets: 8.1.1
2024-02-04 15:45:06,572:INFO:                tqdm: 4.66.1
2024-02-04 15:45:06,572:INFO:               numpy: 1.25.2
2024-02-04 15:45:06,572:INFO:              pandas: 1.5.3
2024-02-04 15:45:06,572:INFO:              jinja2: 3.1.3
2024-02-04 15:45:06,572:INFO:               scipy: 1.10.1
2024-02-04 15:45:06,572:INFO:              joblib: 1.3.2
2024-02-04 15:45:06,572:INFO:             sklearn: 1.2.2
2024-02-04 15:45:06,572:INFO:                pyod: 1.1.2
2024-02-04 15:45:06,572:INFO:            imblearn: 0.12.0
2024-02-04 15:45:06,572:INFO:   category_encoders: 2.6.3
2024-02-04 15:45:06,572:INFO:            lightgbm: 4.3.0
2024-02-04 15:45:06,572:INFO:               numba: 0.58.1
2024-02-04 15:45:06,572:INFO:            requests: 2.31.0
2024-02-04 15:45:06,572:INFO:          matplotlib: 3.6.0
2024-02-04 15:45:06,572:INFO:          scikitplot: 0.3.7
2024-02-04 15:45:06,572:INFO:         yellowbrick: 1.5
2024-02-04 15:45:06,572:INFO:              plotly: 5.18.0
2024-02-04 15:45:06,572:INFO:    plotly-resampler: Not installed
2024-02-04 15:45:06,572:INFO:             kaleido: 0.2.1
2024-02-04 15:45:06,572:INFO:           schemdraw: 0.15
2024-02-04 15:45:06,572:INFO:         statsmodels: 0.14.1
2024-02-04 15:45:06,572:INFO:              sktime: 0.21.1
2024-02-04 15:45:06,572:INFO:               tbats: 1.1.3
2024-02-04 15:45:06,572:INFO:            pmdarima: 2.0.4
2024-02-04 15:45:06,572:INFO:              psutil: 5.9.8
2024-02-04 15:45:06,572:INFO:          markupsafe: 2.1.4
2024-02-04 15:45:06,572:INFO:             pickle5: Not installed
2024-02-04 15:45:06,572:INFO:         cloudpickle: 3.0.0
2024-02-04 15:45:06,572:INFO:         deprecation: 2.1.0
2024-02-04 15:45:06,572:INFO:              xxhash: 3.4.1
2024-02-04 15:45:06,572:INFO:           wurlitzer: Not installed
2024-02-04 15:45:06,572:INFO:PyCaret optional dependencies:
2024-02-04 15:45:06,600:INFO:                shap: 0.44.1
2024-02-04 15:45:06,600:INFO:           interpret: Not installed
2024-02-04 15:45:06,600:INFO:                umap: Not installed
2024-02-04 15:45:06,600:INFO:     ydata_profiling: Not installed
2024-02-04 15:45:06,600:INFO:  explainerdashboard: Not installed
2024-02-04 15:45:06,600:INFO:             autoviz: Not installed
2024-02-04 15:45:06,600:INFO:           fairlearn: Not installed
2024-02-04 15:45:06,600:INFO:          deepchecks: Not installed
2024-02-04 15:45:06,600:INFO:             xgboost: 2.0.3
2024-02-04 15:45:06,600:INFO:            catboost: 1.2.2
2024-02-04 15:45:06,600:INFO:              kmodes: Not installed
2024-02-04 15:45:06,600:INFO:             mlxtend: Not installed
2024-02-04 15:45:06,600:INFO:       statsforecast: Not installed
2024-02-04 15:45:06,600:INFO:        tune_sklearn: Not installed
2024-02-04 15:45:06,601:INFO:                 ray: Not installed
2024-02-04 15:45:06,601:INFO:            hyperopt: Not installed
2024-02-04 15:45:06,601:INFO:              optuna: Not installed
2024-02-04 15:45:06,601:INFO:               skopt: Not installed
2024-02-04 15:45:06,601:INFO:              mlflow: Not installed
2024-02-04 15:45:06,601:INFO:              gradio: Not installed
2024-02-04 15:45:06,601:INFO:             fastapi: Not installed
2024-02-04 15:45:06,601:INFO:             uvicorn: Not installed
2024-02-04 15:45:06,601:INFO:              m2cgen: Not installed
2024-02-04 15:45:06,601:INFO:           evidently: Not installed
2024-02-04 15:45:06,601:INFO:               fugue: Not installed
2024-02-04 15:45:06,601:INFO:           streamlit: Not installed
2024-02-04 15:45:06,601:INFO:             prophet: 1.1.5
2024-02-04 15:45:06,601:INFO:None
2024-02-04 15:45:06,601:INFO:Set up data.
2024-02-04 15:45:06,604:INFO:Set up folding strategy.
2024-02-04 15:45:06,604:INFO:Set up train/test split.
2024-02-04 15:45:06,606:INFO:Set up index.
2024-02-04 15:45:06,606:INFO:Assigning column types.
2024-02-04 15:45:06,608:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 15:45:06,631:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:45:06,633:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:45:06,652:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:45:06,653:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:45:06,692:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 15:45:06,692:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:45:06,708:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:45:06,709:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:45:06,709:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 15:45:06,734:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:45:06,750:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:45:06,752:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:45:06,776:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 15:45:06,797:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:45:06,798:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:45:06,799:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 15:45:06,838:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:45:06,839:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:45:06,932:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:45:06,933:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:45:06,935:INFO:Preparing preprocessing pipeline...
2024-02-04 15:45:06,935:INFO:Set up label encoding.
2024-02-04 15:45:06,935:INFO:Set up simple imputation.
2024-02-04 15:45:06,948:INFO:Finished creating preprocessing pipeline.
2024-02-04 15:45:06,951:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 15:45:06,951:INFO:Creating final display dataframe.
2024-02-04 15:45:06,988:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  0fb1
2024-02-04 15:45:07,028:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:45:07,030:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:45:07,068:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 15:45:07,069:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 15:45:07,069:INFO:setup() successfully completed in 0.54s...............
2024-02-04 15:45:07,069:INFO:Initializing compare_models()
2024-02-04 15:45:07,070:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-02-04 15:45:07,070:INFO:Checking exceptions
2024-02-04 15:45:07,071:INFO:Preparing display monitor
2024-02-04 15:45:07,073:INFO:Initializing Logistic Regression
2024-02-04 15:45:07,073:INFO:Total runtime is 0.0 minutes
2024-02-04 15:45:07,075:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:07,075:INFO:Initializing create_model()
2024-02-04 15:45:07,075:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:07,075:INFO:Checking exceptions
2024-02-04 15:45:07,075:INFO:Importing libraries
2024-02-04 15:45:07,075:INFO:Copying training dataset
2024-02-04 15:45:07,075:INFO:Defining folds
2024-02-04 15:45:07,075:INFO:Declaring metric variables
2024-02-04 15:45:07,076:INFO:Importing untrained model
2024-02-04 15:45:07,076:INFO:Logistic Regression Imported successfully
2024-02-04 15:45:07,076:INFO:Starting cross validation
2024-02-04 15:45:07,076:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:09,942:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:09,944:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:09,945:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,009:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,011:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,015:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,078:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,079:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,080:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,088:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,089:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,091:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,093:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,094:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,096:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:10,106:INFO:Calculating mean and std
2024-02-04 15:45:10,107:INFO:Creating metrics dataframe
2024-02-04 15:45:10,110:INFO:Uploading results into container
2024-02-04 15:45:10,111:INFO:Uploading model into container now
2024-02-04 15:45:10,112:INFO:_master_model_container: 1
2024-02-04 15:45:10,112:INFO:_display_container: 2
2024-02-04 15:45:10,112:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-04 15:45:10,112:INFO:create_model() successfully completed......................................
2024-02-04 15:45:10,179:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:10,179:INFO:Creating metrics dataframe
2024-02-04 15:45:10,182:INFO:Initializing K Neighbors Classifier
2024-02-04 15:45:10,182:INFO:Total runtime is 0.051812275250752764 minutes
2024-02-04 15:45:10,182:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:10,182:INFO:Initializing create_model()
2024-02-04 15:45:10,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:10,182:INFO:Checking exceptions
2024-02-04 15:45:10,182:INFO:Importing libraries
2024-02-04 15:45:10,182:INFO:Copying training dataset
2024-02-04 15:45:10,184:INFO:Defining folds
2024-02-04 15:45:10,184:INFO:Declaring metric variables
2024-02-04 15:45:10,184:INFO:Importing untrained model
2024-02-04 15:45:10,184:INFO:K Neighbors Classifier Imported successfully
2024-02-04 15:45:10,184:INFO:Starting cross validation
2024-02-04 15:45:10,184:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:12,082:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,084:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,084:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,183:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,185:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,187:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,235:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,236:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,237:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,238:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,238:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,239:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,245:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,246:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,248:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:12,253:INFO:Calculating mean and std
2024-02-04 15:45:12,254:INFO:Creating metrics dataframe
2024-02-04 15:45:12,257:INFO:Uploading results into container
2024-02-04 15:45:12,257:INFO:Uploading model into container now
2024-02-04 15:45:12,258:INFO:_master_model_container: 2
2024-02-04 15:45:12,258:INFO:_display_container: 2
2024-02-04 15:45:12,258:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-04 15:45:12,258:INFO:create_model() successfully completed......................................
2024-02-04 15:45:12,315:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:12,315:INFO:Creating metrics dataframe
2024-02-04 15:45:12,319:INFO:Initializing Naive Bayes
2024-02-04 15:45:12,319:INFO:Total runtime is 0.08742615779240925 minutes
2024-02-04 15:45:12,319:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:12,319:INFO:Initializing create_model()
2024-02-04 15:45:12,319:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:12,319:INFO:Checking exceptions
2024-02-04 15:45:12,319:INFO:Importing libraries
2024-02-04 15:45:12,319:INFO:Copying training dataset
2024-02-04 15:45:12,320:INFO:Defining folds
2024-02-04 15:45:12,321:INFO:Declaring metric variables
2024-02-04 15:45:12,321:INFO:Importing untrained model
2024-02-04 15:45:12,321:INFO:Naive Bayes Imported successfully
2024-02-04 15:45:12,321:INFO:Starting cross validation
2024-02-04 15:45:12,321:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:14,098:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,099:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,100:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,225:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,226:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,227:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,275:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,276:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,278:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,293:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,294:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,295:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,318:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,320:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,321:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,333:INFO:Calculating mean and std
2024-02-04 15:45:14,333:INFO:Creating metrics dataframe
2024-02-04 15:45:14,335:INFO:Uploading results into container
2024-02-04 15:45:14,335:INFO:Uploading model into container now
2024-02-04 15:45:14,335:INFO:_master_model_container: 3
2024-02-04 15:45:14,335:INFO:_display_container: 2
2024-02-04 15:45:14,336:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-04 15:45:14,336:INFO:create_model() successfully completed......................................
2024-02-04 15:45:14,390:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:14,390:INFO:Creating metrics dataframe
2024-02-04 15:45:14,392:INFO:Initializing Decision Tree Classifier
2024-02-04 15:45:14,392:INFO:Total runtime is 0.12197661002477009 minutes
2024-02-04 15:45:14,393:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:14,393:INFO:Initializing create_model()
2024-02-04 15:45:14,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:14,393:INFO:Checking exceptions
2024-02-04 15:45:14,393:INFO:Importing libraries
2024-02-04 15:45:14,393:INFO:Copying training dataset
2024-02-04 15:45:14,394:INFO:Defining folds
2024-02-04 15:45:14,394:INFO:Declaring metric variables
2024-02-04 15:45:14,394:INFO:Importing untrained model
2024-02-04 15:45:14,395:INFO:Decision Tree Classifier Imported successfully
2024-02-04 15:45:14,395:INFO:Starting cross validation
2024-02-04 15:45:14,395:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:14,422:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,422:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,423:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,423:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,423:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,423:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,424:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,424:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,425:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,425:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,425:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:14,426:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,723:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,724:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,726:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,728:INFO:Calculating mean and std
2024-02-04 15:45:15,728:INFO:Creating metrics dataframe
2024-02-04 15:45:15,731:INFO:Uploading results into container
2024-02-04 15:45:15,731:INFO:Uploading model into container now
2024-02-04 15:45:15,731:INFO:_master_model_container: 4
2024-02-04 15:45:15,731:INFO:_display_container: 2
2024-02-04 15:45:15,731:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2024-02-04 15:45:15,732:INFO:create_model() successfully completed......................................
2024-02-04 15:45:15,794:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:15,794:INFO:Creating metrics dataframe
2024-02-04 15:45:15,796:INFO:Initializing SVM - Linear Kernel
2024-02-04 15:45:15,796:INFO:Total runtime is 0.1453773260116577 minutes
2024-02-04 15:45:15,796:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:15,796:INFO:Initializing create_model()
2024-02-04 15:45:15,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:15,796:INFO:Checking exceptions
2024-02-04 15:45:15,796:INFO:Importing libraries
2024-02-04 15:45:15,796:INFO:Copying training dataset
2024-02-04 15:45:15,800:INFO:Defining folds
2024-02-04 15:45:15,800:INFO:Declaring metric variables
2024-02-04 15:45:15,800:INFO:Importing untrained model
2024-02-04 15:45:15,800:INFO:SVM - Linear Kernel Imported successfully
2024-02-04 15:45:15,800:INFO:Starting cross validation
2024-02-04 15:45:15,801:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:15,831:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 15:45:15,831:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 15:45:15,831:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 15:45:15,831:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,832:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,832:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,832:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,834:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,835:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,835:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,845:INFO:Calculating mean and std
2024-02-04 15:45:15,845:INFO:Creating metrics dataframe
2024-02-04 15:45:15,846:INFO:Uploading results into container
2024-02-04 15:45:15,846:INFO:Uploading model into container now
2024-02-04 15:45:15,846:INFO:_master_model_container: 5
2024-02-04 15:45:15,846:INFO:_display_container: 2
2024-02-04 15:45:15,848:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-04 15:45:15,848:INFO:create_model() successfully completed......................................
2024-02-04 15:45:15,903:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:15,903:INFO:Creating metrics dataframe
2024-02-04 15:45:15,906:INFO:Initializing Ridge Classifier
2024-02-04 15:45:15,906:INFO:Total runtime is 0.1472113291422526 minutes
2024-02-04 15:45:15,906:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:15,906:INFO:Initializing create_model()
2024-02-04 15:45:15,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:15,906:INFO:Checking exceptions
2024-02-04 15:45:15,906:INFO:Importing libraries
2024-02-04 15:45:15,906:INFO:Copying training dataset
2024-02-04 15:45:15,908:INFO:Defining folds
2024-02-04 15:45:15,908:INFO:Declaring metric variables
2024-02-04 15:45:15,908:INFO:Importing untrained model
2024-02-04 15:45:15,908:INFO:Ridge Classifier Imported successfully
2024-02-04 15:45:15,909:INFO:Starting cross validation
2024-02-04 15:45:15,909:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:15,933:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 15:45:15,934:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,934:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 15:45:15,935:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 15:45:15,935:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,935:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 15:45:15,935:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 15:45:15,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,937:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,937:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,937:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,938:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,938:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,938:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,939:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:15,943:INFO:Calculating mean and std
2024-02-04 15:45:15,943:INFO:Creating metrics dataframe
2024-02-04 15:45:15,945:INFO:Uploading results into container
2024-02-04 15:45:15,946:INFO:Uploading model into container now
2024-02-04 15:45:15,946:INFO:_master_model_container: 6
2024-02-04 15:45:15,946:INFO:_display_container: 2
2024-02-04 15:45:15,946:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-02-04 15:45:15,946:INFO:create_model() successfully completed......................................
2024-02-04 15:45:16,003:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:16,003:INFO:Creating metrics dataframe
2024-02-04 15:45:16,006:INFO:Initializing Random Forest Classifier
2024-02-04 15:45:16,006:INFO:Total runtime is 0.14886735280354818 minutes
2024-02-04 15:45:16,006:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:16,006:INFO:Initializing create_model()
2024-02-04 15:45:16,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:16,006:INFO:Checking exceptions
2024-02-04 15:45:16,006:INFO:Importing libraries
2024-02-04 15:45:16,006:INFO:Copying training dataset
2024-02-04 15:45:16,007:INFO:Defining folds
2024-02-04 15:45:16,007:INFO:Declaring metric variables
2024-02-04 15:45:16,007:INFO:Importing untrained model
2024-02-04 15:45:16,007:INFO:Random Forest Classifier Imported successfully
2024-02-04 15:45:16,007:INFO:Starting cross validation
2024-02-04 15:45:16,009:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:16,157:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,159:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,161:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,167:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,169:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,169:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,170:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,170:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,171:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,171:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,171:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,172:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,172:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,173:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,179:INFO:Calculating mean and std
2024-02-04 15:45:16,180:INFO:Creating metrics dataframe
2024-02-04 15:45:16,182:INFO:Uploading results into container
2024-02-04 15:45:16,183:INFO:Uploading model into container now
2024-02-04 15:45:16,183:INFO:_master_model_container: 7
2024-02-04 15:45:16,183:INFO:_display_container: 2
2024-02-04 15:45:16,184:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-02-04 15:45:16,184:INFO:create_model() successfully completed......................................
2024-02-04 15:45:16,243:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:16,243:INFO:Creating metrics dataframe
2024-02-04 15:45:16,247:INFO:Initializing Quadratic Discriminant Analysis
2024-02-04 15:45:16,247:INFO:Total runtime is 0.15289669036865236 minutes
2024-02-04 15:45:16,247:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:16,247:INFO:Initializing create_model()
2024-02-04 15:45:16,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:16,247:INFO:Checking exceptions
2024-02-04 15:45:16,247:INFO:Importing libraries
2024-02-04 15:45:16,247:INFO:Copying training dataset
2024-02-04 15:45:16,250:INFO:Defining folds
2024-02-04 15:45:16,250:INFO:Declaring metric variables
2024-02-04 15:45:16,250:INFO:Importing untrained model
2024-02-04 15:45:16,250:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-04 15:45:16,250:INFO:Starting cross validation
2024-02-04 15:45:16,251:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:16,273:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,273:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,273:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,273:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,274:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,274:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,274:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,275:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,275:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,275:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,276:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,277:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,277:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,278:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,284:INFO:Calculating mean and std
2024-02-04 15:45:16,285:INFO:Creating metrics dataframe
2024-02-04 15:45:16,286:INFO:Uploading results into container
2024-02-04 15:45:16,286:INFO:Uploading model into container now
2024-02-04 15:45:16,287:INFO:_master_model_container: 8
2024-02-04 15:45:16,288:INFO:_display_container: 2
2024-02-04 15:45:16,288:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-04 15:45:16,288:INFO:create_model() successfully completed......................................
2024-02-04 15:45:16,348:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:16,348:INFO:Creating metrics dataframe
2024-02-04 15:45:16,351:INFO:Initializing Ada Boost Classifier
2024-02-04 15:45:16,351:INFO:Total runtime is 0.15461811621983848 minutes
2024-02-04 15:45:16,351:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:16,351:INFO:Initializing create_model()
2024-02-04 15:45:16,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:16,351:INFO:Checking exceptions
2024-02-04 15:45:16,351:INFO:Importing libraries
2024-02-04 15:45:16,351:INFO:Copying training dataset
2024-02-04 15:45:16,353:INFO:Defining folds
2024-02-04 15:45:16,353:INFO:Declaring metric variables
2024-02-04 15:45:16,353:INFO:Importing untrained model
2024-02-04 15:45:16,353:INFO:Ada Boost Classifier Imported successfully
2024-02-04 15:45:16,353:INFO:Starting cross validation
2024-02-04 15:45:16,354:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:16,402:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,403:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,404:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,408:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,408:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,409:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,409:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,410:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,410:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,410:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,411:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,412:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,422:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,423:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,424:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,429:INFO:Calculating mean and std
2024-02-04 15:45:16,429:INFO:Creating metrics dataframe
2024-02-04 15:45:16,431:INFO:Uploading results into container
2024-02-04 15:45:16,432:INFO:Uploading model into container now
2024-02-04 15:45:16,432:INFO:_master_model_container: 9
2024-02-04 15:45:16,432:INFO:_display_container: 2
2024-02-04 15:45:16,432:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2024-02-04 15:45:16,432:INFO:create_model() successfully completed......................................
2024-02-04 15:45:16,492:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:16,493:INFO:Creating metrics dataframe
2024-02-04 15:45:16,495:INFO:Initializing Gradient Boosting Classifier
2024-02-04 15:45:16,495:INFO:Total runtime is 0.15702888568242393 minutes
2024-02-04 15:45:16,495:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:16,496:INFO:Initializing create_model()
2024-02-04 15:45:16,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:16,496:INFO:Checking exceptions
2024-02-04 15:45:16,496:INFO:Importing libraries
2024-02-04 15:45:16,496:INFO:Copying training dataset
2024-02-04 15:45:16,498:INFO:Defining folds
2024-02-04 15:45:16,498:INFO:Declaring metric variables
2024-02-04 15:45:16,498:INFO:Importing untrained model
2024-02-04 15:45:16,498:INFO:Gradient Boosting Classifier Imported successfully
2024-02-04 15:45:16,498:INFO:Starting cross validation
2024-02-04 15:45:16,498:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:16,544:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,544:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,546:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,546:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,547:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,547:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,548:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,548:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,549:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,550:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,551:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,570:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,571:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,572:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,574:INFO:Calculating mean and std
2024-02-04 15:45:16,574:INFO:Creating metrics dataframe
2024-02-04 15:45:16,576:INFO:Uploading results into container
2024-02-04 15:45:16,576:INFO:Uploading model into container now
2024-02-04 15:45:16,576:INFO:_master_model_container: 10
2024-02-04 15:45:16,576:INFO:_display_container: 2
2024-02-04 15:45:16,576:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-04 15:45:16,576:INFO:create_model() successfully completed......................................
2024-02-04 15:45:16,639:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:16,639:INFO:Creating metrics dataframe
2024-02-04 15:45:16,642:INFO:Initializing Linear Discriminant Analysis
2024-02-04 15:45:16,642:INFO:Total runtime is 0.15946919918060304 minutes
2024-02-04 15:45:16,642:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:16,642:INFO:Initializing create_model()
2024-02-04 15:45:16,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:16,642:INFO:Checking exceptions
2024-02-04 15:45:16,642:INFO:Importing libraries
2024-02-04 15:45:16,642:INFO:Copying training dataset
2024-02-04 15:45:16,644:INFO:Defining folds
2024-02-04 15:45:16,644:INFO:Declaring metric variables
2024-02-04 15:45:16,644:INFO:Importing untrained model
2024-02-04 15:45:16,644:INFO:Linear Discriminant Analysis Imported successfully
2024-02-04 15:45:16,644:INFO:Starting cross validation
2024-02-04 15:45:16,644:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:16,666:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,668:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,668:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,669:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,669:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,669:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,669:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,670:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,670:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,670:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,670:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,671:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,671:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,671:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,672:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,678:INFO:Calculating mean and std
2024-02-04 15:45:16,678:INFO:Creating metrics dataframe
2024-02-04 15:45:16,680:INFO:Uploading results into container
2024-02-04 15:45:16,680:INFO:Uploading model into container now
2024-02-04 15:45:16,681:INFO:_master_model_container: 11
2024-02-04 15:45:16,681:INFO:_display_container: 2
2024-02-04 15:45:16,681:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-04 15:45:16,681:INFO:create_model() successfully completed......................................
2024-02-04 15:45:16,734:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:16,734:INFO:Creating metrics dataframe
2024-02-04 15:45:16,737:INFO:Initializing Extra Trees Classifier
2024-02-04 15:45:16,737:INFO:Total runtime is 0.16106489499409996 minutes
2024-02-04 15:45:16,737:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:16,737:INFO:Initializing create_model()
2024-02-04 15:45:16,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:16,737:INFO:Checking exceptions
2024-02-04 15:45:16,737:INFO:Importing libraries
2024-02-04 15:45:16,737:INFO:Copying training dataset
2024-02-04 15:45:16,739:INFO:Defining folds
2024-02-04 15:45:16,739:INFO:Declaring metric variables
2024-02-04 15:45:16,739:INFO:Importing untrained model
2024-02-04 15:45:16,739:INFO:Extra Trees Classifier Imported successfully
2024-02-04 15:45:16,739:INFO:Starting cross validation
2024-02-04 15:45:16,740:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:16,871:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,873:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,873:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,873:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,874:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,874:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,874:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,875:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,875:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,876:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,876:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,878:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,878:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,879:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:16,888:INFO:Calculating mean and std
2024-02-04 15:45:16,888:INFO:Creating metrics dataframe
2024-02-04 15:45:16,890:INFO:Uploading results into container
2024-02-04 15:45:16,890:INFO:Uploading model into container now
2024-02-04 15:45:16,891:INFO:_master_model_container: 12
2024-02-04 15:45:16,891:INFO:_display_container: 2
2024-02-04 15:45:16,891:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2024-02-04 15:45:16,891:INFO:create_model() successfully completed......................................
2024-02-04 15:45:16,950:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:16,951:INFO:Creating metrics dataframe
2024-02-04 15:45:16,953:INFO:Initializing Extreme Gradient Boosting
2024-02-04 15:45:16,953:INFO:Total runtime is 0.164660382270813 minutes
2024-02-04 15:45:16,953:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:16,954:INFO:Initializing create_model()
2024-02-04 15:45:16,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:16,954:INFO:Checking exceptions
2024-02-04 15:45:16,954:INFO:Importing libraries
2024-02-04 15:45:16,954:INFO:Copying training dataset
2024-02-04 15:45:16,955:INFO:Defining folds
2024-02-04 15:45:16,955:INFO:Declaring metric variables
2024-02-04 15:45:16,955:INFO:Importing untrained model
2024-02-04 15:45:16,956:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 15:45:16,956:INFO:Starting cross validation
2024-02-04 15:45:16,956:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:17,023:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,024:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,025:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,026:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,027:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,029:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,030:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,030:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,031:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,034:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,035:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,036:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,036:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,037:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,039:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,044:INFO:Calculating mean and std
2024-02-04 15:45:17,044:INFO:Creating metrics dataframe
2024-02-04 15:45:17,046:INFO:Uploading results into container
2024-02-04 15:45:17,046:INFO:Uploading model into container now
2024-02-04 15:45:17,046:INFO:_master_model_container: 13
2024-02-04 15:45:17,046:INFO:_display_container: 2
2024-02-04 15:45:17,046:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 15:45:17,046:INFO:create_model() successfully completed......................................
2024-02-04 15:45:17,109:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:17,109:INFO:Creating metrics dataframe
2024-02-04 15:45:17,111:INFO:Initializing Light Gradient Boosting Machine
2024-02-04 15:45:17,111:INFO:Total runtime is 0.16728429794311525 minutes
2024-02-04 15:45:17,111:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:17,112:INFO:Initializing create_model()
2024-02-04 15:45:17,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:17,112:INFO:Checking exceptions
2024-02-04 15:45:17,112:INFO:Importing libraries
2024-02-04 15:45:17,112:INFO:Copying training dataset
2024-02-04 15:45:17,113:INFO:Defining folds
2024-02-04 15:45:17,113:INFO:Declaring metric variables
2024-02-04 15:45:17,113:INFO:Importing untrained model
2024-02-04 15:45:17,114:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-04 15:45:17,114:INFO:Starting cross validation
2024-02-04 15:45:17,114:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:17,242:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,243:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,244:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,244:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,245:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,245:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,245:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,246:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,246:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,249:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,250:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,250:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,251:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,252:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:17,263:INFO:Calculating mean and std
2024-02-04 15:45:17,263:INFO:Creating metrics dataframe
2024-02-04 15:45:17,266:INFO:Uploading results into container
2024-02-04 15:45:17,266:INFO:Uploading model into container now
2024-02-04 15:45:17,266:INFO:_master_model_container: 14
2024-02-04 15:45:17,266:INFO:_display_container: 2
2024-02-04 15:45:17,267:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-04 15:45:17,267:INFO:create_model() successfully completed......................................
2024-02-04 15:45:17,331:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:17,331:INFO:Creating metrics dataframe
2024-02-04 15:45:17,334:INFO:Initializing CatBoost Classifier
2024-02-04 15:45:17,334:INFO:Total runtime is 0.17100199460983279 minutes
2024-02-04 15:45:17,334:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:17,334:INFO:Initializing create_model()
2024-02-04 15:45:17,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:17,334:INFO:Checking exceptions
2024-02-04 15:45:17,334:INFO:Importing libraries
2024-02-04 15:45:17,334:INFO:Copying training dataset
2024-02-04 15:45:17,336:INFO:Defining folds
2024-02-04 15:45:17,336:INFO:Declaring metric variables
2024-02-04 15:45:17,336:INFO:Importing untrained model
2024-02-04 15:45:17,336:INFO:CatBoost Classifier Imported successfully
2024-02-04 15:45:17,337:INFO:Starting cross validation
2024-02-04 15:45:17,337:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:18,851:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,851:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,852:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,852:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,852:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,852:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,852:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,854:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,854:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,854:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,854:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,856:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,862:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,864:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,865:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,874:INFO:Calculating mean and std
2024-02-04 15:45:18,875:INFO:Creating metrics dataframe
2024-02-04 15:45:18,876:INFO:Uploading results into container
2024-02-04 15:45:18,876:INFO:Uploading model into container now
2024-02-04 15:45:18,876:INFO:_master_model_container: 15
2024-02-04 15:45:18,876:INFO:_display_container: 2
2024-02-04 15:45:18,876:INFO:<catboost.core.CatBoostClassifier object at 0x0000018D759400D0>
2024-02-04 15:45:18,877:INFO:create_model() successfully completed......................................
2024-02-04 15:45:18,931:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:18,931:INFO:Creating metrics dataframe
2024-02-04 15:45:18,934:INFO:Initializing Dummy Classifier
2024-02-04 15:45:18,934:INFO:Total runtime is 0.1976781169573466 minutes
2024-02-04 15:45:18,934:INFO:SubProcess create_model() called ==================================
2024-02-04 15:45:18,934:INFO:Initializing create_model()
2024-02-04 15:45:18,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018D75926250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:18,934:INFO:Checking exceptions
2024-02-04 15:45:18,934:INFO:Importing libraries
2024-02-04 15:45:18,934:INFO:Copying training dataset
2024-02-04 15:45:18,936:INFO:Defining folds
2024-02-04 15:45:18,936:INFO:Declaring metric variables
2024-02-04 15:45:18,936:INFO:Importing untrained model
2024-02-04 15:45:18,936:INFO:Dummy Classifier Imported successfully
2024-02-04 15:45:18,936:INFO:Starting cross validation
2024-02-04 15:45:18,937:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 15:45:18,948:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,950:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,950:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,950:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,950:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 15:45:18,951:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,951:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,951:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,952:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 15:45:18,952:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 15:45:18,952:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,953:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,954:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,954:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,955:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 15:45:18,955:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,955:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,956:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 15:45:18,956:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 15:45:18,960:INFO:Calculating mean and std
2024-02-04 15:45:18,961:INFO:Creating metrics dataframe
2024-02-04 15:45:18,962:INFO:Uploading results into container
2024-02-04 15:45:18,962:INFO:Uploading model into container now
2024-02-04 15:45:18,963:INFO:_master_model_container: 16
2024-02-04 15:45:18,963:INFO:_display_container: 2
2024-02-04 15:45:18,963:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-02-04 15:45:18,963:INFO:create_model() successfully completed......................................
2024-02-04 15:45:19,019:INFO:SubProcess create_model() end ==================================
2024-02-04 15:45:19,019:INFO:Creating metrics dataframe
2024-02-04 15:45:19,022:INFO:Initializing create_model()
2024-02-04 15:45:19,022:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 15:45:19,022:INFO:Checking exceptions
2024-02-04 15:45:19,023:INFO:Importing libraries
2024-02-04 15:45:19,023:INFO:Copying training dataset
2024-02-04 15:45:19,024:INFO:Defining folds
2024-02-04 15:45:19,024:INFO:Declaring metric variables
2024-02-04 15:45:19,024:INFO:Importing untrained model
2024-02-04 15:45:19,024:INFO:Declaring custom model
2024-02-04 15:45:19,025:INFO:Random Forest Classifier Imported successfully
2024-02-04 15:45:19,025:INFO:Cross validation set to False
2024-02-04 15:45:19,025:INFO:Fitting Model
2024-02-04 15:45:19,124:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-02-04 15:45:19,125:INFO:create_model() successfully completed......................................
2024-02-04 15:45:19,194:INFO:_master_model_container: 16
2024-02-04 15:45:19,194:INFO:_display_container: 2
2024-02-04 15:45:19,194:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-02-04 15:45:19,194:INFO:compare_models() successfully completed......................................
2024-02-04 15:45:19,195:INFO:Initializing predict_model()
2024-02-04 15:45:19,195:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018D759FDD00>)
2024-02-04 15:45:19,195:INFO:Checking exceptions
2024-02-04 15:45:19,195:INFO:Preloading libraries
2024-02-04 15:45:19,195:INFO:Set up data.
2024-02-04 15:45:19,197:INFO:Set up index.
2024-02-04 15:45:19,297:INFO:Initializing plot_model()
2024-02-04 15:45:19,297:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:45:19,297:INFO:Checking exceptions
2024-02-04 15:45:19,314:INFO:Preloading libraries
2024-02-04 15:45:19,319:INFO:Copying training dataset
2024-02-04 15:45:19,319:INFO:Plot type: auc
2024-02-04 15:45:19,371:INFO:Fitting Model
2024-02-04 15:45:19,382:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-02-04 15:45:19,382:INFO:Scoring test/hold-out set
2024-02-04 15:45:19,426:INFO:Saving 'AUC.png'
2024-02-04 15:45:19,533:INFO:Visual Rendered Successfully
2024-02-04 15:45:19,600:INFO:plot_model() successfully completed......................................
2024-02-04 15:45:19,600:INFO:Initializing plot_model()
2024-02-04 15:45:19,600:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:45:19,600:INFO:Checking exceptions
2024-02-04 15:45:19,618:INFO:Preloading libraries
2024-02-04 15:45:19,623:INFO:Copying training dataset
2024-02-04 15:45:19,623:INFO:Plot type: confusion_matrix
2024-02-04 15:45:19,671:INFO:Fitting Model
2024-02-04 15:45:19,671:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-02-04 15:45:19,671:INFO:Scoring test/hold-out set
2024-02-04 15:45:19,716:INFO:Saving 'Confusion Matrix.png'
2024-02-04 15:45:19,784:INFO:Visual Rendered Successfully
2024-02-04 15:45:19,846:INFO:plot_model() successfully completed......................................
2024-02-04 15:45:19,847:INFO:Initializing plot_model()
2024-02-04 15:45:19,847:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:45:19,847:INFO:Checking exceptions
2024-02-04 15:45:19,864:INFO:Preloading libraries
2024-02-04 15:45:19,869:INFO:Copying training dataset
2024-02-04 15:45:19,869:INFO:Plot type: feature
2024-02-04 15:45:19,870:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 15:45:19,907:INFO:Saving 'Feature Importance.png'
2024-02-04 15:45:19,978:INFO:Visual Rendered Successfully
2024-02-04 15:45:20,043:INFO:plot_model() successfully completed......................................
2024-02-04 15:45:20,044:INFO:Initializing plot_model()
2024-02-04 15:45:20,044:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=parameter, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:45:20,044:INFO:Checking exceptions
2024-02-04 15:45:20,063:INFO:Preloading libraries
2024-02-04 15:45:20,068:INFO:Copying training dataset
2024-02-04 15:45:20,068:INFO:Plot type: parameter
2024-02-04 15:45:20,070:INFO:                         Parameters
2024-02-04 15:45:20,070:INFO:bootstrap                      True
2024-02-04 15:45:20,070:INFO:ccp_alpha                       0.0
2024-02-04 15:45:20,070:INFO:class_weight                   None
2024-02-04 15:45:20,070:INFO:criterion                      gini
2024-02-04 15:45:20,070:INFO:max_depth                      None
2024-02-04 15:45:20,070:INFO:max_features                   sqrt
2024-02-04 15:45:20,070:INFO:max_leaf_nodes                 None
2024-02-04 15:45:20,070:INFO:max_samples                    None
2024-02-04 15:45:20,070:INFO:min_impurity_decrease           0.0
2024-02-04 15:45:20,070:INFO:min_samples_leaf                  1
2024-02-04 15:45:20,070:INFO:min_samples_split                 2
2024-02-04 15:45:20,070:INFO:min_weight_fraction_leaf        0.0
2024-02-04 15:45:20,070:INFO:n_estimators                    100
2024-02-04 15:45:20,070:INFO:n_jobs                           -1
2024-02-04 15:45:20,070:INFO:oob_score                     False
2024-02-04 15:45:20,070:INFO:random_state                    123
2024-02-04 15:45:20,070:INFO:verbose                           0
2024-02-04 15:45:20,070:INFO:warm_start                    False
2024-02-04 15:45:20,070:INFO:Visual Rendered Successfully
2024-02-04 15:45:20,135:INFO:plot_model() successfully completed......................................
2024-02-04 15:45:20,135:INFO:Initializing plot_model()
2024-02-04 15:45:20,135:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=ks, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 15:45:20,135:INFO:Checking exceptions
2024-02-04 15:45:20,153:INFO:Preloading libraries
2024-02-04 15:45:20,158:INFO:Copying training dataset
2024-02-04 15:45:20,158:INFO:Plot type: ks
2024-02-04 15:45:20,158:INFO:Generating predictions / predict_proba on X_test
2024-02-04 15:45:20,202:INFO:Saving 'KS Statistic Plot.png'
2024-02-04 15:45:20,285:INFO:Visual Rendered Successfully
2024-02-04 15:45:20,342:INFO:plot_model() successfully completed......................................
2024-02-04 15:45:20,342:INFO:Initializing interpret_model()
2024-02-04 15:45:20,342:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018D73C7E6D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 15:45:20,342:INFO:Checking exceptions
2024-02-04 15:45:20,342:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 15:45:20,578:INFO:plot type: summary
2024-02-04 15:45:20,578:INFO:Creating TreeExplainer
2024-02-04 15:45:20,580:INFO:Compiling shap values
2024-02-04 15:45:20,645:INFO:Saving 'SHAP summary.png'
2024-02-04 15:45:20,754:INFO:Visual Rendered Successfully
2024-02-04 15:45:20,754:INFO:interpret_model() successfully completed......................................
2024-02-04 20:48:11,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 20:48:11,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 20:48:11,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 20:48:11,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 20:48:11,875:INFO:PyCaret RegressionExperiment
2024-02-04 20:48:11,875:INFO:Logging name: reg-default-name
2024-02-04 20:48:11,875:INFO:ML Usecase: MLUsecase.REGRESSION
2024-02-04 20:48:11,875:INFO:version 3.2.0
2024-02-04 20:48:11,875:INFO:Initializing setup()
2024-02-04 20:48:11,875:INFO:self.USI: 7b06
2024-02-04 20:48:11,875:INFO:self._variable_keys: {'seed', 'exp_name_log', 'X', 'pipeline', 'html_param', 'data', 'n_jobs_param', 'log_plots_param', 'fold_groups_param', 'gpu_n_jobs_param', 'y', 'fold_shuffle_param', 'X_train', 'idx', 'gpu_param', '_ml_usecase', 'X_test', 'memory', 'exp_id', '_available_plots', 'logging_param', 'y_train', 'fold_generator', 'y_test', 'USI', 'target_param', 'transform_target_param'}
2024-02-04 20:48:11,875:INFO:Checking environment
2024-02-04 20:48:11,875:INFO:python_version: 3.11.7
2024-02-04 20:48:11,875:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 20:48:11,875:INFO:machine: AMD64
2024-02-04 20:48:11,884:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 20:48:11,888:INFO:Memory: svmem(total=16892026880, available=4685938688, percent=72.3, used=12206088192, free=4685938688)
2024-02-04 20:48:11,889:INFO:Physical Core: 12
2024-02-04 20:48:11,889:INFO:Logical Core: 16
2024-02-04 20:48:11,889:INFO:Checking libraries
2024-02-04 20:48:11,889:INFO:System:
2024-02-04 20:48:11,889:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 20:48:11,889:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 20:48:11,889:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 20:48:11,889:INFO:PyCaret required dependencies:
2024-02-04 20:48:11,936:INFO:                 pip: 23.3.2
2024-02-04 20:48:11,937:INFO:          setuptools: 65.5.0
2024-02-04 20:48:11,937:INFO:             pycaret: 3.2.0
2024-02-04 20:48:11,937:INFO:             IPython: 8.20.0
2024-02-04 20:48:11,937:INFO:          ipywidgets: 8.1.1
2024-02-04 20:48:11,937:INFO:                tqdm: 4.66.1
2024-02-04 20:48:11,937:INFO:               numpy: 1.25.2
2024-02-04 20:48:11,937:INFO:              pandas: 1.5.3
2024-02-04 20:48:11,937:INFO:              jinja2: 3.1.3
2024-02-04 20:48:11,937:INFO:               scipy: 1.10.1
2024-02-04 20:48:11,937:INFO:              joblib: 1.3.2
2024-02-04 20:48:11,937:INFO:             sklearn: 1.2.2
2024-02-04 20:48:11,937:INFO:                pyod: 1.1.2
2024-02-04 20:48:11,937:INFO:            imblearn: 0.12.0
2024-02-04 20:48:11,937:INFO:   category_encoders: 2.6.3
2024-02-04 20:48:11,937:INFO:            lightgbm: 4.3.0
2024-02-04 20:48:11,937:INFO:               numba: 0.58.1
2024-02-04 20:48:11,937:INFO:            requests: 2.31.0
2024-02-04 20:48:11,937:INFO:          matplotlib: 3.6.0
2024-02-04 20:48:11,937:INFO:          scikitplot: 0.3.7
2024-02-04 20:48:11,937:INFO:         yellowbrick: 1.5
2024-02-04 20:48:11,937:INFO:              plotly: 5.18.0
2024-02-04 20:48:11,937:INFO:    plotly-resampler: Not installed
2024-02-04 20:48:11,937:INFO:             kaleido: 0.2.1
2024-02-04 20:48:11,937:INFO:           schemdraw: 0.15
2024-02-04 20:48:11,937:INFO:         statsmodels: 0.14.1
2024-02-04 20:48:11,937:INFO:              sktime: 0.21.1
2024-02-04 20:48:11,937:INFO:               tbats: 1.1.3
2024-02-04 20:48:11,937:INFO:            pmdarima: 2.0.4
2024-02-04 20:48:11,937:INFO:              psutil: 5.9.8
2024-02-04 20:48:11,937:INFO:          markupsafe: 2.1.4
2024-02-04 20:48:11,937:INFO:             pickle5: Not installed
2024-02-04 20:48:11,937:INFO:         cloudpickle: 3.0.0
2024-02-04 20:48:11,937:INFO:         deprecation: 2.1.0
2024-02-04 20:48:11,937:INFO:              xxhash: 3.4.1
2024-02-04 20:48:11,937:INFO:           wurlitzer: Not installed
2024-02-04 20:48:11,937:INFO:PyCaret optional dependencies:
2024-02-04 20:48:11,975:INFO:                shap: 0.44.1
2024-02-04 20:48:11,975:INFO:           interpret: Not installed
2024-02-04 20:48:11,975:INFO:                umap: Not installed
2024-02-04 20:48:11,975:INFO:     ydata_profiling: Not installed
2024-02-04 20:48:11,975:INFO:  explainerdashboard: Not installed
2024-02-04 20:48:11,975:INFO:             autoviz: Not installed
2024-02-04 20:48:11,975:INFO:           fairlearn: Not installed
2024-02-04 20:48:11,975:INFO:          deepchecks: Not installed
2024-02-04 20:48:11,975:INFO:             xgboost: 2.0.3
2024-02-04 20:48:11,975:INFO:            catboost: 1.2.2
2024-02-04 20:48:11,975:INFO:              kmodes: Not installed
2024-02-04 20:48:11,975:INFO:             mlxtend: Not installed
2024-02-04 20:48:11,975:INFO:       statsforecast: Not installed
2024-02-04 20:48:11,975:INFO:        tune_sklearn: Not installed
2024-02-04 20:48:11,975:INFO:                 ray: Not installed
2024-02-04 20:48:11,975:INFO:            hyperopt: Not installed
2024-02-04 20:48:11,975:INFO:              optuna: Not installed
2024-02-04 20:48:11,975:INFO:               skopt: Not installed
2024-02-04 20:48:11,975:INFO:              mlflow: Not installed
2024-02-04 20:48:11,975:INFO:              gradio: Not installed
2024-02-04 20:48:11,975:INFO:             fastapi: Not installed
2024-02-04 20:48:11,975:INFO:             uvicorn: Not installed
2024-02-04 20:48:11,975:INFO:              m2cgen: Not installed
2024-02-04 20:48:11,975:INFO:           evidently: Not installed
2024-02-04 20:48:11,975:INFO:               fugue: Not installed
2024-02-04 20:48:11,975:INFO:           streamlit: Not installed
2024-02-04 20:48:11,975:INFO:             prophet: 1.1.5
2024-02-04 20:48:11,975:INFO:None
2024-02-04 20:48:11,975:INFO:Set up data.
2024-02-04 20:48:11,980:INFO:Set up folding strategy.
2024-02-04 20:48:11,980:INFO:Set up train/test split.
2024-02-04 20:48:11,983:INFO:Set up index.
2024-02-04 20:48:11,983:INFO:Assigning column types.
2024-02-04 20:48:11,984:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 20:48:11,984:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-02-04 20:48:11,987:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-04 20:48:11,990:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,021:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,047:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,048:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,050:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,076:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,078:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,081:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,113:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,138:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,138:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,139:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,140:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-02-04 20:48:12,142:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,146:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,179:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,204:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,204:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,206:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,208:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,211:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,241:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,265:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,265:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,267:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,267:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-02-04 20:48:12,272:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,301:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,325:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,325:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,327:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,332:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,368:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,395:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,395:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,397:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,398:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-02-04 20:48:12,432:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,455:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,456:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,457:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,496:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,520:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,520:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,521:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,522:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 20:48:12,555:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,580:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,581:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,692:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-04 20:48:12,718:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,720:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,720:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-02-04 20:48:12,778:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,779:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,838:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,840:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:12,852:INFO:Preparing preprocessing pipeline...
2024-02-04 20:48:12,852:INFO:Set up simple imputation.
2024-02-04 20:48:12,862:INFO:Finished creating preprocessing pipeline.
2024-02-04 20:48:12,865:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['numberOfAce', 'speed_serves',
                                             'unforced_error_rates',
                                             'break_piont_won',
                                             'break_piont_opps', 'mean_dis_run',
                                             'all_dis_run', 'match_plays',
                                             'point_nos', 'game_vics', 'F_wons',
                                             'T_wons'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-02-04 20:48:12,865:INFO:Creating final display dataframe.
2024-02-04 20:48:12,901:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              Rank
2                   Target type        Regression
3           Original data shape          (32, 13)
4        Transformed data shape          (32, 13)
5   Transformed train set shape          (22, 13)
6    Transformed test set shape          (10, 13)
7              Numeric features                12
8      Rows with missing values              6.2%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                 5
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  reg-default-name
19                          USI              7b06
2024-02-04 20:48:12,967:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:12,969:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:13,031:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 20:48:13,033:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 20:48:13,034:INFO:setup() successfully completed in 1.16s...............
2024-02-04 20:48:13,034:INFO:Initializing compare_models()
2024-02-04 20:48:13,034:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-02-04 20:48:13,034:INFO:Checking exceptions
2024-02-04 20:48:13,035:INFO:Preparing display monitor
2024-02-04 20:48:13,037:INFO:Initializing Linear Regression
2024-02-04 20:48:13,037:INFO:Total runtime is 0.0 minutes
2024-02-04 20:48:13,037:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:13,038:INFO:Initializing create_model()
2024-02-04 20:48:13,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:13,038:INFO:Checking exceptions
2024-02-04 20:48:13,038:INFO:Importing libraries
2024-02-04 20:48:13,038:INFO:Copying training dataset
2024-02-04 20:48:13,040:INFO:Defining folds
2024-02-04 20:48:13,040:INFO:Declaring metric variables
2024-02-04 20:48:13,040:INFO:Importing untrained model
2024-02-04 20:48:13,040:INFO:Linear Regression Imported successfully
2024-02-04 20:48:13,040:INFO:Starting cross validation
2024-02-04 20:48:13,047:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:16,065:INFO:Calculating mean and std
2024-02-04 20:48:16,068:INFO:Creating metrics dataframe
2024-02-04 20:48:16,070:INFO:Uploading results into container
2024-02-04 20:48:16,070:INFO:Uploading model into container now
2024-02-04 20:48:16,071:INFO:_master_model_container: 1
2024-02-04 20:48:16,071:INFO:_display_container: 2
2024-02-04 20:48:16,071:INFO:LinearRegression(n_jobs=-1)
2024-02-04 20:48:16,071:INFO:create_model() successfully completed......................................
2024-02-04 20:48:16,131:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:16,131:INFO:Creating metrics dataframe
2024-02-04 20:48:16,133:INFO:Initializing Lasso Regression
2024-02-04 20:48:16,133:INFO:Total runtime is 0.051590371131896975 minutes
2024-02-04 20:48:16,134:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:16,134:INFO:Initializing create_model()
2024-02-04 20:48:16,134:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=lasso, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:16,134:INFO:Checking exceptions
2024-02-04 20:48:16,134:INFO:Importing libraries
2024-02-04 20:48:16,134:INFO:Copying training dataset
2024-02-04 20:48:16,136:INFO:Defining folds
2024-02-04 20:48:16,136:INFO:Declaring metric variables
2024-02-04 20:48:16,136:INFO:Importing untrained model
2024-02-04 20:48:16,136:INFO:Lasso Regression Imported successfully
2024-02-04 20:48:16,136:INFO:Starting cross validation
2024-02-04 20:48:16,136:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:17,950:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.590e+00, tolerance: 4.258e+00
  model = cd_fast.enet_coordinate_descent(

2024-02-04 20:48:18,078:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.304e+02, tolerance: 4.059e+00
  model = cd_fast.enet_coordinate_descent(

2024-02-04 20:48:18,148:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.251e+01, tolerance: 4.301e+00
  model = cd_fast.enet_coordinate_descent(

2024-02-04 20:48:18,167:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.094e+01, tolerance: 4.242e+00
  model = cd_fast.enet_coordinate_descent(

2024-02-04 20:48:18,182:INFO:Calculating mean and std
2024-02-04 20:48:18,182:INFO:Creating metrics dataframe
2024-02-04 20:48:18,184:INFO:Uploading results into container
2024-02-04 20:48:18,185:INFO:Uploading model into container now
2024-02-04 20:48:18,185:INFO:_master_model_container: 2
2024-02-04 20:48:18,185:INFO:_display_container: 2
2024-02-04 20:48:18,185:INFO:Lasso(random_state=123)
2024-02-04 20:48:18,185:INFO:create_model() successfully completed......................................
2024-02-04 20:48:18,244:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:18,244:INFO:Creating metrics dataframe
2024-02-04 20:48:18,248:INFO:Initializing Ridge Regression
2024-02-04 20:48:18,248:INFO:Total runtime is 0.08683633804321289 minutes
2024-02-04 20:48:18,248:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:18,248:INFO:Initializing create_model()
2024-02-04 20:48:18,248:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:18,248:INFO:Checking exceptions
2024-02-04 20:48:18,248:INFO:Importing libraries
2024-02-04 20:48:18,248:INFO:Copying training dataset
2024-02-04 20:48:18,250:INFO:Defining folds
2024-02-04 20:48:18,250:INFO:Declaring metric variables
2024-02-04 20:48:18,250:INFO:Importing untrained model
2024-02-04 20:48:18,250:INFO:Ridge Regression Imported successfully
2024-02-04 20:48:18,250:INFO:Starting cross validation
2024-02-04 20:48:18,251:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:20,234:INFO:Calculating mean and std
2024-02-04 20:48:20,234:INFO:Creating metrics dataframe
2024-02-04 20:48:20,236:INFO:Uploading results into container
2024-02-04 20:48:20,236:INFO:Uploading model into container now
2024-02-04 20:48:20,237:INFO:_master_model_container: 3
2024-02-04 20:48:20,237:INFO:_display_container: 2
2024-02-04 20:48:20,237:INFO:Ridge(random_state=123)
2024-02-04 20:48:20,237:INFO:create_model() successfully completed......................................
2024-02-04 20:48:20,297:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:20,297:INFO:Creating metrics dataframe
2024-02-04 20:48:20,300:INFO:Initializing Elastic Net
2024-02-04 20:48:20,300:INFO:Total runtime is 0.12104297081629435 minutes
2024-02-04 20:48:20,300:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:20,300:INFO:Initializing create_model()
2024-02-04 20:48:20,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=en, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:20,300:INFO:Checking exceptions
2024-02-04 20:48:20,300:INFO:Importing libraries
2024-02-04 20:48:20,300:INFO:Copying training dataset
2024-02-04 20:48:20,301:INFO:Defining folds
2024-02-04 20:48:20,301:INFO:Declaring metric variables
2024-02-04 20:48:20,302:INFO:Importing untrained model
2024-02-04 20:48:20,302:INFO:Elastic Net Imported successfully
2024-02-04 20:48:20,302:INFO:Starting cross validation
2024-02-04 20:48:20,302:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:20,322:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.633e+00, tolerance: 2.249e+00
  model = cd_fast.enet_coordinate_descent(

2024-02-04 20:48:21,668:INFO:Calculating mean and std
2024-02-04 20:48:21,668:INFO:Creating metrics dataframe
2024-02-04 20:48:21,670:INFO:Uploading results into container
2024-02-04 20:48:21,671:INFO:Uploading model into container now
2024-02-04 20:48:21,671:INFO:_master_model_container: 4
2024-02-04 20:48:21,672:INFO:_display_container: 2
2024-02-04 20:48:21,672:INFO:ElasticNet(random_state=123)
2024-02-04 20:48:21,672:INFO:create_model() successfully completed......................................
2024-02-04 20:48:21,734:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:21,734:INFO:Creating metrics dataframe
2024-02-04 20:48:21,738:INFO:Initializing Least Angle Regression
2024-02-04 20:48:21,738:INFO:Total runtime is 0.14500245650609334 minutes
2024-02-04 20:48:21,738:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:21,738:INFO:Initializing create_model()
2024-02-04 20:48:21,738:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=lar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:21,738:INFO:Checking exceptions
2024-02-04 20:48:21,738:INFO:Importing libraries
2024-02-04 20:48:21,738:INFO:Copying training dataset
2024-02-04 20:48:21,740:INFO:Defining folds
2024-02-04 20:48:21,740:INFO:Declaring metric variables
2024-02-04 20:48:21,740:INFO:Importing untrained model
2024-02-04 20:48:21,740:INFO:Least Angle Regression Imported successfully
2024-02-04 20:48:21,740:INFO:Starting cross validation
2024-02-04 20:48:21,740:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:21,774:INFO:Calculating mean and std
2024-02-04 20:48:21,774:INFO:Creating metrics dataframe
2024-02-04 20:48:21,776:INFO:Uploading results into container
2024-02-04 20:48:21,777:INFO:Uploading model into container now
2024-02-04 20:48:21,777:INFO:_master_model_container: 5
2024-02-04 20:48:21,777:INFO:_display_container: 2
2024-02-04 20:48:21,777:INFO:Lars(random_state=123)
2024-02-04 20:48:21,777:INFO:create_model() successfully completed......................................
2024-02-04 20:48:21,839:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:21,839:INFO:Creating metrics dataframe
2024-02-04 20:48:21,842:INFO:Initializing Lasso Least Angle Regression
2024-02-04 20:48:21,842:INFO:Total runtime is 0.14675046602884928 minutes
2024-02-04 20:48:21,842:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:21,842:INFO:Initializing create_model()
2024-02-04 20:48:21,842:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=llar, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:21,842:INFO:Checking exceptions
2024-02-04 20:48:21,842:INFO:Importing libraries
2024-02-04 20:48:21,842:INFO:Copying training dataset
2024-02-04 20:48:21,844:INFO:Defining folds
2024-02-04 20:48:21,844:INFO:Declaring metric variables
2024-02-04 20:48:21,844:INFO:Importing untrained model
2024-02-04 20:48:21,844:INFO:Lasso Least Angle Regression Imported successfully
2024-02-04 20:48:21,844:INFO:Starting cross validation
2024-02-04 20:48:21,845:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:21,868:INFO:Calculating mean and std
2024-02-04 20:48:21,869:INFO:Creating metrics dataframe
2024-02-04 20:48:21,870:INFO:Uploading results into container
2024-02-04 20:48:21,871:INFO:Uploading model into container now
2024-02-04 20:48:21,871:INFO:_master_model_container: 6
2024-02-04 20:48:21,871:INFO:_display_container: 2
2024-02-04 20:48:21,871:INFO:LassoLars(random_state=123)
2024-02-04 20:48:21,871:INFO:create_model() successfully completed......................................
2024-02-04 20:48:21,934:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:21,934:INFO:Creating metrics dataframe
2024-02-04 20:48:21,937:INFO:Initializing Orthogonal Matching Pursuit
2024-02-04 20:48:21,937:INFO:Total runtime is 0.14833311637242635 minutes
2024-02-04 20:48:21,937:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:21,937:INFO:Initializing create_model()
2024-02-04 20:48:21,937:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=omp, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:21,937:INFO:Checking exceptions
2024-02-04 20:48:21,937:INFO:Importing libraries
2024-02-04 20:48:21,937:INFO:Copying training dataset
2024-02-04 20:48:21,940:INFO:Defining folds
2024-02-04 20:48:21,940:INFO:Declaring metric variables
2024-02-04 20:48:21,940:INFO:Importing untrained model
2024-02-04 20:48:21,940:INFO:Orthogonal Matching Pursuit Imported successfully
2024-02-04 20:48:21,940:INFO:Starting cross validation
2024-02-04 20:48:21,941:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:21,963:INFO:Calculating mean and std
2024-02-04 20:48:21,964:INFO:Creating metrics dataframe
2024-02-04 20:48:21,965:INFO:Uploading results into container
2024-02-04 20:48:21,966:INFO:Uploading model into container now
2024-02-04 20:48:21,966:INFO:_master_model_container: 7
2024-02-04 20:48:21,966:INFO:_display_container: 2
2024-02-04 20:48:21,966:INFO:OrthogonalMatchingPursuit()
2024-02-04 20:48:21,966:INFO:create_model() successfully completed......................................
2024-02-04 20:48:22,026:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:22,026:INFO:Creating metrics dataframe
2024-02-04 20:48:22,030:INFO:Initializing Bayesian Ridge
2024-02-04 20:48:22,030:INFO:Total runtime is 0.14987430969874063 minutes
2024-02-04 20:48:22,030:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:22,030:INFO:Initializing create_model()
2024-02-04 20:48:22,030:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=br, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:22,031:INFO:Checking exceptions
2024-02-04 20:48:22,031:INFO:Importing libraries
2024-02-04 20:48:22,031:INFO:Copying training dataset
2024-02-04 20:48:22,032:INFO:Defining folds
2024-02-04 20:48:22,032:INFO:Declaring metric variables
2024-02-04 20:48:22,032:INFO:Importing untrained model
2024-02-04 20:48:22,033:INFO:Bayesian Ridge Imported successfully
2024-02-04 20:48:22,033:INFO:Starting cross validation
2024-02-04 20:48:22,033:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:22,057:INFO:Calculating mean and std
2024-02-04 20:48:22,057:INFO:Creating metrics dataframe
2024-02-04 20:48:22,058:INFO:Uploading results into container
2024-02-04 20:48:22,059:INFO:Uploading model into container now
2024-02-04 20:48:22,059:INFO:_master_model_container: 8
2024-02-04 20:48:22,059:INFO:_display_container: 2
2024-02-04 20:48:22,059:INFO:BayesianRidge()
2024-02-04 20:48:22,059:INFO:create_model() successfully completed......................................
2024-02-04 20:48:22,119:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:22,119:INFO:Creating metrics dataframe
2024-02-04 20:48:22,122:INFO:Initializing Passive Aggressive Regressor
2024-02-04 20:48:22,122:INFO:Total runtime is 0.1514100432395935 minutes
2024-02-04 20:48:22,122:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:22,122:INFO:Initializing create_model()
2024-02-04 20:48:22,122:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=par, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:22,122:INFO:Checking exceptions
2024-02-04 20:48:22,122:INFO:Importing libraries
2024-02-04 20:48:22,122:INFO:Copying training dataset
2024-02-04 20:48:22,124:INFO:Defining folds
2024-02-04 20:48:22,124:INFO:Declaring metric variables
2024-02-04 20:48:22,124:INFO:Importing untrained model
2024-02-04 20:48:22,124:INFO:Passive Aggressive Regressor Imported successfully
2024-02-04 20:48:22,124:INFO:Starting cross validation
2024-02-04 20:48:22,124:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:22,148:INFO:Calculating mean and std
2024-02-04 20:48:22,148:INFO:Creating metrics dataframe
2024-02-04 20:48:22,150:INFO:Uploading results into container
2024-02-04 20:48:22,150:INFO:Uploading model into container now
2024-02-04 20:48:22,151:INFO:_master_model_container: 9
2024-02-04 20:48:22,151:INFO:_display_container: 2
2024-02-04 20:48:22,151:INFO:PassiveAggressiveRegressor(random_state=123)
2024-02-04 20:48:22,151:INFO:create_model() successfully completed......................................
2024-02-04 20:48:22,211:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:22,212:INFO:Creating metrics dataframe
2024-02-04 20:48:22,214:INFO:Initializing Huber Regressor
2024-02-04 20:48:22,214:INFO:Total runtime is 0.15294262568155925 minutes
2024-02-04 20:48:22,214:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:22,214:INFO:Initializing create_model()
2024-02-04 20:48:22,214:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=huber, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:22,214:INFO:Checking exceptions
2024-02-04 20:48:22,214:INFO:Importing libraries
2024-02-04 20:48:22,214:INFO:Copying training dataset
2024-02-04 20:48:22,216:INFO:Defining folds
2024-02-04 20:48:22,216:INFO:Declaring metric variables
2024-02-04 20:48:22,216:INFO:Importing untrained model
2024-02-04 20:48:22,217:INFO:Huber Regressor Imported successfully
2024-02-04 20:48:22,217:INFO:Starting cross validation
2024-02-04 20:48:22,217:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:22,241:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-04 20:48:22,241:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-04 20:48:22,242:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-04 20:48:22,242:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-04 20:48:22,245:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-04 20:48:22,250:INFO:Calculating mean and std
2024-02-04 20:48:22,251:INFO:Creating metrics dataframe
2024-02-04 20:48:22,252:INFO:Uploading results into container
2024-02-04 20:48:22,252:INFO:Uploading model into container now
2024-02-04 20:48:22,253:INFO:_master_model_container: 10
2024-02-04 20:48:22,253:INFO:_display_container: 2
2024-02-04 20:48:22,253:INFO:HuberRegressor()
2024-02-04 20:48:22,253:INFO:create_model() successfully completed......................................
2024-02-04 20:48:22,315:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:22,315:INFO:Creating metrics dataframe
2024-02-04 20:48:22,318:INFO:Initializing K Neighbors Regressor
2024-02-04 20:48:22,318:INFO:Total runtime is 0.1546710252761841 minutes
2024-02-04 20:48:22,318:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:22,319:INFO:Initializing create_model()
2024-02-04 20:48:22,319:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:22,319:INFO:Checking exceptions
2024-02-04 20:48:22,319:INFO:Importing libraries
2024-02-04 20:48:22,319:INFO:Copying training dataset
2024-02-04 20:48:22,320:INFO:Defining folds
2024-02-04 20:48:22,320:INFO:Declaring metric variables
2024-02-04 20:48:22,321:INFO:Importing untrained model
2024-02-04 20:48:22,321:INFO:K Neighbors Regressor Imported successfully
2024-02-04 20:48:22,321:INFO:Starting cross validation
2024-02-04 20:48:22,321:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:22,368:INFO:Calculating mean and std
2024-02-04 20:48:22,369:INFO:Creating metrics dataframe
2024-02-04 20:48:22,370:INFO:Uploading results into container
2024-02-04 20:48:22,371:INFO:Uploading model into container now
2024-02-04 20:48:22,371:INFO:_master_model_container: 11
2024-02-04 20:48:22,371:INFO:_display_container: 2
2024-02-04 20:48:22,371:INFO:KNeighborsRegressor(n_jobs=-1)
2024-02-04 20:48:22,371:INFO:create_model() successfully completed......................................
2024-02-04 20:48:22,429:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:22,429:INFO:Creating metrics dataframe
2024-02-04 20:48:22,432:INFO:Initializing Decision Tree Regressor
2024-02-04 20:48:22,432:INFO:Total runtime is 0.1565725604693095 minutes
2024-02-04 20:48:22,432:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:22,432:INFO:Initializing create_model()
2024-02-04 20:48:22,432:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:22,432:INFO:Checking exceptions
2024-02-04 20:48:22,432:INFO:Importing libraries
2024-02-04 20:48:22,432:INFO:Copying training dataset
2024-02-04 20:48:22,434:INFO:Defining folds
2024-02-04 20:48:22,434:INFO:Declaring metric variables
2024-02-04 20:48:22,434:INFO:Importing untrained model
2024-02-04 20:48:22,435:INFO:Decision Tree Regressor Imported successfully
2024-02-04 20:48:22,435:INFO:Starting cross validation
2024-02-04 20:48:22,435:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:22,458:INFO:Calculating mean and std
2024-02-04 20:48:22,458:INFO:Creating metrics dataframe
2024-02-04 20:48:22,460:INFO:Uploading results into container
2024-02-04 20:48:22,460:INFO:Uploading model into container now
2024-02-04 20:48:22,460:INFO:_master_model_container: 12
2024-02-04 20:48:22,460:INFO:_display_container: 2
2024-02-04 20:48:22,461:INFO:DecisionTreeRegressor(random_state=123)
2024-02-04 20:48:22,461:INFO:create_model() successfully completed......................................
2024-02-04 20:48:22,522:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:22,522:INFO:Creating metrics dataframe
2024-02-04 20:48:22,524:INFO:Initializing Random Forest Regressor
2024-02-04 20:48:22,524:INFO:Total runtime is 0.1581143657366435 minutes
2024-02-04 20:48:22,524:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:22,525:INFO:Initializing create_model()
2024-02-04 20:48:22,525:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:22,525:INFO:Checking exceptions
2024-02-04 20:48:22,525:INFO:Importing libraries
2024-02-04 20:48:22,525:INFO:Copying training dataset
2024-02-04 20:48:22,526:INFO:Defining folds
2024-02-04 20:48:22,526:INFO:Declaring metric variables
2024-02-04 20:48:22,526:INFO:Importing untrained model
2024-02-04 20:48:22,527:INFO:Random Forest Regressor Imported successfully
2024-02-04 20:48:22,527:INFO:Starting cross validation
2024-02-04 20:48:22,528:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:22,666:INFO:Calculating mean and std
2024-02-04 20:48:22,666:INFO:Creating metrics dataframe
2024-02-04 20:48:22,669:INFO:Uploading results into container
2024-02-04 20:48:22,669:INFO:Uploading model into container now
2024-02-04 20:48:22,669:INFO:_master_model_container: 13
2024-02-04 20:48:22,669:INFO:_display_container: 2
2024-02-04 20:48:22,669:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-02-04 20:48:22,669:INFO:create_model() successfully completed......................................
2024-02-04 20:48:22,727:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:22,727:INFO:Creating metrics dataframe
2024-02-04 20:48:22,729:INFO:Initializing Extra Trees Regressor
2024-02-04 20:48:22,730:INFO:Total runtime is 0.16152423222859705 minutes
2024-02-04 20:48:22,730:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:22,730:INFO:Initializing create_model()
2024-02-04 20:48:22,730:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:22,730:INFO:Checking exceptions
2024-02-04 20:48:22,730:INFO:Importing libraries
2024-02-04 20:48:22,730:INFO:Copying training dataset
2024-02-04 20:48:22,731:INFO:Defining folds
2024-02-04 20:48:22,731:INFO:Declaring metric variables
2024-02-04 20:48:22,731:INFO:Importing untrained model
2024-02-04 20:48:22,732:INFO:Extra Trees Regressor Imported successfully
2024-02-04 20:48:22,732:INFO:Starting cross validation
2024-02-04 20:48:22,732:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:22,839:INFO:Calculating mean and std
2024-02-04 20:48:22,839:INFO:Creating metrics dataframe
2024-02-04 20:48:22,841:INFO:Uploading results into container
2024-02-04 20:48:22,841:INFO:Uploading model into container now
2024-02-04 20:48:22,841:INFO:_master_model_container: 14
2024-02-04 20:48:22,841:INFO:_display_container: 2
2024-02-04 20:48:22,841:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-02-04 20:48:22,841:INFO:create_model() successfully completed......................................
2024-02-04 20:48:22,897:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:22,897:INFO:Creating metrics dataframe
2024-02-04 20:48:22,900:INFO:Initializing AdaBoost Regressor
2024-02-04 20:48:22,900:INFO:Total runtime is 0.16438167492548628 minutes
2024-02-04 20:48:22,900:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:22,900:INFO:Initializing create_model()
2024-02-04 20:48:22,900:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:22,900:INFO:Checking exceptions
2024-02-04 20:48:22,900:INFO:Importing libraries
2024-02-04 20:48:22,900:INFO:Copying training dataset
2024-02-04 20:48:22,902:INFO:Defining folds
2024-02-04 20:48:22,902:INFO:Declaring metric variables
2024-02-04 20:48:22,902:INFO:Importing untrained model
2024-02-04 20:48:22,902:INFO:AdaBoost Regressor Imported successfully
2024-02-04 20:48:22,902:INFO:Starting cross validation
2024-02-04 20:48:22,903:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:22,969:INFO:Calculating mean and std
2024-02-04 20:48:22,969:INFO:Creating metrics dataframe
2024-02-04 20:48:22,971:INFO:Uploading results into container
2024-02-04 20:48:22,971:INFO:Uploading model into container now
2024-02-04 20:48:22,971:INFO:_master_model_container: 15
2024-02-04 20:48:22,971:INFO:_display_container: 2
2024-02-04 20:48:22,971:INFO:AdaBoostRegressor(random_state=123)
2024-02-04 20:48:22,972:INFO:create_model() successfully completed......................................
2024-02-04 20:48:23,028:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:23,029:INFO:Creating metrics dataframe
2024-02-04 20:48:23,031:INFO:Initializing Gradient Boosting Regressor
2024-02-04 20:48:23,031:INFO:Total runtime is 0.1665563225746155 minutes
2024-02-04 20:48:23,031:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:23,031:INFO:Initializing create_model()
2024-02-04 20:48:23,031:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=gbr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:23,031:INFO:Checking exceptions
2024-02-04 20:48:23,032:INFO:Importing libraries
2024-02-04 20:48:23,032:INFO:Copying training dataset
2024-02-04 20:48:23,033:INFO:Defining folds
2024-02-04 20:48:23,033:INFO:Declaring metric variables
2024-02-04 20:48:23,033:INFO:Importing untrained model
2024-02-04 20:48:23,034:INFO:Gradient Boosting Regressor Imported successfully
2024-02-04 20:48:23,034:INFO:Starting cross validation
2024-02-04 20:48:23,034:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:23,079:INFO:Calculating mean and std
2024-02-04 20:48:23,080:INFO:Creating metrics dataframe
2024-02-04 20:48:23,081:INFO:Uploading results into container
2024-02-04 20:48:23,082:INFO:Uploading model into container now
2024-02-04 20:48:23,082:INFO:_master_model_container: 16
2024-02-04 20:48:23,082:INFO:_display_container: 2
2024-02-04 20:48:23,082:INFO:GradientBoostingRegressor(random_state=123)
2024-02-04 20:48:23,082:INFO:create_model() successfully completed......................................
2024-02-04 20:48:23,141:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:23,141:INFO:Creating metrics dataframe
2024-02-04 20:48:23,144:INFO:Initializing Extreme Gradient Boosting
2024-02-04 20:48:23,144:INFO:Total runtime is 0.16843953927357994 minutes
2024-02-04 20:48:23,144:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:23,144:INFO:Initializing create_model()
2024-02-04 20:48:23,144:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=xgboost, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:23,144:INFO:Checking exceptions
2024-02-04 20:48:23,144:INFO:Importing libraries
2024-02-04 20:48:23,144:INFO:Copying training dataset
2024-02-04 20:48:23,146:INFO:Defining folds
2024-02-04 20:48:23,146:INFO:Declaring metric variables
2024-02-04 20:48:23,146:INFO:Importing untrained model
2024-02-04 20:48:23,146:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 20:48:23,146:INFO:Starting cross validation
2024-02-04 20:48:23,146:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:23,234:INFO:Calculating mean and std
2024-02-04 20:48:23,235:INFO:Creating metrics dataframe
2024-02-04 20:48:23,236:INFO:Uploading results into container
2024-02-04 20:48:23,236:INFO:Uploading model into container now
2024-02-04 20:48:23,237:INFO:_master_model_container: 17
2024-02-04 20:48:23,237:INFO:_display_container: 2
2024-02-04 20:48:23,237:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=123, ...)
2024-02-04 20:48:23,237:INFO:create_model() successfully completed......................................
2024-02-04 20:48:23,295:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:23,295:INFO:Creating metrics dataframe
2024-02-04 20:48:23,298:INFO:Initializing Light Gradient Boosting Machine
2024-02-04 20:48:23,298:INFO:Total runtime is 0.1710089961687724 minutes
2024-02-04 20:48:23,298:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:23,299:INFO:Initializing create_model()
2024-02-04 20:48:23,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:23,299:INFO:Checking exceptions
2024-02-04 20:48:23,299:INFO:Importing libraries
2024-02-04 20:48:23,299:INFO:Copying training dataset
2024-02-04 20:48:23,300:INFO:Defining folds
2024-02-04 20:48:23,300:INFO:Declaring metric variables
2024-02-04 20:48:23,300:INFO:Importing untrained model
2024-02-04 20:48:23,300:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-04 20:48:23,300:INFO:Starting cross validation
2024-02-04 20:48:23,301:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:23,356:INFO:Calculating mean and std
2024-02-04 20:48:23,357:INFO:Creating metrics dataframe
2024-02-04 20:48:23,358:INFO:Uploading results into container
2024-02-04 20:48:23,359:INFO:Uploading model into container now
2024-02-04 20:48:23,359:INFO:_master_model_container: 18
2024-02-04 20:48:23,359:INFO:_display_container: 2
2024-02-04 20:48:23,359:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-02-04 20:48:23,359:INFO:create_model() successfully completed......................................
2024-02-04 20:48:23,422:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:23,422:INFO:Creating metrics dataframe
2024-02-04 20:48:23,425:INFO:Initializing CatBoost Regressor
2024-02-04 20:48:23,425:INFO:Total runtime is 0.17313385804494225 minutes
2024-02-04 20:48:23,425:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:23,427:INFO:Initializing create_model()
2024-02-04 20:48:23,427:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=catboost, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:23,427:INFO:Checking exceptions
2024-02-04 20:48:23,427:INFO:Importing libraries
2024-02-04 20:48:23,427:INFO:Copying training dataset
2024-02-04 20:48:23,429:INFO:Defining folds
2024-02-04 20:48:23,429:INFO:Declaring metric variables
2024-02-04 20:48:23,429:INFO:Importing untrained model
2024-02-04 20:48:23,429:INFO:CatBoost Regressor Imported successfully
2024-02-04 20:48:23,429:INFO:Starting cross validation
2024-02-04 20:48:23,430:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:24,547:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
4 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
4 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\catboost\core.py", line 5703, in fit
    return self._fit(X, y, cat_features, text_features, embedding_features, None, sample_weight, None, None, None, None, baseline,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\catboost\core.py", line 2319, in _fit
    self._train(
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\catboost\core.py", line 1723, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 4645, in _catboost._CatBoost._train
  File "_catboost.pyx", line 4694, in _catboost._CatBoost._train
_catboost.CatBoostError: C:/Go_Agent/pipelines/BuildMaster/catboost.git/catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-02-04 20:48:24,547:INFO:Calculating mean and std
2024-02-04 20:48:24,547:INFO:Creating metrics dataframe
2024-02-04 20:48:24,549:INFO:Uploading results into container
2024-02-04 20:48:24,550:INFO:Uploading model into container now
2024-02-04 20:48:24,550:INFO:_master_model_container: 19
2024-02-04 20:48:24,550:INFO:_display_container: 2
2024-02-04 20:48:24,550:INFO:<catboost.core.CatBoostRegressor object at 0x0000023D1C113A50>
2024-02-04 20:48:24,550:INFO:create_model() successfully completed......................................
2024-02-04 20:48:24,609:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:24,609:INFO:Creating metrics dataframe
2024-02-04 20:48:24,612:INFO:Initializing Dummy Regressor
2024-02-04 20:48:24,612:INFO:Total runtime is 0.19291045268376672 minutes
2024-02-04 20:48:24,612:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:24,612:INFO:Initializing create_model()
2024-02-04 20:48:24,612:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1BC21B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:24,612:INFO:Checking exceptions
2024-02-04 20:48:24,612:INFO:Importing libraries
2024-02-04 20:48:24,612:INFO:Copying training dataset
2024-02-04 20:48:24,614:INFO:Defining folds
2024-02-04 20:48:24,614:INFO:Declaring metric variables
2024-02-04 20:48:24,614:INFO:Importing untrained model
2024-02-04 20:48:24,614:INFO:Dummy Regressor Imported successfully
2024-02-04 20:48:24,614:INFO:Starting cross validation
2024-02-04 20:48:24,614:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:24,638:INFO:Calculating mean and std
2024-02-04 20:48:24,638:INFO:Creating metrics dataframe
2024-02-04 20:48:24,640:INFO:Uploading results into container
2024-02-04 20:48:24,640:INFO:Uploading model into container now
2024-02-04 20:48:24,640:INFO:_master_model_container: 20
2024-02-04 20:48:24,640:INFO:_display_container: 2
2024-02-04 20:48:24,640:INFO:DummyRegressor()
2024-02-04 20:48:24,640:INFO:create_model() successfully completed......................................
2024-02-04 20:48:24,699:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:24,699:INFO:Creating metrics dataframe
2024-02-04 20:48:24,703:INFO:Initializing create_model()
2024-02-04 20:48:24,703:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=<catboost.core.CatBoostRegressor object at 0x0000023D1C113A50>, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:24,703:INFO:Checking exceptions
2024-02-04 20:48:24,703:INFO:Importing libraries
2024-02-04 20:48:24,703:INFO:Copying training dataset
2024-02-04 20:48:24,705:INFO:Defining folds
2024-02-04 20:48:24,705:INFO:Declaring metric variables
2024-02-04 20:48:24,705:INFO:Importing untrained model
2024-02-04 20:48:24,705:INFO:Declaring custom model
2024-02-04 20:48:24,705:INFO:CatBoost Regressor Imported successfully
2024-02-04 20:48:24,705:INFO:Cross validation set to False
2024-02-04 20:48:24,705:INFO:Fitting Model
2024-02-04 20:48:25,333:INFO:<catboost.core.CatBoostRegressor object at 0x0000023D1C0F4250>
2024-02-04 20:48:25,333:INFO:create_model() successfully completed......................................
2024-02-04 20:48:25,399:INFO:_master_model_container: 20
2024-02-04 20:48:25,400:INFO:_display_container: 2
2024-02-04 20:48:25,400:INFO:<catboost.core.CatBoostRegressor object at 0x0000023D1C0F4250>
2024-02-04 20:48:25,400:INFO:compare_models() successfully completed......................................
2024-02-04 20:48:25,400:INFO:Initializing tune_model()
2024-02-04 20:48:25,400:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=<catboost.core.CatBoostRegressor object at 0x0000023D1C0F4250>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-02-04 20:48:25,400:INFO:Checking exceptions
2024-02-04 20:48:25,401:INFO:Copying training dataset
2024-02-04 20:48:25,402:INFO:Checking base model
2024-02-04 20:48:25,402:INFO:Base model : CatBoost Regressor
2024-02-04 20:48:25,402:INFO:Declaring metric variables
2024-02-04 20:48:25,402:INFO:Defining Hyperparameters
2024-02-04 20:48:25,458:INFO:Tuning with n_jobs=-1
2024-02-04 20:48:25,460:INFO:Initializing RandomizedSearchCV
2024-02-04 20:48:26,809:INFO:best_params: {'actual_estimator__random_strength': 0.6, 'actual_estimator__n_estimators': 40, 'actual_estimator__l2_leaf_reg': 7, 'actual_estimator__eta': 0.3, 'actual_estimator__depth': 1}
2024-02-04 20:48:26,810:INFO:Hyperparameter search completed
2024-02-04 20:48:26,810:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:26,810:INFO:Initializing create_model()
2024-02-04 20:48:26,810:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=<catboost.core.CatBoostRegressor object at 0x0000023D1BD7D990>, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D1B64BD10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.6, 'n_estimators': 40, 'l2_leaf_reg': 7, 'eta': 0.3, 'depth': 1})
2024-02-04 20:48:26,810:INFO:Checking exceptions
2024-02-04 20:48:26,810:INFO:Importing libraries
2024-02-04 20:48:26,810:INFO:Copying training dataset
2024-02-04 20:48:26,812:INFO:Defining folds
2024-02-04 20:48:26,812:INFO:Declaring metric variables
2024-02-04 20:48:26,812:INFO:Importing untrained model
2024-02-04 20:48:26,812:INFO:Declaring custom model
2024-02-04 20:48:26,812:INFO:CatBoost Regressor Imported successfully
2024-02-04 20:48:26,812:INFO:Starting cross validation
2024-02-04 20:48:26,813:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:26,888:INFO:Calculating mean and std
2024-02-04 20:48:26,888:INFO:Creating metrics dataframe
2024-02-04 20:48:26,889:INFO:Finalizing model
2024-02-04 20:48:26,928:INFO:Uploading results into container
2024-02-04 20:48:26,928:INFO:Uploading model into container now
2024-02-04 20:48:26,929:INFO:_master_model_container: 21
2024-02-04 20:48:26,929:INFO:_display_container: 3
2024-02-04 20:48:26,929:INFO:<catboost.core.CatBoostRegressor object at 0x0000023D1B8F5550>
2024-02-04 20:48:26,929:INFO:create_model() successfully completed......................................
2024-02-04 20:48:26,985:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:26,985:INFO:choose_better activated
2024-02-04 20:48:26,985:INFO:SubProcess create_model() called ==================================
2024-02-04 20:48:26,985:INFO:Initializing create_model()
2024-02-04 20:48:26,985:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D759D6350>, estimator=<catboost.core.CatBoostRegressor object at 0x0000023D1C0F4250>, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 20:48:26,985:INFO:Checking exceptions
2024-02-04 20:48:26,986:INFO:Importing libraries
2024-02-04 20:48:26,986:INFO:Copying training dataset
2024-02-04 20:48:26,989:INFO:Defining folds
2024-02-04 20:48:26,989:INFO:Declaring metric variables
2024-02-04 20:48:26,989:INFO:Importing untrained model
2024-02-04 20:48:26,989:INFO:Declaring custom model
2024-02-04 20:48:26,990:INFO:CatBoost Regressor Imported successfully
2024-02-04 20:48:26,990:INFO:Starting cross validation
2024-02-04 20:48:26,991:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 20:48:27,663:INFO:Calculating mean and std
2024-02-04 20:48:27,663:INFO:Creating metrics dataframe
2024-02-04 20:48:27,664:INFO:Finalizing model
2024-02-04 20:48:28,120:INFO:Uploading results into container
2024-02-04 20:48:28,121:INFO:Uploading model into container now
2024-02-04 20:48:28,121:INFO:_master_model_container: 22
2024-02-04 20:48:28,121:INFO:_display_container: 4
2024-02-04 20:48:28,121:INFO:<catboost.core.CatBoostRegressor object at 0x0000023D1B8EF210>
2024-02-04 20:48:28,121:INFO:create_model() successfully completed......................................
2024-02-04 20:48:28,176:INFO:SubProcess create_model() end ==================================
2024-02-04 20:48:28,176:INFO:<catboost.core.CatBoostRegressor object at 0x0000023D1B8EF210> result for R2 is -0.385
2024-02-04 20:48:28,176:INFO:<catboost.core.CatBoostRegressor object at 0x0000023D1B8F5550> result for R2 is -0.0689
2024-02-04 20:48:28,176:INFO:<catboost.core.CatBoostRegressor object at 0x0000023D1B8F5550> is best model
2024-02-04 20:48:28,176:INFO:choose_better completed
2024-02-04 20:48:28,180:INFO:_master_model_container: 22
2024-02-04 20:48:28,180:INFO:_display_container: 3
2024-02-04 20:48:28,180:INFO:<catboost.core.CatBoostRegressor object at 0x0000023D1B8F5550>
2024-02-04 20:48:28,180:INFO:tune_model() successfully completed......................................
2024-02-04 21:09:07,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:09:07,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:09:07,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:09:07,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:09:08,214:INFO:PyCaret ClassificationExperiment
2024-02-04 21:09:08,214:INFO:Logging name: clf-default-name
2024-02-04 21:09:08,215:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 21:09:08,215:INFO:version 3.2.0
2024-02-04 21:09:08,215:INFO:Initializing setup()
2024-02-04 21:09:08,215:INFO:self.USI: fb89
2024-02-04 21:09:08,215:INFO:self._variable_keys: {'data', 'X', 'memory', 'is_multiclass', 'y_train', '_ml_usecase', 'exp_name_log', 'logging_param', 'fix_imbalance', 'target_param', 'idx', 'fold_groups_param', 'X_test', 'n_jobs_param', 'html_param', '_available_plots', 'gpu_n_jobs_param', 'fold_shuffle_param', 'y', 'fold_generator', 'gpu_param', 'X_train', 'pipeline', 'exp_id', 'USI', 'y_test', 'seed', 'log_plots_param'}
2024-02-04 21:09:08,215:INFO:Checking environment
2024-02-04 21:09:08,215:INFO:python_version: 3.11.7
2024-02-04 21:09:08,215:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 21:09:08,215:INFO:machine: AMD64
2024-02-04 21:09:08,226:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 21:09:08,229:INFO:Memory: svmem(total=16892026880, available=4851261440, percent=71.3, used=12040765440, free=4851261440)
2024-02-04 21:09:08,229:INFO:Physical Core: 12
2024-02-04 21:09:08,229:INFO:Logical Core: 16
2024-02-04 21:09:08,229:INFO:Checking libraries
2024-02-04 21:09:08,229:INFO:System:
2024-02-04 21:09:08,229:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 21:09:08,230:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 21:09:08,230:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 21:09:08,230:INFO:PyCaret required dependencies:
2024-02-04 21:09:08,257:INFO:                 pip: 23.3.2
2024-02-04 21:09:08,257:INFO:          setuptools: 65.5.0
2024-02-04 21:09:08,257:INFO:             pycaret: 3.2.0
2024-02-04 21:09:08,257:INFO:             IPython: 8.20.0
2024-02-04 21:09:08,257:INFO:          ipywidgets: 8.1.1
2024-02-04 21:09:08,257:INFO:                tqdm: 4.66.1
2024-02-04 21:09:08,257:INFO:               numpy: 1.25.2
2024-02-04 21:09:08,257:INFO:              pandas: 1.5.3
2024-02-04 21:09:08,257:INFO:              jinja2: 3.1.3
2024-02-04 21:09:08,257:INFO:               scipy: 1.10.1
2024-02-04 21:09:08,257:INFO:              joblib: 1.3.2
2024-02-04 21:09:08,257:INFO:             sklearn: 1.2.2
2024-02-04 21:09:08,257:INFO:                pyod: 1.1.2
2024-02-04 21:09:08,257:INFO:            imblearn: 0.12.0
2024-02-04 21:09:08,257:INFO:   category_encoders: 2.6.3
2024-02-04 21:09:08,257:INFO:            lightgbm: 4.3.0
2024-02-04 21:09:08,257:INFO:               numba: 0.58.1
2024-02-04 21:09:08,257:INFO:            requests: 2.31.0
2024-02-04 21:09:08,257:INFO:          matplotlib: 3.6.0
2024-02-04 21:09:08,257:INFO:          scikitplot: 0.3.7
2024-02-04 21:09:08,257:INFO:         yellowbrick: 1.5
2024-02-04 21:09:08,257:INFO:              plotly: 5.18.0
2024-02-04 21:09:08,257:INFO:    plotly-resampler: Not installed
2024-02-04 21:09:08,257:INFO:             kaleido: 0.2.1
2024-02-04 21:09:08,257:INFO:           schemdraw: 0.15
2024-02-04 21:09:08,257:INFO:         statsmodels: 0.14.1
2024-02-04 21:09:08,257:INFO:              sktime: 0.21.1
2024-02-04 21:09:08,257:INFO:               tbats: 1.1.3
2024-02-04 21:09:08,257:INFO:            pmdarima: 2.0.4
2024-02-04 21:09:08,257:INFO:              psutil: 5.9.8
2024-02-04 21:09:08,257:INFO:          markupsafe: 2.1.4
2024-02-04 21:09:08,257:INFO:             pickle5: Not installed
2024-02-04 21:09:08,257:INFO:         cloudpickle: 3.0.0
2024-02-04 21:09:08,257:INFO:         deprecation: 2.1.0
2024-02-04 21:09:08,257:INFO:              xxhash: 3.4.1
2024-02-04 21:09:08,257:INFO:           wurlitzer: Not installed
2024-02-04 21:09:08,257:INFO:PyCaret optional dependencies:
2024-02-04 21:09:08,287:INFO:                shap: 0.44.1
2024-02-04 21:09:08,287:INFO:           interpret: Not installed
2024-02-04 21:09:08,287:INFO:                umap: Not installed
2024-02-04 21:09:08,287:INFO:     ydata_profiling: Not installed
2024-02-04 21:09:08,288:INFO:  explainerdashboard: Not installed
2024-02-04 21:09:08,288:INFO:             autoviz: Not installed
2024-02-04 21:09:08,288:INFO:           fairlearn: Not installed
2024-02-04 21:09:08,288:INFO:          deepchecks: Not installed
2024-02-04 21:09:08,288:INFO:             xgboost: 2.0.3
2024-02-04 21:09:08,288:INFO:            catboost: 1.2.2
2024-02-04 21:09:08,288:INFO:              kmodes: Not installed
2024-02-04 21:09:08,288:INFO:             mlxtend: Not installed
2024-02-04 21:09:08,288:INFO:       statsforecast: Not installed
2024-02-04 21:09:08,288:INFO:        tune_sklearn: Not installed
2024-02-04 21:09:08,288:INFO:                 ray: Not installed
2024-02-04 21:09:08,288:INFO:            hyperopt: Not installed
2024-02-04 21:09:08,288:INFO:              optuna: Not installed
2024-02-04 21:09:08,288:INFO:               skopt: Not installed
2024-02-04 21:09:08,288:INFO:              mlflow: Not installed
2024-02-04 21:09:08,288:INFO:              gradio: Not installed
2024-02-04 21:09:08,288:INFO:             fastapi: Not installed
2024-02-04 21:09:08,288:INFO:             uvicorn: Not installed
2024-02-04 21:09:08,288:INFO:              m2cgen: Not installed
2024-02-04 21:09:08,288:INFO:           evidently: Not installed
2024-02-04 21:09:08,288:INFO:               fugue: Not installed
2024-02-04 21:09:08,288:INFO:           streamlit: Not installed
2024-02-04 21:09:08,288:INFO:             prophet: 1.1.5
2024-02-04 21:09:08,288:INFO:None
2024-02-04 21:09:08,288:INFO:Set up data.
2024-02-04 21:09:08,291:INFO:Set up folding strategy.
2024-02-04 21:09:08,292:INFO:Set up train/test split.
2024-02-04 21:09:08,294:INFO:Set up index.
2024-02-04 21:09:08,294:INFO:Assigning column types.
2024-02-04 21:09:08,295:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 21:09:08,320:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 21:09:08,322:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:09:08,341:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:09:08,342:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:09:08,381:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 21:09:08,381:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:09:08,397:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:09:08,398:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:09:08,398:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 21:09:08,423:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:09:08,437:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:09:08,439:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:09:08,463:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:09:08,541:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:09:08,542:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:09:08,543:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 21:09:08,584:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:09:08,586:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:09:08,627:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:09:08,628:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:09:08,630:INFO:Preparing preprocessing pipeline...
2024-02-04 21:09:08,631:INFO:Set up label encoding.
2024-02-04 21:09:08,631:INFO:Set up simple imputation.
2024-02-04 21:09:08,645:INFO:Finished creating preprocessing pipeline.
2024-02-04 21:09:08,647:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 21:09:08,647:INFO:Creating final display dataframe.
2024-02-04 21:09:08,692:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  fb89
2024-02-04 21:09:08,734:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:09:08,735:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:09:08,776:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:09:08,777:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:09:08,778:INFO:setup() successfully completed in 0.57s...............
2024-02-04 21:09:08,778:INFO:Initializing create_model()
2024-02-04 21:09:08,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7D4F2E750>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 21:09:08,778:INFO:Checking exceptions
2024-02-04 21:09:08,782:INFO:Importing libraries
2024-02-04 21:09:08,782:INFO:Copying training dataset
2024-02-04 21:09:08,784:INFO:Defining folds
2024-02-04 21:09:08,784:INFO:Declaring metric variables
2024-02-04 21:09:08,785:INFO:Importing untrained model
2024-02-04 21:09:08,785:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 21:09:08,785:INFO:Starting cross validation
2024-02-04 21:09:08,786:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 21:09:11,437:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,439:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,440:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,685:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,687:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,687:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,728:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,729:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,730:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,746:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,747:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,748:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,749:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,749:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,750:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:09:11,760:INFO:Calculating mean and std
2024-02-04 21:09:11,761:INFO:Creating metrics dataframe
2024-02-04 21:09:11,762:INFO:Finalizing model
2024-02-04 21:09:11,812:INFO:Uploading results into container
2024-02-04 21:09:11,813:INFO:Uploading model into container now
2024-02-04 21:09:11,821:INFO:_master_model_container: 1
2024-02-04 21:09:11,821:INFO:_display_container: 2
2024-02-04 21:09:11,822:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 21:09:11,822:INFO:create_model() successfully completed......................................
2024-02-04 21:09:11,890:INFO:Initializing predict_model()
2024-02-04 21:09:11,890:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7D4F2E750>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B7ADC06480>)
2024-02-04 21:09:11,890:INFO:Checking exceptions
2024-02-04 21:09:11,891:INFO:Preloading libraries
2024-02-04 21:09:11,891:INFO:Set up data.
2024-02-04 21:09:11,893:INFO:Set up index.
2024-02-04 21:09:11,983:INFO:Initializing plot_model()
2024-02-04 21:09:11,984:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7D4F2E750>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:09:11,984:INFO:Checking exceptions
2024-02-04 21:09:11,987:INFO:Preloading libraries
2024-02-04 21:09:11,991:INFO:Copying training dataset
2024-02-04 21:09:11,992:INFO:Plot type: auc
2024-02-04 21:09:12,089:INFO:Fitting Model
2024-02-04 21:09:12,090:INFO:Scoring test/hold-out set
2024-02-04 21:09:12,106:INFO:Saving 'AUC.png'
2024-02-04 21:09:12,234:INFO:Visual Rendered Successfully
2024-02-04 21:09:12,295:INFO:plot_model() successfully completed......................................
2024-02-04 21:09:12,296:INFO:Initializing plot_model()
2024-02-04 21:09:12,296:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7D4F2E750>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:09:12,296:INFO:Checking exceptions
2024-02-04 21:09:12,297:INFO:Preloading libraries
2024-02-04 21:09:12,302:INFO:Copying training dataset
2024-02-04 21:09:12,302:INFO:Plot type: confusion_matrix
2024-02-04 21:09:12,367:INFO:Fitting Model
2024-02-04 21:09:12,368:INFO:Scoring test/hold-out set
2024-02-04 21:09:12,385:INFO:Saving 'Confusion Matrix.png'
2024-02-04 21:09:12,486:INFO:Visual Rendered Successfully
2024-02-04 21:09:12,546:INFO:plot_model() successfully completed......................................
2024-02-04 21:09:12,546:INFO:Initializing plot_model()
2024-02-04 21:09:12,546:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7D4F2E750>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:09:12,546:INFO:Checking exceptions
2024-02-04 21:09:12,548:INFO:Preloading libraries
2024-02-04 21:09:12,556:INFO:Copying training dataset
2024-02-04 21:09:12,556:INFO:Plot type: feature
2024-02-04 21:09:12,558:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 21:09:12,602:INFO:Saving 'Feature Importance.png'
2024-02-04 21:09:12,676:INFO:Visual Rendered Successfully
2024-02-04 21:09:12,737:INFO:plot_model() successfully completed......................................
2024-02-04 21:09:12,738:INFO:Initializing interpret_model()
2024-02-04 21:09:12,738:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7D4F2E750>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 21:09:12,738:INFO:Checking exceptions
2024-02-04 21:09:12,738:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 21:09:13,230:INFO:plot type: summary
2024-02-04 21:09:13,230:INFO:Creating TreeExplainer
2024-02-04 21:09:13,249:INFO:Compiling shap values
2024-02-04 21:09:13,316:INFO:Saving 'SHAP summary.png'
2024-02-04 21:09:13,417:INFO:Visual Rendered Successfully
2024-02-04 21:09:13,417:INFO:interpret_model() successfully completed......................................
2024-02-04 21:15:52,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:15:52,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:15:52,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:15:52,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:15:53,622:INFO:PyCaret ClassificationExperiment
2024-02-04 21:15:53,622:INFO:Logging name: clf-default-name
2024-02-04 21:15:53,622:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 21:15:53,622:INFO:version 3.2.0
2024-02-04 21:15:53,622:INFO:Initializing setup()
2024-02-04 21:15:53,622:INFO:self.USI: 0db5
2024-02-04 21:15:53,622:INFO:self._variable_keys: {'data', 'USI', 'fold_groups_param', 'log_plots_param', '_ml_usecase', 'is_multiclass', 'gpu_n_jobs_param', 'X_test', 'memory', 'target_param', 'y_test', 'seed', 'X', 'y', 'html_param', 'exp_id', 'pipeline', '_available_plots', 'fold_shuffle_param', 'fix_imbalance', 'X_train', 'fold_generator', 'idx', 'logging_param', 'gpu_param', 'exp_name_log', 'n_jobs_param', 'y_train'}
2024-02-04 21:15:53,622:INFO:Checking environment
2024-02-04 21:15:53,622:INFO:python_version: 3.11.7
2024-02-04 21:15:53,622:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 21:15:53,622:INFO:machine: AMD64
2024-02-04 21:15:53,631:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 21:15:53,635:INFO:Memory: svmem(total=16892026880, available=4787216384, percent=71.7, used=12104810496, free=4787216384)
2024-02-04 21:15:53,635:INFO:Physical Core: 12
2024-02-04 21:15:53,635:INFO:Logical Core: 16
2024-02-04 21:15:53,635:INFO:Checking libraries
2024-02-04 21:15:53,635:INFO:System:
2024-02-04 21:15:53,635:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 21:15:53,635:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 21:15:53,635:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 21:15:53,635:INFO:PyCaret required dependencies:
2024-02-04 21:15:53,665:INFO:                 pip: 23.3.2
2024-02-04 21:15:53,665:INFO:          setuptools: 65.5.0
2024-02-04 21:15:53,665:INFO:             pycaret: 3.2.0
2024-02-04 21:15:53,665:INFO:             IPython: 8.20.0
2024-02-04 21:15:53,665:INFO:          ipywidgets: 8.1.1
2024-02-04 21:15:53,665:INFO:                tqdm: 4.66.1
2024-02-04 21:15:53,665:INFO:               numpy: 1.25.2
2024-02-04 21:15:53,665:INFO:              pandas: 1.5.3
2024-02-04 21:15:53,665:INFO:              jinja2: 3.1.3
2024-02-04 21:15:53,665:INFO:               scipy: 1.10.1
2024-02-04 21:15:53,665:INFO:              joblib: 1.3.2
2024-02-04 21:15:53,665:INFO:             sklearn: 1.2.2
2024-02-04 21:15:53,665:INFO:                pyod: 1.1.2
2024-02-04 21:15:53,665:INFO:            imblearn: 0.12.0
2024-02-04 21:15:53,665:INFO:   category_encoders: 2.6.3
2024-02-04 21:15:53,665:INFO:            lightgbm: 4.3.0
2024-02-04 21:15:53,665:INFO:               numba: 0.58.1
2024-02-04 21:15:53,665:INFO:            requests: 2.31.0
2024-02-04 21:15:53,665:INFO:          matplotlib: 3.6.0
2024-02-04 21:15:53,665:INFO:          scikitplot: 0.3.7
2024-02-04 21:15:53,665:INFO:         yellowbrick: 1.5
2024-02-04 21:15:53,665:INFO:              plotly: 5.18.0
2024-02-04 21:15:53,665:INFO:    plotly-resampler: Not installed
2024-02-04 21:15:53,665:INFO:             kaleido: 0.2.1
2024-02-04 21:15:53,665:INFO:           schemdraw: 0.15
2024-02-04 21:15:53,665:INFO:         statsmodels: 0.14.1
2024-02-04 21:15:53,665:INFO:              sktime: 0.21.1
2024-02-04 21:15:53,665:INFO:               tbats: 1.1.3
2024-02-04 21:15:53,665:INFO:            pmdarima: 2.0.4
2024-02-04 21:15:53,665:INFO:              psutil: 5.9.8
2024-02-04 21:15:53,665:INFO:          markupsafe: 2.1.4
2024-02-04 21:15:53,665:INFO:             pickle5: Not installed
2024-02-04 21:15:53,665:INFO:         cloudpickle: 3.0.0
2024-02-04 21:15:53,665:INFO:         deprecation: 2.1.0
2024-02-04 21:15:53,665:INFO:              xxhash: 3.4.1
2024-02-04 21:15:53,665:INFO:           wurlitzer: Not installed
2024-02-04 21:15:53,665:INFO:PyCaret optional dependencies:
2024-02-04 21:15:53,695:INFO:                shap: 0.44.1
2024-02-04 21:15:53,695:INFO:           interpret: Not installed
2024-02-04 21:15:53,695:INFO:                umap: Not installed
2024-02-04 21:15:53,695:INFO:     ydata_profiling: Not installed
2024-02-04 21:15:53,695:INFO:  explainerdashboard: Not installed
2024-02-04 21:15:53,695:INFO:             autoviz: Not installed
2024-02-04 21:15:53,695:INFO:           fairlearn: Not installed
2024-02-04 21:15:53,695:INFO:          deepchecks: Not installed
2024-02-04 21:15:53,695:INFO:             xgboost: 2.0.3
2024-02-04 21:15:53,695:INFO:            catboost: 1.2.2
2024-02-04 21:15:53,695:INFO:              kmodes: Not installed
2024-02-04 21:15:53,695:INFO:             mlxtend: Not installed
2024-02-04 21:15:53,695:INFO:       statsforecast: Not installed
2024-02-04 21:15:53,695:INFO:        tune_sklearn: Not installed
2024-02-04 21:15:53,695:INFO:                 ray: Not installed
2024-02-04 21:15:53,695:INFO:            hyperopt: Not installed
2024-02-04 21:15:53,695:INFO:              optuna: Not installed
2024-02-04 21:15:53,695:INFO:               skopt: Not installed
2024-02-04 21:15:53,695:INFO:              mlflow: Not installed
2024-02-04 21:15:53,695:INFO:              gradio: Not installed
2024-02-04 21:15:53,695:INFO:             fastapi: Not installed
2024-02-04 21:15:53,695:INFO:             uvicorn: Not installed
2024-02-04 21:15:53,695:INFO:              m2cgen: Not installed
2024-02-04 21:15:53,695:INFO:           evidently: Not installed
2024-02-04 21:15:53,695:INFO:               fugue: Not installed
2024-02-04 21:15:53,695:INFO:           streamlit: Not installed
2024-02-04 21:15:53,695:INFO:             prophet: 1.1.5
2024-02-04 21:15:53,695:INFO:None
2024-02-04 21:15:53,696:INFO:Set up data.
2024-02-04 21:15:53,700:INFO:Set up folding strategy.
2024-02-04 21:15:53,700:INFO:Set up train/test split.
2024-02-04 21:15:53,703:INFO:Set up index.
2024-02-04 21:15:53,703:INFO:Assigning column types.
2024-02-04 21:15:53,706:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 21:15:53,731:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 21:15:53,733:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:15:53,754:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:15:53,755:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:15:53,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 21:15:53,795:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:15:53,812:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:15:53,814:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:15:53,814:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 21:15:53,839:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:15:53,856:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:15:53,859:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:15:53,884:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:15:53,964:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:15:53,966:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:15:53,966:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 21:15:54,006:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:15:54,008:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:15:54,047:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:15:54,048:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:15:54,049:INFO:Preparing preprocessing pipeline...
2024-02-04 21:15:54,051:INFO:Set up label encoding.
2024-02-04 21:15:54,051:INFO:Set up simple imputation.
2024-02-04 21:15:54,069:INFO:Finished creating preprocessing pipeline.
2024-02-04 21:15:54,072:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 21:15:54,072:INFO:Creating final display dataframe.
2024-02-04 21:15:54,110:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  0db5
2024-02-04 21:15:54,149:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:15:54,151:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:15:54,190:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:15:54,191:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:15:54,192:INFO:setup() successfully completed in 0.57s...............
2024-02-04 21:15:54,192:INFO:Initializing create_model()
2024-02-04 21:15:54,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000253D0F61510>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 21:15:54,192:INFO:Checking exceptions
2024-02-04 21:15:54,193:INFO:Importing libraries
2024-02-04 21:15:54,194:INFO:Copying training dataset
2024-02-04 21:15:54,195:INFO:Defining folds
2024-02-04 21:15:54,195:INFO:Declaring metric variables
2024-02-04 21:15:54,195:INFO:Importing untrained model
2024-02-04 21:15:54,196:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 21:15:54,196:INFO:Starting cross validation
2024-02-04 21:15:54,196:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 21:15:56,909:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:56,911:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:56,912:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,041:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,042:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,044:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,115:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,117:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,118:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,119:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,121:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,122:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,132:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,134:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,135:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:15:57,143:INFO:Calculating mean and std
2024-02-04 21:15:57,144:INFO:Creating metrics dataframe
2024-02-04 21:15:57,146:INFO:Finalizing model
2024-02-04 21:15:57,198:INFO:Uploading results into container
2024-02-04 21:15:57,199:INFO:Uploading model into container now
2024-02-04 21:15:57,207:INFO:_master_model_container: 1
2024-02-04 21:15:57,207:INFO:_display_container: 2
2024-02-04 21:15:57,208:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 21:15:57,208:INFO:create_model() successfully completed......................................
2024-02-04 21:15:57,278:INFO:Initializing predict_model()
2024-02-04 21:15:57,278:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000253D0F61510>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000253A99D6480>)
2024-02-04 21:15:57,278:INFO:Checking exceptions
2024-02-04 21:15:57,278:INFO:Preloading libraries
2024-02-04 21:15:57,278:INFO:Set up data.
2024-02-04 21:15:57,279:INFO:Set up index.
2024-02-04 21:15:57,368:INFO:Initializing plot_model()
2024-02-04 21:15:57,368:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000253D0F61510>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:15:57,368:INFO:Checking exceptions
2024-02-04 21:15:57,372:INFO:Preloading libraries
2024-02-04 21:15:57,376:INFO:Copying training dataset
2024-02-04 21:15:57,376:INFO:Plot type: auc
2024-02-04 21:15:57,483:INFO:Fitting Model
2024-02-04 21:15:57,484:INFO:Scoring test/hold-out set
2024-02-04 21:15:57,498:INFO:Saving 'AUC.png'
2024-02-04 21:15:57,632:INFO:Visual Rendered Successfully
2024-02-04 21:15:57,691:INFO:plot_model() successfully completed......................................
2024-02-04 21:15:57,691:INFO:Initializing plot_model()
2024-02-04 21:15:57,691:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000253D0F61510>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:15:57,691:INFO:Checking exceptions
2024-02-04 21:15:57,692:INFO:Preloading libraries
2024-02-04 21:15:57,697:INFO:Copying training dataset
2024-02-04 21:15:57,697:INFO:Plot type: confusion_matrix
2024-02-04 21:15:57,761:INFO:Fitting Model
2024-02-04 21:15:57,762:INFO:Scoring test/hold-out set
2024-02-04 21:15:57,772:INFO:Saving 'Confusion Matrix.png'
2024-02-04 21:15:57,843:INFO:Visual Rendered Successfully
2024-02-04 21:15:57,907:INFO:plot_model() successfully completed......................................
2024-02-04 21:15:57,908:INFO:Initializing plot_model()
2024-02-04 21:15:57,908:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000253D0F61510>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:15:57,908:INFO:Checking exceptions
2024-02-04 21:15:57,909:INFO:Preloading libraries
2024-02-04 21:15:57,914:INFO:Copying training dataset
2024-02-04 21:15:57,914:INFO:Plot type: feature
2024-02-04 21:15:57,915:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 21:15:57,945:INFO:Saving 'Feature Importance.png'
2024-02-04 21:15:58,022:INFO:Visual Rendered Successfully
2024-02-04 21:15:58,084:INFO:plot_model() successfully completed......................................
2024-02-04 21:15:58,084:INFO:Initializing interpret_model()
2024-02-04 21:15:58,085:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000253D0F61510>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 21:15:58,085:INFO:Checking exceptions
2024-02-04 21:15:58,085:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 21:15:58,324:INFO:plot type: summary
2024-02-04 21:15:58,324:INFO:Creating TreeExplainer
2024-02-04 21:15:58,339:INFO:Compiling shap values
2024-02-04 21:15:58,407:INFO:Saving 'SHAP summary.png'
2024-02-04 21:15:58,505:INFO:Visual Rendered Successfully
2024-02-04 21:15:58,505:INFO:interpret_model() successfully completed......................................
2024-02-04 21:29:04,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:29:04,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:29:04,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:29:04,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:29:05,424:INFO:PyCaret ClassificationExperiment
2024-02-04 21:29:05,425:INFO:Logging name: clf-default-name
2024-02-04 21:29:05,425:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 21:29:05,425:INFO:version 3.2.0
2024-02-04 21:29:05,425:INFO:Initializing setup()
2024-02-04 21:29:05,425:INFO:self.USI: 23a5
2024-02-04 21:29:05,425:INFO:self._variable_keys: {'memory', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'exp_id', 'pipeline', 'y', 'html_param', 'X', 'USI', 'X_train', 'seed', 'gpu_param', 'logging_param', '_available_plots', 'y_test', 'X_test', 'fold_generator', 'fold_shuffle_param', 'fix_imbalance', 'fold_groups_param', 'n_jobs_param', 'target_param', 'log_plots_param', 'exp_name_log', 'is_multiclass', 'idx', 'data'}
2024-02-04 21:29:05,425:INFO:Checking environment
2024-02-04 21:29:05,425:INFO:python_version: 3.11.7
2024-02-04 21:29:05,425:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 21:29:05,425:INFO:machine: AMD64
2024-02-04 21:29:05,433:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 21:29:05,436:INFO:Memory: svmem(total=16892026880, available=5037019136, percent=70.2, used=11855007744, free=5037019136)
2024-02-04 21:29:05,436:INFO:Physical Core: 12
2024-02-04 21:29:05,436:INFO:Logical Core: 16
2024-02-04 21:29:05,436:INFO:Checking libraries
2024-02-04 21:29:05,436:INFO:System:
2024-02-04 21:29:05,436:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 21:29:05,436:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 21:29:05,436:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 21:29:05,436:INFO:PyCaret required dependencies:
2024-02-04 21:29:05,466:INFO:                 pip: 23.3.2
2024-02-04 21:29:05,466:INFO:          setuptools: 65.5.0
2024-02-04 21:29:05,466:INFO:             pycaret: 3.2.0
2024-02-04 21:29:05,466:INFO:             IPython: 8.20.0
2024-02-04 21:29:05,466:INFO:          ipywidgets: 8.1.1
2024-02-04 21:29:05,466:INFO:                tqdm: 4.66.1
2024-02-04 21:29:05,466:INFO:               numpy: 1.25.2
2024-02-04 21:29:05,466:INFO:              pandas: 1.5.3
2024-02-04 21:29:05,466:INFO:              jinja2: 3.1.3
2024-02-04 21:29:05,466:INFO:               scipy: 1.10.1
2024-02-04 21:29:05,466:INFO:              joblib: 1.3.2
2024-02-04 21:29:05,466:INFO:             sklearn: 1.2.2
2024-02-04 21:29:05,466:INFO:                pyod: 1.1.2
2024-02-04 21:29:05,466:INFO:            imblearn: 0.12.0
2024-02-04 21:29:05,466:INFO:   category_encoders: 2.6.3
2024-02-04 21:29:05,466:INFO:            lightgbm: 4.3.0
2024-02-04 21:29:05,466:INFO:               numba: 0.58.1
2024-02-04 21:29:05,466:INFO:            requests: 2.31.0
2024-02-04 21:29:05,466:INFO:          matplotlib: 3.6.0
2024-02-04 21:29:05,466:INFO:          scikitplot: 0.3.7
2024-02-04 21:29:05,466:INFO:         yellowbrick: 1.5
2024-02-04 21:29:05,466:INFO:              plotly: 5.18.0
2024-02-04 21:29:05,466:INFO:    plotly-resampler: Not installed
2024-02-04 21:29:05,466:INFO:             kaleido: 0.2.1
2024-02-04 21:29:05,466:INFO:           schemdraw: 0.15
2024-02-04 21:29:05,466:INFO:         statsmodels: 0.14.1
2024-02-04 21:29:05,466:INFO:              sktime: 0.21.1
2024-02-04 21:29:05,466:INFO:               tbats: 1.1.3
2024-02-04 21:29:05,466:INFO:            pmdarima: 2.0.4
2024-02-04 21:29:05,466:INFO:              psutil: 5.9.8
2024-02-04 21:29:05,466:INFO:          markupsafe: 2.1.4
2024-02-04 21:29:05,466:INFO:             pickle5: Not installed
2024-02-04 21:29:05,466:INFO:         cloudpickle: 3.0.0
2024-02-04 21:29:05,466:INFO:         deprecation: 2.1.0
2024-02-04 21:29:05,466:INFO:              xxhash: 3.4.1
2024-02-04 21:29:05,466:INFO:           wurlitzer: Not installed
2024-02-04 21:29:05,466:INFO:PyCaret optional dependencies:
2024-02-04 21:29:05,495:INFO:                shap: 0.44.1
2024-02-04 21:29:05,496:INFO:           interpret: Not installed
2024-02-04 21:29:05,496:INFO:                umap: Not installed
2024-02-04 21:29:05,496:INFO:     ydata_profiling: Not installed
2024-02-04 21:29:05,496:INFO:  explainerdashboard: Not installed
2024-02-04 21:29:05,496:INFO:             autoviz: Not installed
2024-02-04 21:29:05,496:INFO:           fairlearn: Not installed
2024-02-04 21:29:05,496:INFO:          deepchecks: Not installed
2024-02-04 21:29:05,496:INFO:             xgboost: 2.0.3
2024-02-04 21:29:05,496:INFO:            catboost: 1.2.2
2024-02-04 21:29:05,496:INFO:              kmodes: Not installed
2024-02-04 21:29:05,496:INFO:             mlxtend: Not installed
2024-02-04 21:29:05,496:INFO:       statsforecast: Not installed
2024-02-04 21:29:05,496:INFO:        tune_sklearn: Not installed
2024-02-04 21:29:05,496:INFO:                 ray: Not installed
2024-02-04 21:29:05,496:INFO:            hyperopt: Not installed
2024-02-04 21:29:05,496:INFO:              optuna: Not installed
2024-02-04 21:29:05,496:INFO:               skopt: Not installed
2024-02-04 21:29:05,496:INFO:              mlflow: Not installed
2024-02-04 21:29:05,496:INFO:              gradio: Not installed
2024-02-04 21:29:05,496:INFO:             fastapi: Not installed
2024-02-04 21:29:05,496:INFO:             uvicorn: Not installed
2024-02-04 21:29:05,496:INFO:              m2cgen: Not installed
2024-02-04 21:29:05,496:INFO:           evidently: Not installed
2024-02-04 21:29:05,496:INFO:               fugue: Not installed
2024-02-04 21:29:05,496:INFO:           streamlit: Not installed
2024-02-04 21:29:05,496:INFO:             prophet: 1.1.5
2024-02-04 21:29:05,496:INFO:None
2024-02-04 21:29:05,496:INFO:Set up data.
2024-02-04 21:29:05,500:INFO:Set up folding strategy.
2024-02-04 21:29:05,500:INFO:Set up train/test split.
2024-02-04 21:29:05,502:INFO:Set up index.
2024-02-04 21:29:05,502:INFO:Assigning column types.
2024-02-04 21:29:05,503:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 21:29:05,526:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 21:29:05,528:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:29:05,547:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:29:05,548:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:29:05,586:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 21:29:05,586:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:29:05,602:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:29:05,603:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:29:05,603:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 21:29:05,628:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:29:05,643:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:29:05,644:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:29:05,669:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:29:05,746:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:29:05,748:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:29:05,748:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 21:29:05,786:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:29:05,789:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:29:05,826:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:29:05,828:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:29:05,829:INFO:Preparing preprocessing pipeline...
2024-02-04 21:29:05,831:INFO:Set up label encoding.
2024-02-04 21:29:05,831:INFO:Set up simple imputation.
2024-02-04 21:29:05,843:INFO:Finished creating preprocessing pipeline.
2024-02-04 21:29:05,846:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 21:29:05,846:INFO:Creating final display dataframe.
2024-02-04 21:29:05,886:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  23a5
2024-02-04 21:29:05,930:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:29:05,931:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:29:05,971:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:29:05,973:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:29:05,974:INFO:setup() successfully completed in 0.55s...............
2024-02-04 21:29:05,974:INFO:Initializing create_model()
2024-02-04 21:29:05,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E4E197A90>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 21:29:05,974:INFO:Checking exceptions
2024-02-04 21:29:05,977:INFO:Importing libraries
2024-02-04 21:29:05,977:INFO:Copying training dataset
2024-02-04 21:29:05,979:INFO:Defining folds
2024-02-04 21:29:05,980:INFO:Declaring metric variables
2024-02-04 21:29:05,980:INFO:Importing untrained model
2024-02-04 21:29:05,980:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 21:29:05,980:INFO:Starting cross validation
2024-02-04 21:29:05,981:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 21:29:08,908:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:08,911:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:08,913:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,107:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,110:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,111:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,188:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,190:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,191:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,194:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,196:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,196:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,208:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,212:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,213:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:29:09,225:INFO:Calculating mean and std
2024-02-04 21:29:09,225:INFO:Creating metrics dataframe
2024-02-04 21:29:09,228:INFO:Finalizing model
2024-02-04 21:29:09,283:INFO:Uploading results into container
2024-02-04 21:29:09,284:INFO:Uploading model into container now
2024-02-04 21:29:09,292:INFO:_master_model_container: 1
2024-02-04 21:29:09,292:INFO:_display_container: 2
2024-02-04 21:29:09,293:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 21:29:09,293:INFO:create_model() successfully completed......................................
2024-02-04 21:29:09,364:INFO:Initializing predict_model()
2024-02-04 21:29:09,365:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E4E197A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023E28096480>)
2024-02-04 21:29:09,365:INFO:Checking exceptions
2024-02-04 21:29:09,365:INFO:Preloading libraries
2024-02-04 21:29:09,365:INFO:Set up data.
2024-02-04 21:29:09,368:INFO:Set up index.
2024-02-04 21:29:09,460:INFO:Initializing plot_model()
2024-02-04 21:29:09,460:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E4E197A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:29:09,460:INFO:Checking exceptions
2024-02-04 21:29:09,463:INFO:Preloading libraries
2024-02-04 21:29:09,467:INFO:Copying training dataset
2024-02-04 21:29:09,467:INFO:Plot type: auc
2024-02-04 21:29:09,547:INFO:Fitting Model
2024-02-04 21:29:09,547:INFO:Scoring test/hold-out set
2024-02-04 21:29:09,562:INFO:Saving 'AUC.png'
2024-02-04 21:29:09,697:INFO:Visual Rendered Successfully
2024-02-04 21:29:09,762:INFO:plot_model() successfully completed......................................
2024-02-04 21:29:09,763:INFO:Initializing plot_model()
2024-02-04 21:29:09,763:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E4E197A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:29:09,763:INFO:Checking exceptions
2024-02-04 21:29:09,764:INFO:Preloading libraries
2024-02-04 21:29:09,770:INFO:Copying training dataset
2024-02-04 21:29:09,770:INFO:Plot type: confusion_matrix
2024-02-04 21:29:09,819:INFO:Fitting Model
2024-02-04 21:29:09,820:INFO:Scoring test/hold-out set
2024-02-04 21:29:09,830:INFO:Saving 'Confusion Matrix.png'
2024-02-04 21:29:09,902:INFO:Visual Rendered Successfully
2024-02-04 21:29:09,960:INFO:plot_model() successfully completed......................................
2024-02-04 21:29:09,961:INFO:Initializing plot_model()
2024-02-04 21:29:09,961:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E4E197A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:29:09,961:INFO:Checking exceptions
2024-02-04 21:29:09,962:INFO:Preloading libraries
2024-02-04 21:29:09,966:INFO:Copying training dataset
2024-02-04 21:29:09,966:INFO:Plot type: feature
2024-02-04 21:29:09,966:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 21:29:09,990:INFO:Saving 'Feature Importance.png'
2024-02-04 21:29:10,064:INFO:Visual Rendered Successfully
2024-02-04 21:29:10,123:INFO:plot_model() successfully completed......................................
2024-02-04 21:29:10,123:INFO:Initializing interpret_model()
2024-02-04 21:29:10,123:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023E4E197A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 21:29:10,123:INFO:Checking exceptions
2024-02-04 21:29:10,123:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 21:29:10,375:INFO:plot type: summary
2024-02-04 21:29:10,376:INFO:Creating TreeExplainer
2024-02-04 21:29:10,394:INFO:Compiling shap values
2024-02-04 21:29:10,463:INFO:Saving 'SHAP summary.png'
2024-02-04 21:29:10,560:INFO:Visual Rendered Successfully
2024-02-04 21:29:10,560:INFO:interpret_model() successfully completed......................................
2024-02-04 21:55:05,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:55:05,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:55:05,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:55:05,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 21:55:06,053:INFO:PyCaret ClassificationExperiment
2024-02-04 21:55:06,053:INFO:Logging name: clf-default-name
2024-02-04 21:55:06,053:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 21:55:06,053:INFO:version 3.2.0
2024-02-04 21:55:06,053:INFO:Initializing setup()
2024-02-04 21:55:06,053:INFO:self.USI: dcf4
2024-02-04 21:55:06,053:INFO:self._variable_keys: {'X_test', 'pipeline', 'exp_name_log', 'y', 'X', 'idx', 'html_param', '_available_plots', '_ml_usecase', 'logging_param', 'target_param', 'y_test', 'fix_imbalance', 'USI', 'fold_shuffle_param', 'memory', 'X_train', 'exp_id', 'seed', 'is_multiclass', 'gpu_param', 'gpu_n_jobs_param', 'fold_groups_param', 'fold_generator', 'data', 'log_plots_param', 'y_train', 'n_jobs_param'}
2024-02-04 21:55:06,053:INFO:Checking environment
2024-02-04 21:55:06,053:INFO:python_version: 3.11.7
2024-02-04 21:55:06,053:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 21:55:06,053:INFO:machine: AMD64
2024-02-04 21:55:06,061:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 21:55:06,065:INFO:Memory: svmem(total=16892026880, available=4817784832, percent=71.5, used=12074242048, free=4817784832)
2024-02-04 21:55:06,065:INFO:Physical Core: 12
2024-02-04 21:55:06,065:INFO:Logical Core: 16
2024-02-04 21:55:06,065:INFO:Checking libraries
2024-02-04 21:55:06,065:INFO:System:
2024-02-04 21:55:06,065:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 21:55:06,065:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 21:55:06,065:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 21:55:06,065:INFO:PyCaret required dependencies:
2024-02-04 21:55:06,094:INFO:                 pip: 23.3.2
2024-02-04 21:55:06,094:INFO:          setuptools: 65.5.0
2024-02-04 21:55:06,094:INFO:             pycaret: 3.2.0
2024-02-04 21:55:06,094:INFO:             IPython: 8.20.0
2024-02-04 21:55:06,094:INFO:          ipywidgets: 8.1.1
2024-02-04 21:55:06,094:INFO:                tqdm: 4.66.1
2024-02-04 21:55:06,094:INFO:               numpy: 1.25.2
2024-02-04 21:55:06,094:INFO:              pandas: 1.5.3
2024-02-04 21:55:06,094:INFO:              jinja2: 3.1.3
2024-02-04 21:55:06,094:INFO:               scipy: 1.10.1
2024-02-04 21:55:06,094:INFO:              joblib: 1.3.2
2024-02-04 21:55:06,094:INFO:             sklearn: 1.2.2
2024-02-04 21:55:06,094:INFO:                pyod: 1.1.2
2024-02-04 21:55:06,094:INFO:            imblearn: 0.12.0
2024-02-04 21:55:06,094:INFO:   category_encoders: 2.6.3
2024-02-04 21:55:06,094:INFO:            lightgbm: 4.3.0
2024-02-04 21:55:06,094:INFO:               numba: 0.58.1
2024-02-04 21:55:06,094:INFO:            requests: 2.31.0
2024-02-04 21:55:06,094:INFO:          matplotlib: 3.6.0
2024-02-04 21:55:06,094:INFO:          scikitplot: 0.3.7
2024-02-04 21:55:06,094:INFO:         yellowbrick: 1.5
2024-02-04 21:55:06,094:INFO:              plotly: 5.18.0
2024-02-04 21:55:06,094:INFO:    plotly-resampler: Not installed
2024-02-04 21:55:06,094:INFO:             kaleido: 0.2.1
2024-02-04 21:55:06,094:INFO:           schemdraw: 0.15
2024-02-04 21:55:06,094:INFO:         statsmodels: 0.14.1
2024-02-04 21:55:06,094:INFO:              sktime: 0.21.1
2024-02-04 21:55:06,094:INFO:               tbats: 1.1.3
2024-02-04 21:55:06,094:INFO:            pmdarima: 2.0.4
2024-02-04 21:55:06,094:INFO:              psutil: 5.9.8
2024-02-04 21:55:06,094:INFO:          markupsafe: 2.1.4
2024-02-04 21:55:06,094:INFO:             pickle5: Not installed
2024-02-04 21:55:06,094:INFO:         cloudpickle: 3.0.0
2024-02-04 21:55:06,094:INFO:         deprecation: 2.1.0
2024-02-04 21:55:06,094:INFO:              xxhash: 3.4.1
2024-02-04 21:55:06,094:INFO:           wurlitzer: Not installed
2024-02-04 21:55:06,094:INFO:PyCaret optional dependencies:
2024-02-04 21:55:06,122:INFO:                shap: 0.44.1
2024-02-04 21:55:06,122:INFO:           interpret: Not installed
2024-02-04 21:55:06,122:INFO:                umap: Not installed
2024-02-04 21:55:06,122:INFO:     ydata_profiling: Not installed
2024-02-04 21:55:06,122:INFO:  explainerdashboard: Not installed
2024-02-04 21:55:06,122:INFO:             autoviz: Not installed
2024-02-04 21:55:06,122:INFO:           fairlearn: Not installed
2024-02-04 21:55:06,122:INFO:          deepchecks: Not installed
2024-02-04 21:55:06,122:INFO:             xgboost: 2.0.3
2024-02-04 21:55:06,123:INFO:            catboost: 1.2.2
2024-02-04 21:55:06,123:INFO:              kmodes: Not installed
2024-02-04 21:55:06,123:INFO:             mlxtend: Not installed
2024-02-04 21:55:06,123:INFO:       statsforecast: Not installed
2024-02-04 21:55:06,123:INFO:        tune_sklearn: Not installed
2024-02-04 21:55:06,123:INFO:                 ray: Not installed
2024-02-04 21:55:06,123:INFO:            hyperopt: Not installed
2024-02-04 21:55:06,123:INFO:              optuna: Not installed
2024-02-04 21:55:06,123:INFO:               skopt: Not installed
2024-02-04 21:55:06,123:INFO:              mlflow: Not installed
2024-02-04 21:55:06,123:INFO:              gradio: Not installed
2024-02-04 21:55:06,123:INFO:             fastapi: Not installed
2024-02-04 21:55:06,123:INFO:             uvicorn: Not installed
2024-02-04 21:55:06,123:INFO:              m2cgen: Not installed
2024-02-04 21:55:06,123:INFO:           evidently: Not installed
2024-02-04 21:55:06,123:INFO:               fugue: Not installed
2024-02-04 21:55:06,123:INFO:           streamlit: Not installed
2024-02-04 21:55:06,123:INFO:             prophet: 1.1.5
2024-02-04 21:55:06,123:INFO:None
2024-02-04 21:55:06,123:INFO:Set up data.
2024-02-04 21:55:06,126:INFO:Set up folding strategy.
2024-02-04 21:55:06,126:INFO:Set up train/test split.
2024-02-04 21:55:06,129:INFO:Set up index.
2024-02-04 21:55:06,129:INFO:Assigning column types.
2024-02-04 21:55:06,130:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 21:55:06,153:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 21:55:06,154:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:55:06,173:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:55:06,174:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:55:06,211:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 21:55:06,212:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:55:06,227:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:55:06,229:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:55:06,229:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 21:55:06,252:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:55:06,267:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:55:06,269:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:55:06,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 21:55:06,365:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:55:06,367:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:55:06,367:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 21:55:06,405:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:55:06,407:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:55:06,445:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:55:06,447:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:55:06,448:INFO:Preparing preprocessing pipeline...
2024-02-04 21:55:06,449:INFO:Set up label encoding.
2024-02-04 21:55:06,450:INFO:Set up simple imputation.
2024-02-04 21:55:06,463:INFO:Finished creating preprocessing pipeline.
2024-02-04 21:55:06,466:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 21:55:06,466:INFO:Creating final display dataframe.
2024-02-04 21:55:06,504:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  dcf4
2024-02-04 21:55:06,545:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:55:06,547:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:55:06,585:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 21:55:06,587:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 21:55:06,587:INFO:setup() successfully completed in 0.54s...............
2024-02-04 21:55:06,587:INFO:Initializing create_model()
2024-02-04 21:55:06,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1419F4890>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 21:55:06,587:INFO:Checking exceptions
2024-02-04 21:55:06,589:INFO:Importing libraries
2024-02-04 21:55:06,589:INFO:Copying training dataset
2024-02-04 21:55:06,592:INFO:Defining folds
2024-02-04 21:55:06,592:INFO:Declaring metric variables
2024-02-04 21:55:06,592:INFO:Importing untrained model
2024-02-04 21:55:06,592:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 21:55:06,592:INFO:Starting cross validation
2024-02-04 21:55:06,592:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 21:55:09,337:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,338:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,339:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,409:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,411:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,412:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,469:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,471:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,472:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,474:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,475:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,476:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,476:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,477:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,478:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 21:55:09,484:INFO:Calculating mean and std
2024-02-04 21:55:09,485:INFO:Creating metrics dataframe
2024-02-04 21:55:09,487:INFO:Finalizing model
2024-02-04 21:55:09,534:INFO:Uploading results into container
2024-02-04 21:55:09,534:INFO:Uploading model into container now
2024-02-04 21:55:09,539:INFO:_master_model_container: 1
2024-02-04 21:55:09,539:INFO:_display_container: 2
2024-02-04 21:55:09,540:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 21:55:09,541:INFO:create_model() successfully completed......................................
2024-02-04 21:55:09,604:INFO:Initializing predict_model()
2024-02-04 21:55:09,604:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1419F4890>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E13EAC6480>)
2024-02-04 21:55:09,604:INFO:Checking exceptions
2024-02-04 21:55:09,605:INFO:Preloading libraries
2024-02-04 21:55:09,605:INFO:Set up data.
2024-02-04 21:55:09,607:INFO:Set up index.
2024-02-04 21:55:09,684:INFO:Initializing plot_model()
2024-02-04 21:55:09,684:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1419F4890>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:55:09,684:INFO:Checking exceptions
2024-02-04 21:55:09,687:INFO:Preloading libraries
2024-02-04 21:55:09,691:INFO:Copying training dataset
2024-02-04 21:55:09,691:INFO:Plot type: auc
2024-02-04 21:55:09,764:INFO:Fitting Model
2024-02-04 21:55:09,764:INFO:Scoring test/hold-out set
2024-02-04 21:55:09,780:INFO:Saving 'AUC.png'
2024-02-04 21:55:09,909:INFO:Visual Rendered Successfully
2024-02-04 21:55:09,968:INFO:plot_model() successfully completed......................................
2024-02-04 21:55:09,968:INFO:Initializing plot_model()
2024-02-04 21:55:09,968:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1419F4890>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:55:09,968:INFO:Checking exceptions
2024-02-04 21:55:09,970:INFO:Preloading libraries
2024-02-04 21:55:09,976:INFO:Copying training dataset
2024-02-04 21:55:09,976:INFO:Plot type: confusion_matrix
2024-02-04 21:55:10,020:INFO:Fitting Model
2024-02-04 21:55:10,022:INFO:Scoring test/hold-out set
2024-02-04 21:55:10,032:INFO:Saving 'Confusion Matrix.png'
2024-02-04 21:55:10,099:INFO:Visual Rendered Successfully
2024-02-04 21:55:10,157:INFO:plot_model() successfully completed......................................
2024-02-04 21:55:10,158:INFO:Initializing plot_model()
2024-02-04 21:55:10,158:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1419F4890>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 21:55:10,158:INFO:Checking exceptions
2024-02-04 21:55:10,159:INFO:Preloading libraries
2024-02-04 21:55:10,162:INFO:Copying training dataset
2024-02-04 21:55:10,163:INFO:Plot type: feature
2024-02-04 21:55:10,163:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 21:55:10,187:INFO:Saving 'Feature Importance.png'
2024-02-04 21:55:10,263:INFO:Visual Rendered Successfully
2024-02-04 21:55:10,320:INFO:plot_model() successfully completed......................................
2024-02-04 21:55:10,320:INFO:Initializing interpret_model()
2024-02-04 21:55:10,320:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1419F4890>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 21:55:10,320:INFO:Checking exceptions
2024-02-04 21:55:10,320:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 21:55:10,546:INFO:plot type: summary
2024-02-04 21:55:10,546:INFO:Creating TreeExplainer
2024-02-04 21:55:10,565:INFO:Compiling shap values
2024-02-04 21:55:10,629:INFO:Saving 'SHAP summary.png'
2024-02-04 21:55:10,723:INFO:Visual Rendered Successfully
2024-02-04 21:55:10,723:INFO:interpret_model() successfully completed......................................
2024-02-04 22:49:48,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:49:48,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:49:48,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:49:48,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:49:48,848:INFO:PyCaret ClassificationExperiment
2024-02-04 22:49:48,848:INFO:Logging name: clf-default-name
2024-02-04 22:49:48,849:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 22:49:48,849:INFO:version 3.2.0
2024-02-04 22:49:48,849:INFO:Initializing setup()
2024-02-04 22:49:48,849:INFO:self.USI: 869f
2024-02-04 22:49:48,849:INFO:self._variable_keys: {'X_test', 'gpu_param', 'y', 'target_param', 'memory', 'exp_name_log', 'X_train', 'fold_groups_param', 'exp_id', 'fold_generator', 'html_param', 'idx', 'gpu_n_jobs_param', 'seed', 'fold_shuffle_param', 'logging_param', 'pipeline', 'USI', 'data', '_available_plots', 'X', 'y_test', 'log_plots_param', '_ml_usecase', 'y_train', 'is_multiclass', 'fix_imbalance', 'n_jobs_param'}
2024-02-04 22:49:48,849:INFO:Checking environment
2024-02-04 22:49:48,849:INFO:python_version: 3.11.7
2024-02-04 22:49:48,849:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 22:49:48,849:INFO:machine: AMD64
2024-02-04 22:49:48,858:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 22:49:48,862:INFO:Memory: svmem(total=16892026880, available=4553265152, percent=73.0, used=12338761728, free=4553265152)
2024-02-04 22:49:48,862:INFO:Physical Core: 12
2024-02-04 22:49:48,862:INFO:Logical Core: 16
2024-02-04 22:49:48,862:INFO:Checking libraries
2024-02-04 22:49:48,862:INFO:System:
2024-02-04 22:49:48,862:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 22:49:48,862:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 22:49:48,862:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 22:49:48,862:INFO:PyCaret required dependencies:
2024-02-04 22:49:48,890:INFO:                 pip: 23.3.2
2024-02-04 22:49:48,890:INFO:          setuptools: 65.5.0
2024-02-04 22:49:48,890:INFO:             pycaret: 3.2.0
2024-02-04 22:49:48,890:INFO:             IPython: 8.20.0
2024-02-04 22:49:48,890:INFO:          ipywidgets: 8.1.1
2024-02-04 22:49:48,890:INFO:                tqdm: 4.66.1
2024-02-04 22:49:48,890:INFO:               numpy: 1.25.2
2024-02-04 22:49:48,890:INFO:              pandas: 1.5.3
2024-02-04 22:49:48,890:INFO:              jinja2: 3.1.3
2024-02-04 22:49:48,890:INFO:               scipy: 1.10.1
2024-02-04 22:49:48,890:INFO:              joblib: 1.3.2
2024-02-04 22:49:48,890:INFO:             sklearn: 1.2.2
2024-02-04 22:49:48,890:INFO:                pyod: 1.1.2
2024-02-04 22:49:48,890:INFO:            imblearn: 0.12.0
2024-02-04 22:49:48,890:INFO:   category_encoders: 2.6.3
2024-02-04 22:49:48,891:INFO:            lightgbm: 4.3.0
2024-02-04 22:49:48,891:INFO:               numba: 0.58.1
2024-02-04 22:49:48,891:INFO:            requests: 2.31.0
2024-02-04 22:49:48,891:INFO:          matplotlib: 3.6.0
2024-02-04 22:49:48,891:INFO:          scikitplot: 0.3.7
2024-02-04 22:49:48,891:INFO:         yellowbrick: 1.5
2024-02-04 22:49:48,891:INFO:              plotly: 5.18.0
2024-02-04 22:49:48,891:INFO:    plotly-resampler: Not installed
2024-02-04 22:49:48,891:INFO:             kaleido: 0.2.1
2024-02-04 22:49:48,891:INFO:           schemdraw: 0.15
2024-02-04 22:49:48,891:INFO:         statsmodels: 0.14.1
2024-02-04 22:49:48,891:INFO:              sktime: 0.21.1
2024-02-04 22:49:48,891:INFO:               tbats: 1.1.3
2024-02-04 22:49:48,891:INFO:            pmdarima: 2.0.4
2024-02-04 22:49:48,891:INFO:              psutil: 5.9.8
2024-02-04 22:49:48,891:INFO:          markupsafe: 2.1.4
2024-02-04 22:49:48,891:INFO:             pickle5: Not installed
2024-02-04 22:49:48,891:INFO:         cloudpickle: 3.0.0
2024-02-04 22:49:48,891:INFO:         deprecation: 2.1.0
2024-02-04 22:49:48,891:INFO:              xxhash: 3.4.1
2024-02-04 22:49:48,891:INFO:           wurlitzer: Not installed
2024-02-04 22:49:48,891:INFO:PyCaret optional dependencies:
2024-02-04 22:49:48,917:INFO:                shap: 0.44.1
2024-02-04 22:49:48,917:INFO:           interpret: Not installed
2024-02-04 22:49:48,917:INFO:                umap: Not installed
2024-02-04 22:49:48,917:INFO:     ydata_profiling: Not installed
2024-02-04 22:49:48,917:INFO:  explainerdashboard: Not installed
2024-02-04 22:49:48,917:INFO:             autoviz: Not installed
2024-02-04 22:49:48,917:INFO:           fairlearn: Not installed
2024-02-04 22:49:48,917:INFO:          deepchecks: Not installed
2024-02-04 22:49:48,919:INFO:             xgboost: 2.0.3
2024-02-04 22:49:48,919:INFO:            catboost: 1.2.2
2024-02-04 22:49:48,919:INFO:              kmodes: Not installed
2024-02-04 22:49:48,919:INFO:             mlxtend: Not installed
2024-02-04 22:49:48,919:INFO:       statsforecast: Not installed
2024-02-04 22:49:48,919:INFO:        tune_sklearn: Not installed
2024-02-04 22:49:48,919:INFO:                 ray: Not installed
2024-02-04 22:49:48,919:INFO:            hyperopt: Not installed
2024-02-04 22:49:48,919:INFO:              optuna: Not installed
2024-02-04 22:49:48,919:INFO:               skopt: Not installed
2024-02-04 22:49:48,919:INFO:              mlflow: Not installed
2024-02-04 22:49:48,919:INFO:              gradio: Not installed
2024-02-04 22:49:48,919:INFO:             fastapi: Not installed
2024-02-04 22:49:48,919:INFO:             uvicorn: Not installed
2024-02-04 22:49:48,919:INFO:              m2cgen: Not installed
2024-02-04 22:49:48,919:INFO:           evidently: Not installed
2024-02-04 22:49:48,919:INFO:               fugue: Not installed
2024-02-04 22:49:48,919:INFO:           streamlit: Not installed
2024-02-04 22:49:48,919:INFO:             prophet: 1.1.5
2024-02-04 22:49:48,919:INFO:None
2024-02-04 22:49:48,919:INFO:Set up data.
2024-02-04 22:49:48,922:INFO:Set up folding strategy.
2024-02-04 22:49:48,922:INFO:Set up train/test split.
2024-02-04 22:49:48,924:INFO:Set up index.
2024-02-04 22:49:48,925:INFO:Assigning column types.
2024-02-04 22:49:48,926:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 22:49:48,950:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 22:49:48,951:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:49:48,970:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:49:48,972:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:49:49,008:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 22:49:49,008:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:49:49,025:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:49:49,025:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:49:49,027:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 22:49:49,050:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:49:49,064:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:49:49,066:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:49:49,089:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:49:49,162:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:49:49,164:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:49:49,164:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 22:49:49,202:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:49:49,203:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:49:49,242:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:49:49,243:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:49:49,245:INFO:Preparing preprocessing pipeline...
2024-02-04 22:49:49,245:INFO:Set up label encoding.
2024-02-04 22:49:49,246:INFO:Set up simple imputation.
2024-02-04 22:49:49,258:INFO:Finished creating preprocessing pipeline.
2024-02-04 22:49:49,261:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 22:49:49,261:INFO:Creating final display dataframe.
2024-02-04 22:49:49,298:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                    31
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  869f
2024-02-04 22:49:49,343:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:49:49,344:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:49:49,384:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:49:49,385:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:49:49,386:INFO:setup() successfully completed in 0.54s...............
2024-02-04 22:49:49,386:INFO:Initializing create_model()
2024-02-04 22:49:49,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A2DE57A90>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:49:49,386:INFO:Checking exceptions
2024-02-04 22:49:49,388:INFO:Importing libraries
2024-02-04 22:49:49,388:INFO:Copying training dataset
2024-02-04 22:49:49,390:INFO:Defining folds
2024-02-04 22:49:49,390:INFO:Declaring metric variables
2024-02-04 22:49:49,390:INFO:Importing untrained model
2024-02-04 22:49:49,390:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 22:49:49,390:INFO:Starting cross validation
2024-02-04 22:49:49,391:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:49:53,711:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,714:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,717:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,728:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,731:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,733:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,764:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,768:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,771:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,790:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,793:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,795:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,809:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,812:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,814:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,834:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,837:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,838:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:49:53,841:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,848:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,851:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,854:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,890:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,890:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,893:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,893:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,895:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,895:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,899:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,900:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,902:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,903:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,904:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,907:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,919:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,921:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,924:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,939:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,939:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,942:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,943:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,944:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,946:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,946:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,948:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,948:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,952:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,955:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,957:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,959:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:49:53,960:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,972:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,974:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,977:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,987:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,988:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,990:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,991:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,992:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:53,993:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,000:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,002:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,004:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,377:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,378:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,379:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,424:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,427:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,430:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,613:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,614:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,616:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,635:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,636:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,637:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,637:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,639:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,640:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,640:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,642:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,642:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,675:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,677:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,680:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,690:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,692:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,693:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,694:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,695:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,696:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,699:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,700:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,702:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:49:54,708:INFO:Calculating mean and std
2024-02-04 22:49:54,709:INFO:Creating metrics dataframe
2024-02-04 22:49:54,711:INFO:Finalizing model
2024-02-04 22:49:54,778:INFO:Uploading results into container
2024-02-04 22:49:54,779:INFO:Uploading model into container now
2024-02-04 22:49:54,794:INFO:_master_model_container: 1
2024-02-04 22:49:54,794:INFO:_display_container: 2
2024-02-04 22:49:54,795:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 22:49:54,795:INFO:create_model() successfully completed......................................
2024-02-04 22:49:54,864:INFO:Initializing predict_model()
2024-02-04 22:49:54,864:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A2DE57A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A7FD56480>)
2024-02-04 22:49:54,864:INFO:Checking exceptions
2024-02-04 22:49:54,864:INFO:Preloading libraries
2024-02-04 22:49:54,864:INFO:Set up data.
2024-02-04 22:49:54,867:INFO:Set up index.
2024-02-04 22:49:54,952:INFO:Initializing plot_model()
2024-02-04 22:49:54,952:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A2DE57A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 22:49:54,952:INFO:Checking exceptions
2024-02-04 22:49:54,956:INFO:Preloading libraries
2024-02-04 22:49:54,960:INFO:Copying training dataset
2024-02-04 22:49:54,960:INFO:Plot type: auc
2024-02-04 22:49:55,064:INFO:Fitting Model
2024-02-04 22:49:55,064:INFO:Scoring test/hold-out set
2024-02-04 22:49:55,079:INFO:Saving 'AUC.png'
2024-02-04 22:49:55,212:INFO:Visual Rendered Successfully
2024-02-04 22:49:55,267:INFO:plot_model() successfully completed......................................
2024-02-04 22:49:55,269:INFO:Initializing plot_model()
2024-02-04 22:49:55,269:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A2DE57A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 22:49:55,269:INFO:Checking exceptions
2024-02-04 22:49:55,270:INFO:Preloading libraries
2024-02-04 22:49:55,277:INFO:Copying training dataset
2024-02-04 22:49:55,277:INFO:Plot type: confusion_matrix
2024-02-04 22:49:55,342:INFO:Fitting Model
2024-02-04 22:49:55,343:INFO:Scoring test/hold-out set
2024-02-04 22:49:55,359:INFO:Saving 'Confusion Matrix.png'
2024-02-04 22:49:55,437:INFO:Visual Rendered Successfully
2024-02-04 22:49:55,491:INFO:plot_model() successfully completed......................................
2024-02-04 22:49:55,492:INFO:Initializing plot_model()
2024-02-04 22:49:55,492:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A2DE57A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 22:49:55,492:INFO:Checking exceptions
2024-02-04 22:49:55,493:INFO:Preloading libraries
2024-02-04 22:49:55,497:INFO:Copying training dataset
2024-02-04 22:49:55,497:INFO:Plot type: feature
2024-02-04 22:49:55,497:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 22:49:55,522:INFO:Saving 'Feature Importance.png'
2024-02-04 22:49:55,602:INFO:Visual Rendered Successfully
2024-02-04 22:49:55,661:INFO:plot_model() successfully completed......................................
2024-02-04 22:49:55,662:INFO:Initializing interpret_model()
2024-02-04 22:49:55,662:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A2DE57A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 22:49:55,662:INFO:Checking exceptions
2024-02-04 22:49:55,662:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 22:49:55,902:INFO:plot type: summary
2024-02-04 22:49:55,902:INFO:Creating TreeExplainer
2024-02-04 22:49:55,917:INFO:Compiling shap values
2024-02-04 22:49:55,980:INFO:Saving 'SHAP summary.png'
2024-02-04 22:49:56,078:INFO:Visual Rendered Successfully
2024-02-04 22:49:56,078:INFO:interpret_model() successfully completed......................................
2024-02-04 22:55:12,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:55:12,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:55:12,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:55:12,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:55:12,923:INFO:PyCaret ClassificationExperiment
2024-02-04 22:55:12,923:INFO:Logging name: clf-default-name
2024-02-04 22:55:12,923:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 22:55:12,923:INFO:version 3.2.0
2024-02-04 22:55:12,923:INFO:Initializing setup()
2024-02-04 22:55:12,923:INFO:self.USI: b028
2024-02-04 22:55:12,923:INFO:self._variable_keys: {'data', 'y', 'target_param', 'logging_param', 'seed', 'gpu_param', 'fold_generator', '_ml_usecase', 'X', 'n_jobs_param', 'pipeline', 'fix_imbalance', 'X_train', 'USI', 'gpu_n_jobs_param', '_available_plots', 'fold_shuffle_param', 'log_plots_param', 'is_multiclass', 'X_test', 'idx', 'fold_groups_param', 'y_train', 'html_param', 'y_test', 'exp_name_log', 'memory', 'exp_id'}
2024-02-04 22:55:12,924:INFO:Checking environment
2024-02-04 22:55:12,924:INFO:python_version: 3.11.7
2024-02-04 22:55:12,924:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 22:55:12,924:INFO:machine: AMD64
2024-02-04 22:55:12,934:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 22:55:12,938:INFO:Memory: svmem(total=16892026880, available=4453732352, percent=73.6, used=12438294528, free=4453732352)
2024-02-04 22:55:12,938:INFO:Physical Core: 12
2024-02-04 22:55:12,938:INFO:Logical Core: 16
2024-02-04 22:55:12,938:INFO:Checking libraries
2024-02-04 22:55:12,938:INFO:System:
2024-02-04 22:55:12,938:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 22:55:12,938:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 22:55:12,938:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 22:55:12,938:INFO:PyCaret required dependencies:
2024-02-04 22:55:12,968:INFO:                 pip: 23.3.2
2024-02-04 22:55:12,968:INFO:          setuptools: 65.5.0
2024-02-04 22:55:12,968:INFO:             pycaret: 3.2.0
2024-02-04 22:55:12,968:INFO:             IPython: 8.20.0
2024-02-04 22:55:12,968:INFO:          ipywidgets: 8.1.1
2024-02-04 22:55:12,968:INFO:                tqdm: 4.66.1
2024-02-04 22:55:12,968:INFO:               numpy: 1.25.2
2024-02-04 22:55:12,968:INFO:              pandas: 1.5.3
2024-02-04 22:55:12,968:INFO:              jinja2: 3.1.3
2024-02-04 22:55:12,968:INFO:               scipy: 1.10.1
2024-02-04 22:55:12,968:INFO:              joblib: 1.3.2
2024-02-04 22:55:12,968:INFO:             sklearn: 1.2.2
2024-02-04 22:55:12,968:INFO:                pyod: 1.1.2
2024-02-04 22:55:12,968:INFO:            imblearn: 0.12.0
2024-02-04 22:55:12,968:INFO:   category_encoders: 2.6.3
2024-02-04 22:55:12,968:INFO:            lightgbm: 4.3.0
2024-02-04 22:55:12,968:INFO:               numba: 0.58.1
2024-02-04 22:55:12,968:INFO:            requests: 2.31.0
2024-02-04 22:55:12,968:INFO:          matplotlib: 3.6.0
2024-02-04 22:55:12,968:INFO:          scikitplot: 0.3.7
2024-02-04 22:55:12,968:INFO:         yellowbrick: 1.5
2024-02-04 22:55:12,968:INFO:              plotly: 5.18.0
2024-02-04 22:55:12,968:INFO:    plotly-resampler: Not installed
2024-02-04 22:55:12,968:INFO:             kaleido: 0.2.1
2024-02-04 22:55:12,968:INFO:           schemdraw: 0.15
2024-02-04 22:55:12,968:INFO:         statsmodels: 0.14.1
2024-02-04 22:55:12,969:INFO:              sktime: 0.21.1
2024-02-04 22:55:12,969:INFO:               tbats: 1.1.3
2024-02-04 22:55:12,969:INFO:            pmdarima: 2.0.4
2024-02-04 22:55:12,969:INFO:              psutil: 5.9.8
2024-02-04 22:55:12,969:INFO:          markupsafe: 2.1.4
2024-02-04 22:55:12,969:INFO:             pickle5: Not installed
2024-02-04 22:55:12,969:INFO:         cloudpickle: 3.0.0
2024-02-04 22:55:12,969:INFO:         deprecation: 2.1.0
2024-02-04 22:55:12,969:INFO:              xxhash: 3.4.1
2024-02-04 22:55:12,969:INFO:           wurlitzer: Not installed
2024-02-04 22:55:12,969:INFO:PyCaret optional dependencies:
2024-02-04 22:55:12,999:INFO:                shap: 0.44.1
2024-02-04 22:55:13,000:INFO:           interpret: Not installed
2024-02-04 22:55:13,000:INFO:                umap: Not installed
2024-02-04 22:55:13,000:INFO:     ydata_profiling: Not installed
2024-02-04 22:55:13,000:INFO:  explainerdashboard: Not installed
2024-02-04 22:55:13,000:INFO:             autoviz: Not installed
2024-02-04 22:55:13,000:INFO:           fairlearn: Not installed
2024-02-04 22:55:13,000:INFO:          deepchecks: Not installed
2024-02-04 22:55:13,000:INFO:             xgboost: 2.0.3
2024-02-04 22:55:13,000:INFO:            catboost: 1.2.2
2024-02-04 22:55:13,000:INFO:              kmodes: Not installed
2024-02-04 22:55:13,000:INFO:             mlxtend: Not installed
2024-02-04 22:55:13,000:INFO:       statsforecast: Not installed
2024-02-04 22:55:13,000:INFO:        tune_sklearn: Not installed
2024-02-04 22:55:13,000:INFO:                 ray: Not installed
2024-02-04 22:55:13,000:INFO:            hyperopt: Not installed
2024-02-04 22:55:13,000:INFO:              optuna: Not installed
2024-02-04 22:55:13,000:INFO:               skopt: Not installed
2024-02-04 22:55:13,000:INFO:              mlflow: Not installed
2024-02-04 22:55:13,000:INFO:              gradio: Not installed
2024-02-04 22:55:13,000:INFO:             fastapi: Not installed
2024-02-04 22:55:13,000:INFO:             uvicorn: Not installed
2024-02-04 22:55:13,000:INFO:              m2cgen: Not installed
2024-02-04 22:55:13,000:INFO:           evidently: Not installed
2024-02-04 22:55:13,000:INFO:               fugue: Not installed
2024-02-04 22:55:13,000:INFO:           streamlit: Not installed
2024-02-04 22:55:13,000:INFO:             prophet: 1.1.5
2024-02-04 22:55:13,000:INFO:None
2024-02-04 22:55:13,000:INFO:Set up data.
2024-02-04 22:55:13,004:INFO:Set up folding strategy.
2024-02-04 22:55:13,004:INFO:Set up train/test split.
2024-02-04 22:55:13,006:INFO:Set up index.
2024-02-04 22:55:13,006:INFO:Assigning column types.
2024-02-04 22:55:13,008:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 22:55:13,032:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 22:55:13,033:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:55:13,051:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:55:13,052:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:55:13,091:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 22:55:13,092:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:55:13,109:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:55:13,111:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:55:13,111:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 22:55:13,134:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:55:13,149:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:55:13,151:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:55:13,174:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:55:13,251:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:55:13,253:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:55:13,253:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 22:55:13,292:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:55:13,293:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:55:13,332:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:55:13,334:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:55:13,335:INFO:Preparing preprocessing pipeline...
2024-02-04 22:55:13,336:INFO:Set up label encoding.
2024-02-04 22:55:13,336:INFO:Set up simple imputation.
2024-02-04 22:55:13,351:INFO:Finished creating preprocessing pipeline.
2024-02-04 22:55:13,354:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 22:55:13,354:INFO:Creating final display dataframe.
2024-02-04 22:55:13,395:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                    31
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  b028
2024-02-04 22:55:13,435:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:55:13,437:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:55:13,478:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:55:13,480:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:55:13,480:INFO:setup() successfully completed in 0.56s...............
2024-02-04 22:55:13,480:INFO:Initializing compare_models()
2024-02-04 22:55:13,480:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-02-04 22:55:13,480:INFO:Checking exceptions
2024-02-04 22:55:13,482:INFO:Preparing display monitor
2024-02-04 22:55:13,485:INFO:Initializing Logistic Regression
2024-02-04 22:55:13,485:INFO:Total runtime is 0.0 minutes
2024-02-04 22:55:13,485:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:13,485:INFO:Initializing create_model()
2024-02-04 22:55:13,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=lr, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:13,485:INFO:Checking exceptions
2024-02-04 22:55:13,485:INFO:Importing libraries
2024-02-04 22:55:13,485:INFO:Copying training dataset
2024-02-04 22:55:13,487:INFO:Defining folds
2024-02-04 22:55:13,487:INFO:Declaring metric variables
2024-02-04 22:55:13,487:INFO:Importing untrained model
2024-02-04 22:55:13,487:INFO:Logistic Regression Imported successfully
2024-02-04 22:55:13,487:INFO:Starting cross validation
2024-02-04 22:55:13,487:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:17,333:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,336:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,338:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,430:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,433:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,434:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:17,436:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,469:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,474:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,476:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:17,478:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,495:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,498:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,500:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,508:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,512:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,515:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,518:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,521:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,524:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,550:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,553:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,555:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,563:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,565:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,568:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,590:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,593:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,594:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:17,596:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,596:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,599:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,600:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:17,602:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,618:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,621:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,622:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:17,625:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,626:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,628:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,629:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:17,631:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,638:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,640:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,643:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,654:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,658:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,659:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,660:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,661:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,661:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,664:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,668:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,676:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,678:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,679:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:17,680:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,692:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,695:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,696:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,697:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:17,698:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,051:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,054:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,056:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,154:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,156:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,157:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,461:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,463:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,465:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,527:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,528:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,529:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,643:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,645:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,646:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,652:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,653:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,655:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,682:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,683:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,685:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,722:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,723:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,724:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,728:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,729:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,731:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,748:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,749:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,750:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,751:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,751:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,752:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,762:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,764:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,765:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,772:INFO:Calculating mean and std
2024-02-04 22:55:18,773:INFO:Creating metrics dataframe
2024-02-04 22:55:18,775:INFO:Uploading results into container
2024-02-04 22:55:18,775:INFO:Uploading model into container now
2024-02-04 22:55:18,776:INFO:_master_model_container: 1
2024-02-04 22:55:18,776:INFO:_display_container: 2
2024-02-04 22:55:18,776:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-04 22:55:18,776:INFO:create_model() successfully completed......................................
2024-02-04 22:55:18,840:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:18,840:INFO:Creating metrics dataframe
2024-02-04 22:55:18,843:INFO:Initializing K Neighbors Classifier
2024-02-04 22:55:18,843:INFO:Total runtime is 0.0893017570177714 minutes
2024-02-04 22:55:18,843:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:18,843:INFO:Initializing create_model()
2024-02-04 22:55:18,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=knn, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:18,843:INFO:Checking exceptions
2024-02-04 22:55:18,843:INFO:Importing libraries
2024-02-04 22:55:18,843:INFO:Copying training dataset
2024-02-04 22:55:18,845:INFO:Defining folds
2024-02-04 22:55:18,845:INFO:Declaring metric variables
2024-02-04 22:55:18,845:INFO:Importing untrained model
2024-02-04 22:55:18,845:INFO:K Neighbors Classifier Imported successfully
2024-02-04 22:55:18,845:INFO:Starting cross validation
2024-02-04 22:55:18,846:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:18,914:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,916:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,916:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,916:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,919:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,919:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,920:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,920:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,922:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,922:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,923:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,928:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,930:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,932:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,934:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,934:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,934:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,935:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,936:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,938:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,938:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,938:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,938:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,940:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,940:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,940:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,940:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,940:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,941:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,942:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,943:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,943:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,944:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,945:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,946:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,946:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,947:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,986:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,988:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,989:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,989:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,989:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:18,990:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,990:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,991:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,991:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,991:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:18,992:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,992:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,993:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,993:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,993:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,994:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:18,996:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,002:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,003:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,003:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,003:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,003:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,004:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,004:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,005:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,005:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,005:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,005:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,006:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,006:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,006:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,006:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,007:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,007:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,008:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,008:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,008:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,008:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,008:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,009:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,009:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,009:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,010:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,010:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,010:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,010:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,012:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,023:INFO:Calculating mean and std
2024-02-04 22:55:19,023:INFO:Creating metrics dataframe
2024-02-04 22:55:19,027:INFO:Uploading results into container
2024-02-04 22:55:19,027:INFO:Uploading model into container now
2024-02-04 22:55:19,027:INFO:_master_model_container: 2
2024-02-04 22:55:19,028:INFO:_display_container: 2
2024-02-04 22:55:19,028:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-04 22:55:19,028:INFO:create_model() successfully completed......................................
2024-02-04 22:55:19,084:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:19,084:INFO:Creating metrics dataframe
2024-02-04 22:55:19,086:INFO:Initializing Naive Bayes
2024-02-04 22:55:19,086:INFO:Total runtime is 0.09335982799530029 minutes
2024-02-04 22:55:19,086:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:19,088:INFO:Initializing create_model()
2024-02-04 22:55:19,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=nb, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:19,088:INFO:Checking exceptions
2024-02-04 22:55:19,088:INFO:Importing libraries
2024-02-04 22:55:19,088:INFO:Copying training dataset
2024-02-04 22:55:19,089:INFO:Defining folds
2024-02-04 22:55:19,089:INFO:Declaring metric variables
2024-02-04 22:55:19,089:INFO:Importing untrained model
2024-02-04 22:55:19,089:INFO:Naive Bayes Imported successfully
2024-02-04 22:55:19,089:INFO:Starting cross validation
2024-02-04 22:55:19,090:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:19,112:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,114:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,114:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,116:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,116:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,116:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,118:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,118:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,120:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,121:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,122:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,124:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,125:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,126:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,127:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,127:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,128:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,128:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,128:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,129:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,129:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,129:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,129:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,129:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,131:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,131:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,131:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,131:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,131:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,131:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,131:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,132:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,132:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,132:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,133:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,133:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,134:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,134:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,135:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,135:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,135:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,136:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,136:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,136:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,138:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,138:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,139:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,139:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,139:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,140:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,140:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,142:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,142:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,144:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,144:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,146:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,148:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,149:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,151:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,153:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,153:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,153:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,155:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,155:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,157:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,158:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,159:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,159:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,159:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,160:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,160:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,160:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,160:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,160:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,160:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,161:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,161:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,161:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,162:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,162:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,162:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,162:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,163:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,164:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,164:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,165:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,165:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,179:INFO:Calculating mean and std
2024-02-04 22:55:19,179:INFO:Creating metrics dataframe
2024-02-04 22:55:19,181:INFO:Uploading results into container
2024-02-04 22:55:19,182:INFO:Uploading model into container now
2024-02-04 22:55:19,182:INFO:_master_model_container: 3
2024-02-04 22:55:19,182:INFO:_display_container: 2
2024-02-04 22:55:19,182:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-04 22:55:19,182:INFO:create_model() successfully completed......................................
2024-02-04 22:55:19,243:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:19,243:INFO:Creating metrics dataframe
2024-02-04 22:55:19,248:INFO:Initializing Decision Tree Classifier
2024-02-04 22:55:19,249:INFO:Total runtime is 0.09607221682866414 minutes
2024-02-04 22:55:19,249:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:19,249:INFO:Initializing create_model()
2024-02-04 22:55:19,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=dt, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:19,249:INFO:Checking exceptions
2024-02-04 22:55:19,249:INFO:Importing libraries
2024-02-04 22:55:19,249:INFO:Copying training dataset
2024-02-04 22:55:19,250:INFO:Defining folds
2024-02-04 22:55:19,251:INFO:Declaring metric variables
2024-02-04 22:55:19,251:INFO:Importing untrained model
2024-02-04 22:55:19,251:INFO:Decision Tree Classifier Imported successfully
2024-02-04 22:55:19,251:INFO:Starting cross validation
2024-02-04 22:55:19,251:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:19,286:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,287:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,288:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,288:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,288:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,289:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,290:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,291:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,291:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,291:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,293:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,293:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,293:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,294:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,295:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,295:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,296:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,297:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,297:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,298:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,298:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,300:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,301:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,302:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,302:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,302:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,303:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,303:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,303:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,304:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,305:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,305:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,306:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,307:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,307:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,308:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,308:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,308:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,309:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,309:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,310:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,311:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,312:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,312:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,313:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,313:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,313:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,315:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,315:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,315:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,315:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,317:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,318:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,318:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,319:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,320:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,320:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,321:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,322:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,322:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,322:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,322:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,324:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,324:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,325:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,326:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,326:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,326:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,327:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,327:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,327:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,328:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,328:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,328:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,328:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,328:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,328:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,328:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,329:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,329:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,329:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,329:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,330:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,332:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,333:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,333:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,333:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,334:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,334:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,334:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,334:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,335:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,338:INFO:Calculating mean and std
2024-02-04 22:55:19,338:INFO:Creating metrics dataframe
2024-02-04 22:55:19,340:INFO:Uploading results into container
2024-02-04 22:55:19,341:INFO:Uploading model into container now
2024-02-04 22:55:19,341:INFO:_master_model_container: 4
2024-02-04 22:55:19,341:INFO:_display_container: 2
2024-02-04 22:55:19,341:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2024-02-04 22:55:19,341:INFO:create_model() successfully completed......................................
2024-02-04 22:55:19,404:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:19,405:INFO:Creating metrics dataframe
2024-02-04 22:55:19,408:INFO:Initializing SVM - Linear Kernel
2024-02-04 22:55:19,408:INFO:Total runtime is 0.09872396389643351 minutes
2024-02-04 22:55:19,408:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:19,408:INFO:Initializing create_model()
2024-02-04 22:55:19,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=svm, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:19,409:INFO:Checking exceptions
2024-02-04 22:55:19,409:INFO:Importing libraries
2024-02-04 22:55:19,409:INFO:Copying training dataset
2024-02-04 22:55:19,410:INFO:Defining folds
2024-02-04 22:55:19,410:INFO:Declaring metric variables
2024-02-04 22:55:19,410:INFO:Importing untrained model
2024-02-04 22:55:19,411:INFO:SVM - Linear Kernel Imported successfully
2024-02-04 22:55:19,411:INFO:Starting cross validation
2024-02-04 22:55:19,411:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:19,441:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,441:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,442:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,442:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,443:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,444:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,445:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,446:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,446:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,448:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,449:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,449:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,450:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,450:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,450:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,450:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,450:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,451:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,451:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,452:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,452:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,452:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,452:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,452:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,453:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,453:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,453:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,453:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,453:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,453:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,454:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,454:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,454:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,454:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,454:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,454:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,454:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,455:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,455:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,455:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,455:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,455:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,455:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,456:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,456:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,456:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,458:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,458:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,458:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,459:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,459:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,460:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,460:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,461:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,461:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,462:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,462:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,462:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,464:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,464:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,464:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,464:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,466:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,468:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,469:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,469:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,470:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,472:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,473:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,474:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,474:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,474:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,475:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,475:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,476:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,476:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,476:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,476:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,477:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,478:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,478:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,478:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,478:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,478:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,478:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,479:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,479:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,480:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,480:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,480:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,480:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,481:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,481:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,482:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,482:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,482:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,483:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,483:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,483:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,483:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,484:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,484:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,484:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-04 22:55:19,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,488:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,488:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,488:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,488:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,489:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,489:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,489:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,489:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,490:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,490:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,490:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,490:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,491:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,500:INFO:Calculating mean and std
2024-02-04 22:55:19,501:INFO:Creating metrics dataframe
2024-02-04 22:55:19,503:INFO:Uploading results into container
2024-02-04 22:55:19,503:INFO:Uploading model into container now
2024-02-04 22:55:19,503:INFO:_master_model_container: 5
2024-02-04 22:55:19,503:INFO:_display_container: 2
2024-02-04 22:55:19,504:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-04 22:55:19,504:INFO:create_model() successfully completed......................................
2024-02-04 22:55:19,566:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:19,566:INFO:Creating metrics dataframe
2024-02-04 22:55:19,570:INFO:Initializing Ridge Classifier
2024-02-04 22:55:19,570:INFO:Total runtime is 0.10142205556233723 minutes
2024-02-04 22:55:19,570:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:19,570:INFO:Initializing create_model()
2024-02-04 22:55:19,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=ridge, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:19,570:INFO:Checking exceptions
2024-02-04 22:55:19,570:INFO:Importing libraries
2024-02-04 22:55:19,570:INFO:Copying training dataset
2024-02-04 22:55:19,572:INFO:Defining folds
2024-02-04 22:55:19,572:INFO:Declaring metric variables
2024-02-04 22:55:19,572:INFO:Importing untrained model
2024-02-04 22:55:19,572:INFO:Ridge Classifier Imported successfully
2024-02-04 22:55:19,572:INFO:Starting cross validation
2024-02-04 22:55:19,573:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:19,610:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,611:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,611:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,612:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,612:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,612:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,613:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,613:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,613:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,613:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,613:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,613:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,614:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,614:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,614:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,614:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,614:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,614:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,616:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,616:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,616:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,616:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,616:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,616:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,616:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,617:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,617:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,617:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,618:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,618:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,618:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,618:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,618:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,618:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,618:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,618:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,619:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,619:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,619:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,619:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,619:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,619:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,620:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,620:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,620:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,620:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,621:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,621:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,621:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,622:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,623:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,623:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,623:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,625:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,625:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,625:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,626:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,628:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,633:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,634:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,636:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,636:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,636:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,637:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,637:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,637:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,638:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,639:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,639:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,639:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,640:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,640:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,640:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,640:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,641:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,641:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,641:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,641:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,642:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,642:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,642:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,642:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,643:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,643:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,644:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,644:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,644:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,645:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,645:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,645:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,645:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,645:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,646:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,646:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,647:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,648:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,648:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,648:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,648:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,649:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,649:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,649:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,649:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,649:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Softwares\Enviroments\Python\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-04 22:55:19,651:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,651:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,651:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,652:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,652:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,652:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:19,652:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,652:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,653:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,653:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,653:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,653:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,653:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,662:INFO:Calculating mean and std
2024-02-04 22:55:19,663:INFO:Creating metrics dataframe
2024-02-04 22:55:19,666:INFO:Uploading results into container
2024-02-04 22:55:19,667:INFO:Uploading model into container now
2024-02-04 22:55:19,667:INFO:_master_model_container: 6
2024-02-04 22:55:19,667:INFO:_display_container: 2
2024-02-04 22:55:19,667:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-02-04 22:55:19,668:INFO:create_model() successfully completed......................................
2024-02-04 22:55:19,728:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:19,729:INFO:Creating metrics dataframe
2024-02-04 22:55:19,731:INFO:Initializing Random Forest Classifier
2024-02-04 22:55:19,731:INFO:Total runtime is 0.10410463015238443 minutes
2024-02-04 22:55:19,731:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:19,731:INFO:Initializing create_model()
2024-02-04 22:55:19,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=rf, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:19,731:INFO:Checking exceptions
2024-02-04 22:55:19,731:INFO:Importing libraries
2024-02-04 22:55:19,731:INFO:Copying training dataset
2024-02-04 22:55:19,733:INFO:Defining folds
2024-02-04 22:55:19,733:INFO:Declaring metric variables
2024-02-04 22:55:19,733:INFO:Importing untrained model
2024-02-04 22:55:19,733:INFO:Random Forest Classifier Imported successfully
2024-02-04 22:55:19,733:INFO:Starting cross validation
2024-02-04 22:55:19,734:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:19,968:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,971:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,972:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,973:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,973:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,973:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,974:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,975:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,975:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,975:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,975:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,976:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,976:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,977:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,977:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,977:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,977:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,977:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,977:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,977:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,977:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,978:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,978:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,978:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,978:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,979:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,979:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,979:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,979:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,980:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,980:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,980:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,981:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,981:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:19,983:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,021:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,023:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,026:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,204:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,206:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,207:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,207:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,207:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,208:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,208:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,208:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,208:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,209:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,209:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,209:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,209:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,210:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,210:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,210:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,210:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,211:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,211:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,212:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,212:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,213:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,213:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,214:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,214:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,214:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:20,214:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,214:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,215:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,217:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,217:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,220:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,229:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,231:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,231:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,237:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,237:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,238:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,238:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,238:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:20,239:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,239:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,243:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,245:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,246:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,317:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,318:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,319:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,366:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,367:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,368:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,373:INFO:Calculating mean and std
2024-02-04 22:55:20,374:INFO:Creating metrics dataframe
2024-02-04 22:55:20,376:INFO:Uploading results into container
2024-02-04 22:55:20,376:INFO:Uploading model into container now
2024-02-04 22:55:20,376:INFO:_master_model_container: 7
2024-02-04 22:55:20,376:INFO:_display_container: 2
2024-02-04 22:55:20,377:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-02-04 22:55:20,377:INFO:create_model() successfully completed......................................
2024-02-04 22:55:20,436:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:20,436:INFO:Creating metrics dataframe
2024-02-04 22:55:20,440:INFO:Initializing Quadratic Discriminant Analysis
2024-02-04 22:55:20,440:INFO:Total runtime is 0.1159210165341695 minutes
2024-02-04 22:55:20,440:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:20,440:INFO:Initializing create_model()
2024-02-04 22:55:20,440:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=qda, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:20,440:INFO:Checking exceptions
2024-02-04 22:55:20,440:INFO:Importing libraries
2024-02-04 22:55:20,440:INFO:Copying training dataset
2024-02-04 22:55:20,442:INFO:Defining folds
2024-02-04 22:55:20,442:INFO:Declaring metric variables
2024-02-04 22:55:20,442:INFO:Importing untrained model
2024-02-04 22:55:20,442:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-04 22:55:20,442:INFO:Starting cross validation
2024-02-04 22:55:20,443:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:20,479:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,480:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,481:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,481:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,482:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,483:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,483:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,483:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,483:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,483:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,483:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,484:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,484:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,484:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,484:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,485:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,485:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,485:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,485:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,485:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,485:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,486:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,488:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,488:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,488:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,488:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,488:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,488:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,489:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,490:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,491:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,491:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,492:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,492:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,492:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,494:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,494:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,494:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,496:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,498:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,498:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,499:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:20,499:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,500:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,502:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,504:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,505:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,505:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,508:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,508:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,508:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,509:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,509:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,510:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,510:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,511:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,511:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,511:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,512:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,512:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,513:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,513:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,514:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,514:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,515:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,515:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,516:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,516:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,516:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,516:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,516:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,518:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,518:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,518:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,518:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,519:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,519:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,519:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,520:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,520:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,521:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,521:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,521:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:20,522:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,522:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,522:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,523:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,523:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,529:INFO:Calculating mean and std
2024-02-04 22:55:20,529:INFO:Creating metrics dataframe
2024-02-04 22:55:20,531:INFO:Uploading results into container
2024-02-04 22:55:20,531:INFO:Uploading model into container now
2024-02-04 22:55:20,532:INFO:_master_model_container: 8
2024-02-04 22:55:20,532:INFO:_display_container: 2
2024-02-04 22:55:20,532:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-04 22:55:20,532:INFO:create_model() successfully completed......................................
2024-02-04 22:55:20,594:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:20,594:INFO:Creating metrics dataframe
2024-02-04 22:55:20,597:INFO:Initializing Ada Boost Classifier
2024-02-04 22:55:20,597:INFO:Total runtime is 0.11853652795155842 minutes
2024-02-04 22:55:20,597:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:20,597:INFO:Initializing create_model()
2024-02-04 22:55:20,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=ada, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:20,598:INFO:Checking exceptions
2024-02-04 22:55:20,598:INFO:Importing libraries
2024-02-04 22:55:20,598:INFO:Copying training dataset
2024-02-04 22:55:20,598:INFO:Defining folds
2024-02-04 22:55:20,599:INFO:Declaring metric variables
2024-02-04 22:55:20,599:INFO:Importing untrained model
2024-02-04 22:55:20,599:INFO:Ada Boost Classifier Imported successfully
2024-02-04 22:55:20,599:INFO:Starting cross validation
2024-02-04 22:55:20,599:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:20,688:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,689:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,691:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,694:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,696:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,696:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,698:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,698:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,699:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,700:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,700:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,701:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,701:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,702:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,702:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,702:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,702:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,704:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,704:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,706:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,711:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,713:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,713:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,714:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,715:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,716:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,716:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,718:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,718:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,718:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,719:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,722:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,722:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,722:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,724:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,724:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,726:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,726:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,727:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,727:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,730:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,730:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,732:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,734:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,736:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,738:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,773:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,775:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,776:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:20,776:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,782:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,783:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,784:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,785:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,785:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,786:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,789:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,791:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,793:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,793:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,796:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,796:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,796:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,799:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,799:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,801:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,801:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,804:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,805:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,806:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,806:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,808:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,808:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,808:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,809:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,809:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,809:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,810:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,812:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,812:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,813:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,813:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,813:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,813:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,814:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,814:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,814:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,815:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,815:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,815:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:20,815:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,823:INFO:Calculating mean and std
2024-02-04 22:55:20,823:INFO:Creating metrics dataframe
2024-02-04 22:55:20,825:INFO:Uploading results into container
2024-02-04 22:55:20,825:INFO:Uploading model into container now
2024-02-04 22:55:20,826:INFO:_master_model_container: 9
2024-02-04 22:55:20,826:INFO:_display_container: 2
2024-02-04 22:55:20,826:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2024-02-04 22:55:20,826:INFO:create_model() successfully completed......................................
2024-02-04 22:55:20,884:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:20,885:INFO:Creating metrics dataframe
2024-02-04 22:55:20,887:INFO:Initializing Gradient Boosting Classifier
2024-02-04 22:55:20,887:INFO:Total runtime is 0.12337055206298826 minutes
2024-02-04 22:55:20,887:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:20,888:INFO:Initializing create_model()
2024-02-04 22:55:20,888:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=gbc, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:20,888:INFO:Checking exceptions
2024-02-04 22:55:20,888:INFO:Importing libraries
2024-02-04 22:55:20,888:INFO:Copying training dataset
2024-02-04 22:55:20,889:INFO:Defining folds
2024-02-04 22:55:20,889:INFO:Declaring metric variables
2024-02-04 22:55:20,889:INFO:Importing untrained model
2024-02-04 22:55:20,889:INFO:Gradient Boosting Classifier Imported successfully
2024-02-04 22:55:20,889:INFO:Starting cross validation
2024-02-04 22:55:20,889:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:20,964:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,965:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,968:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,970:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,972:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,975:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,975:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,976:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,979:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,980:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,980:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,981:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,982:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,982:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,983:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,984:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,984:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,984:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,984:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,985:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,986:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,986:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,986:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,988:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,988:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,991:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,993:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,996:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,999:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:20,999:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,001:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,001:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,001:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,003:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,010:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,013:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,014:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,015:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,016:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,018:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,019:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,022:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,022:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,024:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,028:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,045:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,046:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,048:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:21,049:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,054:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,056:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,056:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,056:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,058:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,058:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,058:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,059:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,060:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,060:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,061:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,062:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,063:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,064:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,066:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,068:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,070:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,070:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,071:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,072:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,072:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,077:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,078:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,078:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,084:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,084:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,085:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,085:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,085:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,086:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,086:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,086:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,086:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,086:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,088:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,088:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,089:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,090:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,091:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,102:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,103:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,105:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,109:INFO:Calculating mean and std
2024-02-04 22:55:21,109:INFO:Creating metrics dataframe
2024-02-04 22:55:21,111:INFO:Uploading results into container
2024-02-04 22:55:21,112:INFO:Uploading model into container now
2024-02-04 22:55:21,112:INFO:_master_model_container: 10
2024-02-04 22:55:21,112:INFO:_display_container: 2
2024-02-04 22:55:21,112:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-04 22:55:21,112:INFO:create_model() successfully completed......................................
2024-02-04 22:55:21,169:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:21,169:INFO:Creating metrics dataframe
2024-02-04 22:55:21,171:INFO:Initializing Linear Discriminant Analysis
2024-02-04 22:55:21,172:INFO:Total runtime is 0.12811884880065916 minutes
2024-02-04 22:55:21,172:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:21,172:INFO:Initializing create_model()
2024-02-04 22:55:21,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=lda, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:21,172:INFO:Checking exceptions
2024-02-04 22:55:21,172:INFO:Importing libraries
2024-02-04 22:55:21,172:INFO:Copying training dataset
2024-02-04 22:55:21,173:INFO:Defining folds
2024-02-04 22:55:21,173:INFO:Declaring metric variables
2024-02-04 22:55:21,173:INFO:Importing untrained model
2024-02-04 22:55:21,174:INFO:Linear Discriminant Analysis Imported successfully
2024-02-04 22:55:21,174:INFO:Starting cross validation
2024-02-04 22:55:21,174:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:21,213:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,213:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,213:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,213:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,214:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,214:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,214:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,215:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,215:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,215:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,215:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,215:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,216:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,218:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,218:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,218:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,218:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,219:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,219:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,219:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,219:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,220:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,220:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,220:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,220:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,221:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,221:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,222:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,223:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,233:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,233:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,234:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,235:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,235:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,236:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,236:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:21,238:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,239:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,239:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,240:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,240:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,241:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,242:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,242:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,243:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,244:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,244:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,244:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,246:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,246:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,249:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,249:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,249:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,249:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,249:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,250:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,250:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,250:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,250:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,251:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,251:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,251:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,251:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,251:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,252:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,252:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,252:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,253:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:21,253:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,253:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,254:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,254:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,254:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,255:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,266:INFO:Calculating mean and std
2024-02-04 22:55:21,267:INFO:Creating metrics dataframe
2024-02-04 22:55:21,269:INFO:Uploading results into container
2024-02-04 22:55:21,269:INFO:Uploading model into container now
2024-02-04 22:55:21,270:INFO:_master_model_container: 11
2024-02-04 22:55:21,270:INFO:_display_container: 2
2024-02-04 22:55:21,270:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-04 22:55:21,270:INFO:create_model() successfully completed......................................
2024-02-04 22:55:21,330:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:21,330:INFO:Creating metrics dataframe
2024-02-04 22:55:21,332:INFO:Initializing Extra Trees Classifier
2024-02-04 22:55:21,332:INFO:Total runtime is 0.13079297939936319 minutes
2024-02-04 22:55:21,333:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:21,333:INFO:Initializing create_model()
2024-02-04 22:55:21,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=et, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:21,333:INFO:Checking exceptions
2024-02-04 22:55:21,333:INFO:Importing libraries
2024-02-04 22:55:21,333:INFO:Copying training dataset
2024-02-04 22:55:21,334:INFO:Defining folds
2024-02-04 22:55:21,334:INFO:Declaring metric variables
2024-02-04 22:55:21,334:INFO:Importing untrained model
2024-02-04 22:55:21,334:INFO:Extra Trees Classifier Imported successfully
2024-02-04 22:55:21,335:INFO:Starting cross validation
2024-02-04 22:55:21,335:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:21,542:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,542:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,543:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,544:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,544:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,544:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,544:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,545:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,545:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,545:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,545:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,547:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,547:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,547:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,547:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,548:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,548:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,549:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,549:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,549:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,549:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,550:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,552:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,553:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,553:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,555:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,556:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,578:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,580:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,582:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,584:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,585:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,587:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,587:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,589:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,590:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,593:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,595:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,600:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,656:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,659:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,659:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,661:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,661:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,663:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,675:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,678:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,680:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,745:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,746:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,748:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,749:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,749:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:21,750:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:21,750:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,751:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,752:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,756:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,758:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,761:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,762:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,764:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,765:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,768:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,769:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,770:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,771:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,772:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,778:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,780:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,780:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,780:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:21,782:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,782:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,783:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,801:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,802:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,803:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,834:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,836:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,837:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,845:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,847:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,849:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,862:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,864:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,865:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,895:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,896:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,898:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,901:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,902:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,903:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:21,915:INFO:Calculating mean and std
2024-02-04 22:55:21,915:INFO:Creating metrics dataframe
2024-02-04 22:55:21,916:INFO:Uploading results into container
2024-02-04 22:55:21,918:INFO:Uploading model into container now
2024-02-04 22:55:21,918:INFO:_master_model_container: 12
2024-02-04 22:55:21,918:INFO:_display_container: 2
2024-02-04 22:55:21,918:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2024-02-04 22:55:21,918:INFO:create_model() successfully completed......................................
2024-02-04 22:55:21,978:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:21,986:INFO:Creating metrics dataframe
2024-02-04 22:55:21,989:INFO:Initializing Extreme Gradient Boosting
2024-02-04 22:55:21,989:INFO:Total runtime is 0.1417449116706848 minutes
2024-02-04 22:55:21,989:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:21,989:INFO:Initializing create_model()
2024-02-04 22:55:21,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=xgboost, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:21,989:INFO:Checking exceptions
2024-02-04 22:55:21,989:INFO:Importing libraries
2024-02-04 22:55:21,989:INFO:Copying training dataset
2024-02-04 22:55:21,991:INFO:Defining folds
2024-02-04 22:55:21,991:INFO:Declaring metric variables
2024-02-04 22:55:21,991:INFO:Importing untrained model
2024-02-04 22:55:21,991:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 22:55:21,992:INFO:Starting cross validation
2024-02-04 22:55:21,992:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:22,094:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,095:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,096:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,114:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,114:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,115:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,116:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,118:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,118:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,124:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,127:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,128:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,128:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,129:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,130:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,130:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,132:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,132:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,135:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,136:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,137:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:22,138:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,138:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,141:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,142:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,143:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,143:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,145:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,146:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,148:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,148:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,151:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,154:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,156:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,157:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,157:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,158:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,159:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,160:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,163:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,164:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,164:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,164:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,164:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,165:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,167:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,167:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,167:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,167:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,167:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,168:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,169:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,169:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,169:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,173:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,175:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,175:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,175:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,177:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,178:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,178:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,179:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,181:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,181:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,183:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,183:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,183:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,184:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,184:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,185:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,186:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,187:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,188:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,189:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,189:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,191:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,191:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,191:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

, msg_start, len(result))

2024-02-04 22:55:22,192:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,193:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,193:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,194:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,194:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,196:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,197:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,198:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,198:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,199:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,199:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,200:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,200:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,201:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,202:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,208:INFO:Calculating mean and std
2024-02-04 22:55:22,208:INFO:Creating metrics dataframe
2024-02-04 22:55:22,210:INFO:Uploading results into container
2024-02-04 22:55:22,210:INFO:Uploading model into container now
2024-02-04 22:55:22,211:INFO:_master_model_container: 13
2024-02-04 22:55:22,211:INFO:_display_container: 2
2024-02-04 22:55:22,211:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 22:55:22,211:INFO:create_model() successfully completed......................................
2024-02-04 22:55:22,266:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:22,266:INFO:Creating metrics dataframe
2024-02-04 22:55:22,269:INFO:Initializing Light Gradient Boosting Machine
2024-02-04 22:55:22,269:INFO:Total runtime is 0.146405820051829 minutes
2024-02-04 22:55:22,269:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:22,269:INFO:Initializing create_model()
2024-02-04 22:55:22,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=lightgbm, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:22,269:INFO:Checking exceptions
2024-02-04 22:55:22,269:INFO:Importing libraries
2024-02-04 22:55:22,269:INFO:Copying training dataset
2024-02-04 22:55:22,271:INFO:Defining folds
2024-02-04 22:55:22,271:INFO:Declaring metric variables
2024-02-04 22:55:22,271:INFO:Importing untrained model
2024-02-04 22:55:22,271:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-04 22:55:22,271:INFO:Starting cross validation
2024-02-04 22:55:22,272:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:22,622:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,622:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,624:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,624:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,624:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,624:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,624:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,624:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,626:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,626:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,626:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,626:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,627:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,627:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,629:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,630:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,644:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,646:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,646:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,648:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,648:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,650:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,655:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,656:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,659:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,661:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,663:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,664:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,665:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,665:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,666:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,668:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,670:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,671:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,671:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,673:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,674:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,674:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,676:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,678:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,696:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,699:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,700:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,703:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,704:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,707:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,951:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,952:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,954:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,961:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,962:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,964:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,965:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,966:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,968:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,972:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,973:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,975:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,980:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,981:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,983:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,983:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,985:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,988:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,991:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,992:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,994:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,996:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,996:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,996:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,998:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,999:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,999:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:22,999:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:23,000:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,000:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,000:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,001:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,002:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,004:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,004:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,005:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,006:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,012:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,013:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,014:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,036:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,038:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,039:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,050:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,052:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,052:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:23,062:INFO:Calculating mean and std
2024-02-04 22:55:23,063:INFO:Creating metrics dataframe
2024-02-04 22:55:23,066:INFO:Uploading results into container
2024-02-04 22:55:23,066:INFO:Uploading model into container now
2024-02-04 22:55:23,066:INFO:_master_model_container: 14
2024-02-04 22:55:23,066:INFO:_display_container: 2
2024-02-04 22:55:23,068:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-04 22:55:23,068:INFO:create_model() successfully completed......................................
2024-02-04 22:55:23,140:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:23,140:INFO:Creating metrics dataframe
2024-02-04 22:55:23,143:INFO:Initializing CatBoost Classifier
2024-02-04 22:55:23,144:INFO:Total runtime is 0.16099724372227986 minutes
2024-02-04 22:55:23,144:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:23,144:INFO:Initializing create_model()
2024-02-04 22:55:23,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=catboost, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:23,144:INFO:Checking exceptions
2024-02-04 22:55:23,144:INFO:Importing libraries
2024-02-04 22:55:23,144:INFO:Copying training dataset
2024-02-04 22:55:23,146:INFO:Defining folds
2024-02-04 22:55:23,146:INFO:Declaring metric variables
2024-02-04 22:55:23,146:INFO:Importing untrained model
2024-02-04 22:55:23,146:INFO:CatBoost Classifier Imported successfully
2024-02-04 22:55:23,146:INFO:Starting cross validation
2024-02-04 22:55:23,148:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:25,714:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,795:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,795:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,796:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,796:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,797:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,799:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,799:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,799:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,812:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,814:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,835:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,837:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,839:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,845:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,850:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,854:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,890:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,892:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,892:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,893:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,894:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,894:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,896:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,899:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,901:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,919:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,921:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,923:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,924:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,927:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,928:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,958:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,959:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,960:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,961:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,962:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:25,965:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:26,009:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:26,011:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:26,012:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:26,059:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:26,060:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:26,063:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:26,128:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:26,130:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:26,132:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,370:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,372:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,374:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,451:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,452:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,453:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,453:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,454:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,455:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,515:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,520:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,522:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,533:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,534:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,536:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,561:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,563:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,564:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,565:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,566:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,567:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,568:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,568:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,569:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,569:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,570:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,570:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,570:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,571:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,571:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,572:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,572:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,587:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,589:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,591:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,628:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,630:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,631:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,660:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,661:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,663:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,713:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,715:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,716:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,726:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,727:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,728:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,732:INFO:Calculating mean and std
2024-02-04 22:55:27,733:INFO:Creating metrics dataframe
2024-02-04 22:55:27,735:INFO:Uploading results into container
2024-02-04 22:55:27,735:INFO:Uploading model into container now
2024-02-04 22:55:27,735:INFO:_master_model_container: 15
2024-02-04 22:55:27,735:INFO:_display_container: 2
2024-02-04 22:55:27,735:INFO:<catboost.core.CatBoostClassifier object at 0x0000017AF25D1550>
2024-02-04 22:55:27,735:INFO:create_model() successfully completed......................................
2024-02-04 22:55:27,795:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:27,795:INFO:Creating metrics dataframe
2024-02-04 22:55:27,798:INFO:Initializing Dummy Classifier
2024-02-04 22:55:27,798:INFO:Total runtime is 0.23855266173680623 minutes
2024-02-04 22:55:27,798:INFO:SubProcess create_model() called ==================================
2024-02-04 22:55:27,798:INFO:Initializing create_model()
2024-02-04 22:55:27,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=dummy, fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017AF2C8EDD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:27,799:INFO:Checking exceptions
2024-02-04 22:55:27,799:INFO:Importing libraries
2024-02-04 22:55:27,799:INFO:Copying training dataset
2024-02-04 22:55:27,800:INFO:Defining folds
2024-02-04 22:55:27,800:INFO:Declaring metric variables
2024-02-04 22:55:27,800:INFO:Importing untrained model
2024-02-04 22:55:27,800:INFO:Dummy Classifier Imported successfully
2024-02-04 22:55:27,800:INFO:Starting cross validation
2024-02-04 22:55:27,801:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:55:27,822:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,823:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,823:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,825:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,828:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,828:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,830:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,830:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,831:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,831:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,831:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,831:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,832:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,832:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,834:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,834:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,834:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,834:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,835:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,835:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,835:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,836:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,836:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,837:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,837:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,838:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,838:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,838:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,839:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,839:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,839:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,839:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,840:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,840:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,840:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,841:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,841:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,841:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,842:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,842:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,842:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,842:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,843:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,843:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,843:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,843:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,843:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,844:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,844:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,844:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,844:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,844:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,844:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,846:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,846:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,846:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,846:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,848:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,853:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,855:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,855:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,856:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,856:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,857:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,857:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,857:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,858:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,858:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

, msg_start, len(result))

2024-02-04 22:55:27,858:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,859:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,859:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,859:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,860:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,860:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,861:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,861:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,861:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,861:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,861:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,862:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,862:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,862:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,862:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,863:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,863:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,863:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,864:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,865:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,865:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,866:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,866:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,867:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,867:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,867:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,867:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,867:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,868:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,868:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,868:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,868:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,868:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,868:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,869:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,869:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,869:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,869:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,869:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,870:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,870:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,870:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,870:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:55:27,871:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,871:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,871:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,871:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:55:27,883:INFO:Calculating mean and std
2024-02-04 22:55:27,883:INFO:Creating metrics dataframe
2024-02-04 22:55:27,885:INFO:Uploading results into container
2024-02-04 22:55:27,885:INFO:Uploading model into container now
2024-02-04 22:55:27,885:INFO:_master_model_container: 16
2024-02-04 22:55:27,885:INFO:_display_container: 2
2024-02-04 22:55:27,885:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-02-04 22:55:27,885:INFO:create_model() successfully completed......................................
2024-02-04 22:55:27,944:INFO:SubProcess create_model() end ==================================
2024-02-04 22:55:27,944:INFO:Creating metrics dataframe
2024-02-04 22:55:27,948:INFO:Initializing create_model()
2024-02-04 22:55:27,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017AF2019510>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=31, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:55:27,948:INFO:Checking exceptions
2024-02-04 22:55:27,949:INFO:Importing libraries
2024-02-04 22:55:27,949:INFO:Copying training dataset
2024-02-04 22:55:27,950:INFO:Defining folds
2024-02-04 22:55:27,950:INFO:Declaring metric variables
2024-02-04 22:55:27,950:INFO:Importing untrained model
2024-02-04 22:55:27,951:INFO:Declaring custom model
2024-02-04 22:55:27,951:INFO:Gradient Boosting Classifier Imported successfully
2024-02-04 22:55:27,951:INFO:Cross validation set to False
2024-02-04 22:55:27,951:INFO:Fitting Model
2024-02-04 22:55:27,988:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-04 22:55:27,988:INFO:create_model() successfully completed......................................
2024-02-04 22:55:28,055:INFO:_master_model_container: 16
2024-02-04 22:55:28,055:INFO:_display_container: 2
2024-02-04 22:55:28,056:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-04 22:55:28,056:INFO:compare_models() successfully completed......................................
2024-02-04 22:58:20,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:58:20,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:58:20,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:58:20,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:58:21,382:INFO:PyCaret ClassificationExperiment
2024-02-04 22:58:21,382:INFO:Logging name: clf-default-name
2024-02-04 22:58:21,382:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 22:58:21,383:INFO:version 3.2.0
2024-02-04 22:58:21,383:INFO:Initializing setup()
2024-02-04 22:58:21,383:INFO:self.USI: eafb
2024-02-04 22:58:21,383:INFO:self._variable_keys: {'target_param', 'n_jobs_param', 'exp_id', 'y', 'y_test', 'X', 'fold_groups_param', 'log_plots_param', 'data', 'y_train', 'X_train', 'is_multiclass', 'pipeline', 'html_param', 'logging_param', 'fold_generator', '_available_plots', 'memory', '_ml_usecase', 'seed', 'X_test', 'fold_shuffle_param', 'gpu_n_jobs_param', 'fix_imbalance', 'exp_name_log', 'gpu_param', 'idx', 'USI'}
2024-02-04 22:58:21,383:INFO:Checking environment
2024-02-04 22:58:21,383:INFO:python_version: 3.11.7
2024-02-04 22:58:21,383:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 22:58:21,383:INFO:machine: AMD64
2024-02-04 22:58:21,391:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 22:58:21,394:INFO:Memory: svmem(total=16892026880, available=5335511040, percent=68.4, used=11556515840, free=5335511040)
2024-02-04 22:58:21,395:INFO:Physical Core: 12
2024-02-04 22:58:21,395:INFO:Logical Core: 16
2024-02-04 22:58:21,395:INFO:Checking libraries
2024-02-04 22:58:21,395:INFO:System:
2024-02-04 22:58:21,395:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 22:58:21,395:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 22:58:21,395:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 22:58:21,395:INFO:PyCaret required dependencies:
2024-02-04 22:58:21,423:INFO:                 pip: 23.3.2
2024-02-04 22:58:21,423:INFO:          setuptools: 65.5.0
2024-02-04 22:58:21,423:INFO:             pycaret: 3.2.0
2024-02-04 22:58:21,423:INFO:             IPython: 8.20.0
2024-02-04 22:58:21,423:INFO:          ipywidgets: 8.1.1
2024-02-04 22:58:21,423:INFO:                tqdm: 4.66.1
2024-02-04 22:58:21,423:INFO:               numpy: 1.25.2
2024-02-04 22:58:21,423:INFO:              pandas: 1.5.3
2024-02-04 22:58:21,423:INFO:              jinja2: 3.1.3
2024-02-04 22:58:21,423:INFO:               scipy: 1.10.1
2024-02-04 22:58:21,423:INFO:              joblib: 1.3.2
2024-02-04 22:58:21,423:INFO:             sklearn: 1.2.2
2024-02-04 22:58:21,423:INFO:                pyod: 1.1.2
2024-02-04 22:58:21,423:INFO:            imblearn: 0.12.0
2024-02-04 22:58:21,423:INFO:   category_encoders: 2.6.3
2024-02-04 22:58:21,423:INFO:            lightgbm: 4.3.0
2024-02-04 22:58:21,423:INFO:               numba: 0.58.1
2024-02-04 22:58:21,423:INFO:            requests: 2.31.0
2024-02-04 22:58:21,423:INFO:          matplotlib: 3.6.0
2024-02-04 22:58:21,423:INFO:          scikitplot: 0.3.7
2024-02-04 22:58:21,423:INFO:         yellowbrick: 1.5
2024-02-04 22:58:21,423:INFO:              plotly: 5.18.0
2024-02-04 22:58:21,423:INFO:    plotly-resampler: Not installed
2024-02-04 22:58:21,423:INFO:             kaleido: 0.2.1
2024-02-04 22:58:21,423:INFO:           schemdraw: 0.15
2024-02-04 22:58:21,423:INFO:         statsmodels: 0.14.1
2024-02-04 22:58:21,423:INFO:              sktime: 0.21.1
2024-02-04 22:58:21,423:INFO:               tbats: 1.1.3
2024-02-04 22:58:21,423:INFO:            pmdarima: 2.0.4
2024-02-04 22:58:21,423:INFO:              psutil: 5.9.8
2024-02-04 22:58:21,423:INFO:          markupsafe: 2.1.4
2024-02-04 22:58:21,423:INFO:             pickle5: Not installed
2024-02-04 22:58:21,423:INFO:         cloudpickle: 3.0.0
2024-02-04 22:58:21,423:INFO:         deprecation: 2.1.0
2024-02-04 22:58:21,423:INFO:              xxhash: 3.4.1
2024-02-04 22:58:21,423:INFO:           wurlitzer: Not installed
2024-02-04 22:58:21,423:INFO:PyCaret optional dependencies:
2024-02-04 22:58:21,451:INFO:                shap: 0.44.1
2024-02-04 22:58:21,451:INFO:           interpret: Not installed
2024-02-04 22:58:21,451:INFO:                umap: Not installed
2024-02-04 22:58:21,451:INFO:     ydata_profiling: Not installed
2024-02-04 22:58:21,451:INFO:  explainerdashboard: Not installed
2024-02-04 22:58:21,451:INFO:             autoviz: Not installed
2024-02-04 22:58:21,451:INFO:           fairlearn: Not installed
2024-02-04 22:58:21,451:INFO:          deepchecks: Not installed
2024-02-04 22:58:21,451:INFO:             xgboost: 2.0.3
2024-02-04 22:58:21,451:INFO:            catboost: 1.2.2
2024-02-04 22:58:21,452:INFO:              kmodes: Not installed
2024-02-04 22:58:21,452:INFO:             mlxtend: Not installed
2024-02-04 22:58:21,452:INFO:       statsforecast: Not installed
2024-02-04 22:58:21,452:INFO:        tune_sklearn: Not installed
2024-02-04 22:58:21,452:INFO:                 ray: Not installed
2024-02-04 22:58:21,452:INFO:            hyperopt: Not installed
2024-02-04 22:58:21,452:INFO:              optuna: Not installed
2024-02-04 22:58:21,452:INFO:               skopt: Not installed
2024-02-04 22:58:21,452:INFO:              mlflow: Not installed
2024-02-04 22:58:21,452:INFO:              gradio: Not installed
2024-02-04 22:58:21,452:INFO:             fastapi: Not installed
2024-02-04 22:58:21,452:INFO:             uvicorn: Not installed
2024-02-04 22:58:21,452:INFO:              m2cgen: Not installed
2024-02-04 22:58:21,452:INFO:           evidently: Not installed
2024-02-04 22:58:21,452:INFO:               fugue: Not installed
2024-02-04 22:58:21,452:INFO:           streamlit: Not installed
2024-02-04 22:58:21,452:INFO:             prophet: 1.1.5
2024-02-04 22:58:21,452:INFO:None
2024-02-04 22:58:21,452:INFO:Set up data.
2024-02-04 22:58:21,456:INFO:Set up folding strategy.
2024-02-04 22:58:21,456:INFO:Set up train/test split.
2024-02-04 22:58:21,458:INFO:Set up index.
2024-02-04 22:58:21,458:INFO:Assigning column types.
2024-02-04 22:58:21,459:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 22:58:21,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 22:58:21,483:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:58:21,501:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:58:21,502:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:58:21,540:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 22:58:21,541:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:58:21,555:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:58:21,557:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:58:21,558:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 22:58:21,581:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:58:21,596:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:58:21,598:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:58:21,622:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:58:21,698:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:58:21,700:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:58:21,700:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 22:58:21,740:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:58:21,741:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:58:21,781:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:58:21,783:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:58:21,784:INFO:Preparing preprocessing pipeline...
2024-02-04 22:58:21,785:INFO:Set up label encoding.
2024-02-04 22:58:21,785:INFO:Set up simple imputation.
2024-02-04 22:58:21,798:INFO:Finished creating preprocessing pipeline.
2024-02-04 22:58:21,800:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 22:58:21,800:INFO:Creating final display dataframe.
2024-02-04 22:58:21,836:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                    31
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  eafb
2024-02-04 22:58:21,877:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:58:21,879:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:58:21,918:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:58:21,920:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:58:21,920:INFO:setup() successfully completed in 0.54s...............
2024-02-04 22:58:21,920:INFO:Initializing create_model()
2024-02-04 22:58:21,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D3ACC85BD0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:58:21,920:INFO:Checking exceptions
2024-02-04 22:58:21,922:INFO:Importing libraries
2024-02-04 22:58:21,922:INFO:Copying training dataset
2024-02-04 22:58:21,924:INFO:Defining folds
2024-02-04 22:58:21,924:INFO:Declaring metric variables
2024-02-04 22:58:21,924:INFO:Importing untrained model
2024-02-04 22:58:21,924:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 22:58:21,924:INFO:Starting cross validation
2024-02-04 22:58:21,925:INFO:Cross validating with StratifiedKFold(n_splits=31, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:58:25,946:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:25,949:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:25,952:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:25,978:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:25,982:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:25,985:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,058:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,061:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,062:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:58:26,064:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,069:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,072:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,074:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,083:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,086:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,088:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,095:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,098:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,101:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,110:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,113:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,117:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,153:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,156:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,159:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,163:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,166:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,169:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,179:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,181:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,184:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,195:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,197:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,200:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,205:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,208:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,210:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,214:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,217:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,220:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,230:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,233:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,236:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,246:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,249:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,252:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-04 22:58:26,252:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,256:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,258:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,262:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,266:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,268:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,270:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,283:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,285:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,287:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,296:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,297:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,298:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,600:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,601:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,604:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,654:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,656:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:26,658:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,010:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,013:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,016:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,029:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,031:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,032:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,079:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,081:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,082:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,088:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,091:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,092:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,099:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,100:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,101:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,113:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,116:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,118:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,175:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,176:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,177:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,180:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,181:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,182:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,188:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,189:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,190:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,190:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,191:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,191:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:58:27,198:INFO:Calculating mean and std
2024-02-04 22:58:27,199:INFO:Creating metrics dataframe
2024-02-04 22:58:27,200:INFO:Finalizing model
2024-02-04 22:58:27,256:INFO:Uploading results into container
2024-02-04 22:58:27,257:INFO:Uploading model into container now
2024-02-04 22:58:27,265:INFO:_master_model_container: 1
2024-02-04 22:58:27,265:INFO:_display_container: 2
2024-02-04 22:58:27,265:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 22:58:27,265:INFO:create_model() successfully completed......................................
2024-02-04 22:58:27,331:INFO:Initializing predict_model()
2024-02-04 22:58:27,331:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D3ACC85BD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D386BC6480>)
2024-02-04 22:58:27,331:INFO:Checking exceptions
2024-02-04 22:58:27,331:INFO:Preloading libraries
2024-02-04 22:58:27,331:INFO:Set up data.
2024-02-04 22:58:27,333:INFO:Set up index.
2024-02-04 22:58:27,412:INFO:Initializing plot_model()
2024-02-04 22:58:27,412:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D3ACC85BD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 22:58:27,412:INFO:Checking exceptions
2024-02-04 22:58:27,414:INFO:Preloading libraries
2024-02-04 22:58:27,419:INFO:Copying training dataset
2024-02-04 22:58:27,419:INFO:Plot type: auc
2024-02-04 22:58:27,495:INFO:Fitting Model
2024-02-04 22:58:27,496:INFO:Scoring test/hold-out set
2024-02-04 22:58:27,518:INFO:Saving 'AUC.png'
2024-02-04 22:58:27,653:INFO:Visual Rendered Successfully
2024-02-04 22:58:27,716:INFO:plot_model() successfully completed......................................
2024-02-04 22:58:27,717:INFO:Initializing plot_model()
2024-02-04 22:58:27,717:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D3ACC85BD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 22:58:27,717:INFO:Checking exceptions
2024-02-04 22:58:27,718:INFO:Preloading libraries
2024-02-04 22:58:27,722:INFO:Copying training dataset
2024-02-04 22:58:27,722:INFO:Plot type: confusion_matrix
2024-02-04 22:58:27,770:INFO:Fitting Model
2024-02-04 22:58:27,771:INFO:Scoring test/hold-out set
2024-02-04 22:58:27,782:INFO:Saving 'Confusion Matrix.png'
2024-02-04 22:58:27,851:INFO:Visual Rendered Successfully
2024-02-04 22:58:27,909:INFO:plot_model() successfully completed......................................
2024-02-04 22:58:27,909:INFO:Initializing plot_model()
2024-02-04 22:58:27,910:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D3ACC85BD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 22:58:27,910:INFO:Checking exceptions
2024-02-04 22:58:27,911:INFO:Preloading libraries
2024-02-04 22:58:27,915:INFO:Copying training dataset
2024-02-04 22:58:27,915:INFO:Plot type: feature
2024-02-04 22:58:27,916:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 22:58:27,950:INFO:Saving 'Feature Importance.png'
2024-02-04 22:58:28,025:INFO:Visual Rendered Successfully
2024-02-04 22:58:28,082:INFO:plot_model() successfully completed......................................
2024-02-04 22:58:28,083:INFO:Initializing interpret_model()
2024-02-04 22:58:28,083:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D3ACC85BD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 22:58:28,083:INFO:Checking exceptions
2024-02-04 22:58:28,083:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 22:58:28,306:INFO:plot type: summary
2024-02-04 22:58:28,306:INFO:Creating TreeExplainer
2024-02-04 22:58:28,327:INFO:Compiling shap values
2024-02-04 22:58:28,389:INFO:Saving 'SHAP summary.png'
2024-02-04 22:58:28,482:INFO:Visual Rendered Successfully
2024-02-04 22:58:28,482:INFO:interpret_model() successfully completed......................................
2024-02-04 22:59:25,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:59:25,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:59:25,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:59:25,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 22:59:26,265:INFO:PyCaret ClassificationExperiment
2024-02-04 22:59:26,265:INFO:Logging name: clf-default-name
2024-02-04 22:59:26,265:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 22:59:26,265:INFO:version 3.2.0
2024-02-04 22:59:26,265:INFO:Initializing setup()
2024-02-04 22:59:26,265:INFO:self.USI: 1ccb
2024-02-04 22:59:26,265:INFO:self._variable_keys: {'_available_plots', 'logging_param', 'exp_id', 'y_test', 'exp_name_log', 'seed', 'n_jobs_param', 'is_multiclass', 'target_param', 'X', 'pipeline', 'y', 'fold_groups_param', '_ml_usecase', 'log_plots_param', 'html_param', 'X_train', 'fold_shuffle_param', 'fix_imbalance', 'X_test', 'data', 'idx', 'memory', 'gpu_n_jobs_param', 'fold_generator', 'USI', 'y_train', 'gpu_param'}
2024-02-04 22:59:26,265:INFO:Checking environment
2024-02-04 22:59:26,265:INFO:python_version: 3.11.7
2024-02-04 22:59:26,265:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 22:59:26,265:INFO:machine: AMD64
2024-02-04 22:59:26,274:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 22:59:26,278:INFO:Memory: svmem(total=16892026880, available=5515735040, percent=67.3, used=11376291840, free=5515735040)
2024-02-04 22:59:26,278:INFO:Physical Core: 12
2024-02-04 22:59:26,278:INFO:Logical Core: 16
2024-02-04 22:59:26,278:INFO:Checking libraries
2024-02-04 22:59:26,278:INFO:System:
2024-02-04 22:59:26,278:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 22:59:26,278:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 22:59:26,279:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 22:59:26,279:INFO:PyCaret required dependencies:
2024-02-04 22:59:26,307:INFO:                 pip: 23.3.2
2024-02-04 22:59:26,307:INFO:          setuptools: 65.5.0
2024-02-04 22:59:26,307:INFO:             pycaret: 3.2.0
2024-02-04 22:59:26,307:INFO:             IPython: 8.20.0
2024-02-04 22:59:26,307:INFO:          ipywidgets: 8.1.1
2024-02-04 22:59:26,307:INFO:                tqdm: 4.66.1
2024-02-04 22:59:26,307:INFO:               numpy: 1.25.2
2024-02-04 22:59:26,307:INFO:              pandas: 1.5.3
2024-02-04 22:59:26,307:INFO:              jinja2: 3.1.3
2024-02-04 22:59:26,307:INFO:               scipy: 1.10.1
2024-02-04 22:59:26,307:INFO:              joblib: 1.3.2
2024-02-04 22:59:26,307:INFO:             sklearn: 1.2.2
2024-02-04 22:59:26,307:INFO:                pyod: 1.1.2
2024-02-04 22:59:26,307:INFO:            imblearn: 0.12.0
2024-02-04 22:59:26,307:INFO:   category_encoders: 2.6.3
2024-02-04 22:59:26,308:INFO:            lightgbm: 4.3.0
2024-02-04 22:59:26,308:INFO:               numba: 0.58.1
2024-02-04 22:59:26,308:INFO:            requests: 2.31.0
2024-02-04 22:59:26,308:INFO:          matplotlib: 3.6.0
2024-02-04 22:59:26,308:INFO:          scikitplot: 0.3.7
2024-02-04 22:59:26,308:INFO:         yellowbrick: 1.5
2024-02-04 22:59:26,308:INFO:              plotly: 5.18.0
2024-02-04 22:59:26,308:INFO:    plotly-resampler: Not installed
2024-02-04 22:59:26,308:INFO:             kaleido: 0.2.1
2024-02-04 22:59:26,308:INFO:           schemdraw: 0.15
2024-02-04 22:59:26,308:INFO:         statsmodels: 0.14.1
2024-02-04 22:59:26,308:INFO:              sktime: 0.21.1
2024-02-04 22:59:26,308:INFO:               tbats: 1.1.3
2024-02-04 22:59:26,308:INFO:            pmdarima: 2.0.4
2024-02-04 22:59:26,308:INFO:              psutil: 5.9.8
2024-02-04 22:59:26,308:INFO:          markupsafe: 2.1.4
2024-02-04 22:59:26,308:INFO:             pickle5: Not installed
2024-02-04 22:59:26,308:INFO:         cloudpickle: 3.0.0
2024-02-04 22:59:26,308:INFO:         deprecation: 2.1.0
2024-02-04 22:59:26,308:INFO:              xxhash: 3.4.1
2024-02-04 22:59:26,308:INFO:           wurlitzer: Not installed
2024-02-04 22:59:26,308:INFO:PyCaret optional dependencies:
2024-02-04 22:59:26,334:INFO:                shap: 0.44.1
2024-02-04 22:59:26,334:INFO:           interpret: Not installed
2024-02-04 22:59:26,334:INFO:                umap: Not installed
2024-02-04 22:59:26,334:INFO:     ydata_profiling: Not installed
2024-02-04 22:59:26,334:INFO:  explainerdashboard: Not installed
2024-02-04 22:59:26,334:INFO:             autoviz: Not installed
2024-02-04 22:59:26,334:INFO:           fairlearn: Not installed
2024-02-04 22:59:26,334:INFO:          deepchecks: Not installed
2024-02-04 22:59:26,334:INFO:             xgboost: 2.0.3
2024-02-04 22:59:26,334:INFO:            catboost: 1.2.2
2024-02-04 22:59:26,334:INFO:              kmodes: Not installed
2024-02-04 22:59:26,334:INFO:             mlxtend: Not installed
2024-02-04 22:59:26,334:INFO:       statsforecast: Not installed
2024-02-04 22:59:26,334:INFO:        tune_sklearn: Not installed
2024-02-04 22:59:26,335:INFO:                 ray: Not installed
2024-02-04 22:59:26,335:INFO:            hyperopt: Not installed
2024-02-04 22:59:26,335:INFO:              optuna: Not installed
2024-02-04 22:59:26,335:INFO:               skopt: Not installed
2024-02-04 22:59:26,335:INFO:              mlflow: Not installed
2024-02-04 22:59:26,335:INFO:              gradio: Not installed
2024-02-04 22:59:26,335:INFO:             fastapi: Not installed
2024-02-04 22:59:26,335:INFO:             uvicorn: Not installed
2024-02-04 22:59:26,335:INFO:              m2cgen: Not installed
2024-02-04 22:59:26,335:INFO:           evidently: Not installed
2024-02-04 22:59:26,335:INFO:               fugue: Not installed
2024-02-04 22:59:26,335:INFO:           streamlit: Not installed
2024-02-04 22:59:26,335:INFO:             prophet: 1.1.5
2024-02-04 22:59:26,335:INFO:None
2024-02-04 22:59:26,335:INFO:Set up data.
2024-02-04 22:59:26,338:INFO:Set up folding strategy.
2024-02-04 22:59:26,339:INFO:Set up train/test split.
2024-02-04 22:59:26,341:INFO:Set up index.
2024-02-04 22:59:26,341:INFO:Assigning column types.
2024-02-04 22:59:26,343:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 22:59:26,365:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 22:59:26,368:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:59:26,387:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:59:26,388:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:59:26,425:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 22:59:26,425:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:59:26,441:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:59:26,442:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:59:26,443:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 22:59:26,466:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:59:26,481:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:59:26,482:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:59:26,506:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 22:59:26,577:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:59:26,578:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:59:26,579:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 22:59:26,618:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:59:26,619:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:59:26,658:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:59:26,659:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:59:26,660:INFO:Preparing preprocessing pipeline...
2024-02-04 22:59:26,661:INFO:Set up label encoding.
2024-02-04 22:59:26,661:INFO:Set up simple imputation.
2024-02-04 22:59:26,675:INFO:Finished creating preprocessing pipeline.
2024-02-04 22:59:26,678:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 22:59:26,678:INFO:Creating final display dataframe.
2024-02-04 22:59:26,715:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  1ccb
2024-02-04 22:59:26,755:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:59:26,758:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:59:26,797:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 22:59:26,799:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 22:59:26,799:INFO:setup() successfully completed in 0.54s...............
2024-02-04 22:59:26,799:INFO:Initializing create_model()
2024-02-04 22:59:26,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237575C7A10>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 22:59:26,799:INFO:Checking exceptions
2024-02-04 22:59:26,801:INFO:Importing libraries
2024-02-04 22:59:26,801:INFO:Copying training dataset
2024-02-04 22:59:26,803:INFO:Defining folds
2024-02-04 22:59:26,803:INFO:Declaring metric variables
2024-02-04 22:59:26,803:INFO:Importing untrained model
2024-02-04 22:59:26,804:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 22:59:26,804:INFO:Starting cross validation
2024-02-04 22:59:26,805:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 22:59:29,388:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,390:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,391:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,404:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,405:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,406:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,524:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,525:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,526:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,559:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,560:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,560:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,561:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,562:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 22:59:29,565:INFO:Calculating mean and std
2024-02-04 22:59:29,566:INFO:Creating metrics dataframe
2024-02-04 22:59:29,567:INFO:Finalizing model
2024-02-04 22:59:29,622:INFO:Uploading results into container
2024-02-04 22:59:29,623:INFO:Uploading model into container now
2024-02-04 22:59:29,627:INFO:_master_model_container: 1
2024-02-04 22:59:29,627:INFO:_display_container: 2
2024-02-04 22:59:29,628:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 22:59:29,628:INFO:create_model() successfully completed......................................
2024-02-04 22:59:29,692:INFO:Initializing predict_model()
2024-02-04 22:59:29,692:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237575C7A10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000237314C6480>)
2024-02-04 22:59:29,693:INFO:Checking exceptions
2024-02-04 22:59:29,693:INFO:Preloading libraries
2024-02-04 22:59:29,693:INFO:Set up data.
2024-02-04 22:59:29,694:INFO:Set up index.
2024-02-04 22:59:29,772:INFO:Initializing plot_model()
2024-02-04 22:59:29,772:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237575C7A10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 22:59:29,772:INFO:Checking exceptions
2024-02-04 22:59:29,774:INFO:Preloading libraries
2024-02-04 22:59:29,778:INFO:Copying training dataset
2024-02-04 22:59:29,778:INFO:Plot type: auc
2024-02-04 22:59:29,855:INFO:Fitting Model
2024-02-04 22:59:29,856:INFO:Scoring test/hold-out set
2024-02-04 22:59:29,871:INFO:Saving 'AUC.png'
2024-02-04 22:59:29,999:INFO:Visual Rendered Successfully
2024-02-04 22:59:30,062:INFO:plot_model() successfully completed......................................
2024-02-04 22:59:30,063:INFO:Initializing plot_model()
2024-02-04 22:59:30,063:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237575C7A10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 22:59:30,063:INFO:Checking exceptions
2024-02-04 22:59:30,064:INFO:Preloading libraries
2024-02-04 22:59:30,069:INFO:Copying training dataset
2024-02-04 22:59:30,069:INFO:Plot type: confusion_matrix
2024-02-04 22:59:30,114:INFO:Fitting Model
2024-02-04 22:59:30,115:INFO:Scoring test/hold-out set
2024-02-04 22:59:30,126:INFO:Saving 'Confusion Matrix.png'
2024-02-04 22:59:30,193:INFO:Visual Rendered Successfully
2024-02-04 22:59:30,251:INFO:plot_model() successfully completed......................................
2024-02-04 22:59:30,252:INFO:Initializing plot_model()
2024-02-04 22:59:30,252:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237575C7A10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 22:59:30,252:INFO:Checking exceptions
2024-02-04 22:59:30,253:INFO:Preloading libraries
2024-02-04 22:59:30,257:INFO:Copying training dataset
2024-02-04 22:59:30,257:INFO:Plot type: feature
2024-02-04 22:59:30,257:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 22:59:30,280:INFO:Saving 'Feature Importance.png'
2024-02-04 22:59:30,357:INFO:Visual Rendered Successfully
2024-02-04 22:59:30,413:INFO:plot_model() successfully completed......................................
2024-02-04 22:59:30,414:INFO:Initializing interpret_model()
2024-02-04 22:59:30,414:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237575C7A10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 22:59:30,414:INFO:Checking exceptions
2024-02-04 22:59:30,414:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 22:59:30,645:INFO:plot type: summary
2024-02-04 22:59:30,645:INFO:Creating TreeExplainer
2024-02-04 22:59:30,665:INFO:Compiling shap values
2024-02-04 22:59:30,733:INFO:Saving 'SHAP summary.png'
2024-02-04 22:59:30,835:INFO:Visual Rendered Successfully
2024-02-04 22:59:30,835:INFO:interpret_model() successfully completed......................................
2024-02-04 23:01:48,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 23:01:48,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 23:01:48,258:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 23:01:48,258:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-04 23:01:49,021:INFO:PyCaret ClassificationExperiment
2024-02-04 23:01:49,021:INFO:Logging name: clf-default-name
2024-02-04 23:01:49,021:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-04 23:01:49,021:INFO:version 3.2.0
2024-02-04 23:01:49,021:INFO:Initializing setup()
2024-02-04 23:01:49,021:INFO:self.USI: 12a7
2024-02-04 23:01:49,021:INFO:self._variable_keys: {'fold_generator', 'fold_shuffle_param', 'gpu_n_jobs_param', 'exp_id', 'exp_name_log', 'X', 'pipeline', 'n_jobs_param', '_ml_usecase', 'y_test', 'fold_groups_param', 'USI', 'memory', 'data', 'y', 'target_param', 'fix_imbalance', 'idx', 'is_multiclass', 'X_train', 'gpu_param', 'logging_param', 'seed', 'X_test', 'y_train', '_available_plots', 'html_param', 'log_plots_param'}
2024-02-04 23:01:49,021:INFO:Checking environment
2024-02-04 23:01:49,021:INFO:python_version: 3.11.7
2024-02-04 23:01:49,021:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-04 23:01:49,021:INFO:machine: AMD64
2024-02-04 23:01:49,031:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-04 23:01:49,035:INFO:Memory: svmem(total=16892026880, available=5352796160, percent=68.3, used=11539230720, free=5352796160)
2024-02-04 23:01:49,035:INFO:Physical Core: 12
2024-02-04 23:01:49,035:INFO:Logical Core: 16
2024-02-04 23:01:49,035:INFO:Checking libraries
2024-02-04 23:01:49,035:INFO:System:
2024-02-04 23:01:49,035:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-04 23:01:49,035:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-04 23:01:49,035:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-04 23:01:49,035:INFO:PyCaret required dependencies:
2024-02-04 23:01:49,063:INFO:                 pip: 23.3.2
2024-02-04 23:01:49,063:INFO:          setuptools: 65.5.0
2024-02-04 23:01:49,063:INFO:             pycaret: 3.2.0
2024-02-04 23:01:49,063:INFO:             IPython: 8.20.0
2024-02-04 23:01:49,063:INFO:          ipywidgets: 8.1.1
2024-02-04 23:01:49,063:INFO:                tqdm: 4.66.1
2024-02-04 23:01:49,063:INFO:               numpy: 1.25.2
2024-02-04 23:01:49,063:INFO:              pandas: 1.5.3
2024-02-04 23:01:49,063:INFO:              jinja2: 3.1.3
2024-02-04 23:01:49,063:INFO:               scipy: 1.10.1
2024-02-04 23:01:49,063:INFO:              joblib: 1.3.2
2024-02-04 23:01:49,063:INFO:             sklearn: 1.2.2
2024-02-04 23:01:49,063:INFO:                pyod: 1.1.2
2024-02-04 23:01:49,063:INFO:            imblearn: 0.12.0
2024-02-04 23:01:49,063:INFO:   category_encoders: 2.6.3
2024-02-04 23:01:49,063:INFO:            lightgbm: 4.3.0
2024-02-04 23:01:49,063:INFO:               numba: 0.58.1
2024-02-04 23:01:49,063:INFO:            requests: 2.31.0
2024-02-04 23:01:49,063:INFO:          matplotlib: 3.6.0
2024-02-04 23:01:49,063:INFO:          scikitplot: 0.3.7
2024-02-04 23:01:49,063:INFO:         yellowbrick: 1.5
2024-02-04 23:01:49,063:INFO:              plotly: 5.18.0
2024-02-04 23:01:49,063:INFO:    plotly-resampler: Not installed
2024-02-04 23:01:49,063:INFO:             kaleido: 0.2.1
2024-02-04 23:01:49,063:INFO:           schemdraw: 0.15
2024-02-04 23:01:49,063:INFO:         statsmodels: 0.14.1
2024-02-04 23:01:49,063:INFO:              sktime: 0.21.1
2024-02-04 23:01:49,063:INFO:               tbats: 1.1.3
2024-02-04 23:01:49,063:INFO:            pmdarima: 2.0.4
2024-02-04 23:01:49,063:INFO:              psutil: 5.9.8
2024-02-04 23:01:49,064:INFO:          markupsafe: 2.1.4
2024-02-04 23:01:49,064:INFO:             pickle5: Not installed
2024-02-04 23:01:49,064:INFO:         cloudpickle: 3.0.0
2024-02-04 23:01:49,064:INFO:         deprecation: 2.1.0
2024-02-04 23:01:49,064:INFO:              xxhash: 3.4.1
2024-02-04 23:01:49,064:INFO:           wurlitzer: Not installed
2024-02-04 23:01:49,064:INFO:PyCaret optional dependencies:
2024-02-04 23:01:49,091:INFO:                shap: 0.44.1
2024-02-04 23:01:49,091:INFO:           interpret: Not installed
2024-02-04 23:01:49,091:INFO:                umap: Not installed
2024-02-04 23:01:49,091:INFO:     ydata_profiling: Not installed
2024-02-04 23:01:49,091:INFO:  explainerdashboard: Not installed
2024-02-04 23:01:49,091:INFO:             autoviz: Not installed
2024-02-04 23:01:49,091:INFO:           fairlearn: Not installed
2024-02-04 23:01:49,091:INFO:          deepchecks: Not installed
2024-02-04 23:01:49,091:INFO:             xgboost: 2.0.3
2024-02-04 23:01:49,091:INFO:            catboost: 1.2.2
2024-02-04 23:01:49,091:INFO:              kmodes: Not installed
2024-02-04 23:01:49,091:INFO:             mlxtend: Not installed
2024-02-04 23:01:49,091:INFO:       statsforecast: Not installed
2024-02-04 23:01:49,091:INFO:        tune_sklearn: Not installed
2024-02-04 23:01:49,091:INFO:                 ray: Not installed
2024-02-04 23:01:49,091:INFO:            hyperopt: Not installed
2024-02-04 23:01:49,091:INFO:              optuna: Not installed
2024-02-04 23:01:49,091:INFO:               skopt: Not installed
2024-02-04 23:01:49,091:INFO:              mlflow: Not installed
2024-02-04 23:01:49,091:INFO:              gradio: Not installed
2024-02-04 23:01:49,091:INFO:             fastapi: Not installed
2024-02-04 23:01:49,091:INFO:             uvicorn: Not installed
2024-02-04 23:01:49,091:INFO:              m2cgen: Not installed
2024-02-04 23:01:49,091:INFO:           evidently: Not installed
2024-02-04 23:01:49,091:INFO:               fugue: Not installed
2024-02-04 23:01:49,091:INFO:           streamlit: Not installed
2024-02-04 23:01:49,091:INFO:             prophet: 1.1.5
2024-02-04 23:01:49,091:INFO:None
2024-02-04 23:01:49,091:INFO:Set up data.
2024-02-04 23:01:49,095:INFO:Set up folding strategy.
2024-02-04 23:01:49,095:INFO:Set up train/test split.
2024-02-04 23:01:49,097:INFO:Set up index.
2024-02-04 23:01:49,097:INFO:Assigning column types.
2024-02-04 23:01:49,099:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-04 23:01:49,121:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 23:01:49,123:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 23:01:49,146:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 23:01:49,147:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 23:01:49,185:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-04 23:01:49,185:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 23:01:49,201:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 23:01:49,202:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 23:01:49,203:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-04 23:01:49,227:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 23:01:49,240:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 23:01:49,242:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 23:01:49,266:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-04 23:01:49,341:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 23:01:49,343:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 23:01:49,343:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-04 23:01:49,382:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 23:01:49,384:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 23:01:49,424:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 23:01:49,425:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 23:01:49,427:INFO:Preparing preprocessing pipeline...
2024-02-04 23:01:49,428:INFO:Set up label encoding.
2024-02-04 23:01:49,428:INFO:Set up simple imputation.
2024-02-04 23:01:49,441:INFO:Finished creating preprocessing pipeline.
2024-02-04 23:01:49,444:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-04 23:01:49,444:INFO:Creating final display dataframe.
2024-02-04 23:01:49,483:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  12a7
2024-02-04 23:01:49,524:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 23:01:49,526:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 23:01:49,566:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-04 23:01:49,567:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-04 23:01:49,568:INFO:setup() successfully completed in 0.55s...............
2024-02-04 23:01:49,568:INFO:Initializing create_model()
2024-02-04 23:01:49,568:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018005CA7A90>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-04 23:01:49,568:INFO:Checking exceptions
2024-02-04 23:01:49,570:INFO:Importing libraries
2024-02-04 23:01:49,570:INFO:Copying training dataset
2024-02-04 23:01:49,571:INFO:Defining folds
2024-02-04 23:01:49,571:INFO:Declaring metric variables
2024-02-04 23:01:49,572:INFO:Importing untrained model
2024-02-04 23:01:49,572:INFO:Extreme Gradient Boosting Imported successfully
2024-02-04 23:01:49,572:INFO:Starting cross validation
2024-02-04 23:01:49,573:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-04 23:01:52,174:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,175:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,178:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,233:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,235:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,236:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,325:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,325:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,327:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,366:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,368:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,368:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,369:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,370:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,371:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-04 23:01:52,378:INFO:Calculating mean and std
2024-02-04 23:01:52,379:INFO:Creating metrics dataframe
2024-02-04 23:01:52,381:INFO:Finalizing model
2024-02-04 23:01:52,429:INFO:Uploading results into container
2024-02-04 23:01:52,430:INFO:Uploading model into container now
2024-02-04 23:01:52,435:INFO:_master_model_container: 1
2024-02-04 23:01:52,435:INFO:_display_container: 2
2024-02-04 23:01:52,435:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-04 23:01:52,435:INFO:create_model() successfully completed......................................
2024-02-04 23:01:52,503:INFO:Initializing predict_model()
2024-02-04 23:01:52,503:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018005CA7A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001805FA46480>)
2024-02-04 23:01:52,503:INFO:Checking exceptions
2024-02-04 23:01:52,503:INFO:Preloading libraries
2024-02-04 23:01:52,503:INFO:Set up data.
2024-02-04 23:01:52,505:INFO:Set up index.
2024-02-04 23:01:52,585:INFO:Initializing plot_model()
2024-02-04 23:01:52,586:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018005CA7A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 23:01:52,586:INFO:Checking exceptions
2024-02-04 23:01:52,589:INFO:Preloading libraries
2024-02-04 23:01:52,593:INFO:Copying training dataset
2024-02-04 23:01:52,593:INFO:Plot type: auc
2024-02-04 23:01:52,669:INFO:Fitting Model
2024-02-04 23:01:52,670:INFO:Scoring test/hold-out set
2024-02-04 23:01:52,685:INFO:Saving 'AUC.png'
2024-02-04 23:01:52,815:INFO:Visual Rendered Successfully
2024-02-04 23:01:52,878:INFO:plot_model() successfully completed......................................
2024-02-04 23:01:52,879:INFO:Initializing plot_model()
2024-02-04 23:01:52,879:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018005CA7A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 23:01:52,879:INFO:Checking exceptions
2024-02-04 23:01:52,880:INFO:Preloading libraries
2024-02-04 23:01:52,885:INFO:Copying training dataset
2024-02-04 23:01:52,885:INFO:Plot type: confusion_matrix
2024-02-04 23:01:52,950:INFO:Fitting Model
2024-02-04 23:01:52,951:INFO:Scoring test/hold-out set
2024-02-04 23:01:52,967:INFO:Saving 'Confusion Matrix.png'
2024-02-04 23:01:53,045:INFO:Visual Rendered Successfully
2024-02-04 23:01:53,103:INFO:plot_model() successfully completed......................................
2024-02-04 23:01:53,104:INFO:Initializing plot_model()
2024-02-04 23:01:53,104:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018005CA7A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-04 23:01:53,104:INFO:Checking exceptions
2024-02-04 23:01:53,106:INFO:Preloading libraries
2024-02-04 23:01:53,110:INFO:Copying training dataset
2024-02-04 23:01:53,111:INFO:Plot type: feature
2024-02-04 23:01:53,111:WARNING:No coef_ found. Trying feature_importances_
2024-02-04 23:01:53,135:INFO:Saving 'Feature Importance.png'
2024-02-04 23:01:53,210:INFO:Visual Rendered Successfully
2024-02-04 23:01:53,269:INFO:plot_model() successfully completed......................................
2024-02-04 23:01:53,270:INFO:Initializing interpret_model()
2024-02-04 23:01:53,270:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018005CA7A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-04 23:01:53,270:INFO:Checking exceptions
2024-02-04 23:01:53,270:INFO:Soft dependency imported: shap: 0.44.1
2024-02-04 23:01:53,508:INFO:plot type: summary
2024-02-04 23:01:53,508:INFO:Creating TreeExplainer
2024-02-04 23:01:53,529:INFO:Compiling shap values
2024-02-04 23:01:53,598:INFO:Saving 'SHAP summary.png'
2024-02-04 23:01:53,695:INFO:Visual Rendered Successfully
2024-02-04 23:01:53,695:INFO:interpret_model() successfully completed......................................
2024-02-05 11:01:28,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 11:01:28,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 11:01:28,572:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 11:01:28,572:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 11:01:29,885:INFO:PyCaret ClassificationExperiment
2024-02-05 11:01:29,885:INFO:Logging name: clf-default-name
2024-02-05 11:01:29,885:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 11:01:29,886:INFO:version 3.2.0
2024-02-05 11:01:29,886:INFO:Initializing setup()
2024-02-05 11:01:29,886:INFO:self.USI: 4002
2024-02-05 11:01:29,886:INFO:self._variable_keys: {'exp_name_log', 'pipeline', 'seed', 'USI', 'n_jobs_param', '_ml_usecase', 'X_test', 'html_param', 'fold_groups_param', 'gpu_param', 'data', 'logging_param', 'exp_id', 'X', 'memory', 'fold_generator', 'y_train', 'y', 'gpu_n_jobs_param', '_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'log_plots_param', 'is_multiclass', 'y_test', 'X_train', 'idx', 'target_param'}
2024-02-05 11:01:29,886:INFO:Checking environment
2024-02-05 11:01:29,886:INFO:python_version: 3.11.7
2024-02-05 11:01:29,886:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 11:01:29,886:INFO:machine: AMD64
2024-02-05 11:01:29,893:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 11:01:29,896:INFO:Memory: svmem(total=16892026880, available=6722195456, percent=60.2, used=10169831424, free=6722195456)
2024-02-05 11:01:29,896:INFO:Physical Core: 12
2024-02-05 11:01:29,896:INFO:Logical Core: 16
2024-02-05 11:01:29,896:INFO:Checking libraries
2024-02-05 11:01:29,896:INFO:System:
2024-02-05 11:01:29,896:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 11:01:29,896:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 11:01:29,896:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 11:01:29,896:INFO:PyCaret required dependencies:
2024-02-05 11:01:29,944:INFO:                 pip: 23.3.2
2024-02-05 11:01:29,944:INFO:          setuptools: 65.5.0
2024-02-05 11:01:29,944:INFO:             pycaret: 3.2.0
2024-02-05 11:01:29,944:INFO:             IPython: 8.20.0
2024-02-05 11:01:29,944:INFO:          ipywidgets: 8.1.1
2024-02-05 11:01:29,945:INFO:                tqdm: 4.66.1
2024-02-05 11:01:29,945:INFO:               numpy: 1.25.2
2024-02-05 11:01:29,945:INFO:              pandas: 1.5.3
2024-02-05 11:01:29,945:INFO:              jinja2: 3.1.3
2024-02-05 11:01:29,945:INFO:               scipy: 1.10.1
2024-02-05 11:01:29,945:INFO:              joblib: 1.3.2
2024-02-05 11:01:29,945:INFO:             sklearn: 1.2.2
2024-02-05 11:01:29,945:INFO:                pyod: 1.1.2
2024-02-05 11:01:29,945:INFO:            imblearn: 0.12.0
2024-02-05 11:01:29,945:INFO:   category_encoders: 2.6.3
2024-02-05 11:01:29,945:INFO:            lightgbm: 4.3.0
2024-02-05 11:01:29,945:INFO:               numba: 0.58.1
2024-02-05 11:01:29,945:INFO:            requests: 2.31.0
2024-02-05 11:01:29,945:INFO:          matplotlib: 3.6.0
2024-02-05 11:01:29,945:INFO:          scikitplot: 0.3.7
2024-02-05 11:01:29,945:INFO:         yellowbrick: 1.5
2024-02-05 11:01:29,945:INFO:              plotly: 5.18.0
2024-02-05 11:01:29,945:INFO:    plotly-resampler: Not installed
2024-02-05 11:01:29,945:INFO:             kaleido: 0.2.1
2024-02-05 11:01:29,945:INFO:           schemdraw: 0.15
2024-02-05 11:01:29,945:INFO:         statsmodels: 0.14.1
2024-02-05 11:01:29,945:INFO:              sktime: 0.21.1
2024-02-05 11:01:29,945:INFO:               tbats: 1.1.3
2024-02-05 11:01:29,945:INFO:            pmdarima: 2.0.4
2024-02-05 11:01:29,945:INFO:              psutil: 5.9.8
2024-02-05 11:01:29,945:INFO:          markupsafe: 2.1.4
2024-02-05 11:01:29,945:INFO:             pickle5: Not installed
2024-02-05 11:01:29,945:INFO:         cloudpickle: 3.0.0
2024-02-05 11:01:29,945:INFO:         deprecation: 2.1.0
2024-02-05 11:01:29,945:INFO:              xxhash: 3.4.1
2024-02-05 11:01:29,945:INFO:           wurlitzer: Not installed
2024-02-05 11:01:29,945:INFO:PyCaret optional dependencies:
2024-02-05 11:01:30,005:INFO:                shap: 0.44.1
2024-02-05 11:01:30,005:INFO:           interpret: Not installed
2024-02-05 11:01:30,005:INFO:                umap: Not installed
2024-02-05 11:01:30,005:INFO:     ydata_profiling: Not installed
2024-02-05 11:01:30,005:INFO:  explainerdashboard: Not installed
2024-02-05 11:01:30,005:INFO:             autoviz: Not installed
2024-02-05 11:01:30,005:INFO:           fairlearn: Not installed
2024-02-05 11:01:30,005:INFO:          deepchecks: Not installed
2024-02-05 11:01:30,005:INFO:             xgboost: 2.0.3
2024-02-05 11:01:30,005:INFO:            catboost: 1.2.2
2024-02-05 11:01:30,005:INFO:              kmodes: Not installed
2024-02-05 11:01:30,005:INFO:             mlxtend: Not installed
2024-02-05 11:01:30,005:INFO:       statsforecast: Not installed
2024-02-05 11:01:30,005:INFO:        tune_sklearn: Not installed
2024-02-05 11:01:30,005:INFO:                 ray: Not installed
2024-02-05 11:01:30,005:INFO:            hyperopt: Not installed
2024-02-05 11:01:30,005:INFO:              optuna: Not installed
2024-02-05 11:01:30,005:INFO:               skopt: Not installed
2024-02-05 11:01:30,005:INFO:              mlflow: Not installed
2024-02-05 11:01:30,005:INFO:              gradio: Not installed
2024-02-05 11:01:30,005:INFO:             fastapi: Not installed
2024-02-05 11:01:30,005:INFO:             uvicorn: Not installed
2024-02-05 11:01:30,005:INFO:              m2cgen: Not installed
2024-02-05 11:01:30,005:INFO:           evidently: Not installed
2024-02-05 11:01:30,005:INFO:               fugue: Not installed
2024-02-05 11:01:30,005:INFO:           streamlit: Not installed
2024-02-05 11:01:30,005:INFO:             prophet: 1.1.5
2024-02-05 11:01:30,005:INFO:None
2024-02-05 11:01:30,005:INFO:Set up data.
2024-02-05 11:01:30,010:INFO:Set up folding strategy.
2024-02-05 11:01:30,010:INFO:Set up train/test split.
2024-02-05 11:01:30,014:INFO:Set up index.
2024-02-05 11:01:30,015:INFO:Assigning column types.
2024-02-05 11:01:30,016:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 11:01:30,042:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 11:01:30,043:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 11:01:30,064:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:30,066:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:30,186:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 11:01:30,187:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 11:01:30,205:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:30,207:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:30,207:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 11:01:30,233:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 11:01:30,251:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:30,252:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:30,281:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 11:01:30,365:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:30,366:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:30,367:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 11:01:30,409:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:30,410:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:30,452:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:30,453:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:30,457:INFO:Preparing preprocessing pipeline...
2024-02-05 11:01:30,458:INFO:Set up label encoding.
2024-02-05 11:01:30,458:INFO:Set up simple imputation.
2024-02-05 11:01:30,475:INFO:Finished creating preprocessing pipeline.
2024-02-05 11:01:30,478:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 11:01:30,478:INFO:Creating final display dataframe.
2024-02-05 11:01:30,531:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (155, 8)
5        Transformed data shape              (155, 8)
6   Transformed train set shape              (108, 8)
7    Transformed test set shape               (47, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  4002
2024-02-05 11:01:30,573:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:30,575:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:30,616:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:30,617:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:30,618:INFO:setup() successfully completed in 0.74s...............
2024-02-05 11:01:30,618:INFO:Initializing create_model()
2024-02-05 11:01:30,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018C7FF48250>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 11:01:30,618:INFO:Checking exceptions
2024-02-05 11:01:30,622:INFO:Importing libraries
2024-02-05 11:01:30,622:INFO:Copying training dataset
2024-02-05 11:01:30,624:INFO:Defining folds
2024-02-05 11:01:30,624:INFO:Declaring metric variables
2024-02-05 11:01:30,624:INFO:Importing untrained model
2024-02-05 11:01:30,625:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 11:01:30,625:INFO:Starting cross validation
2024-02-05 11:01:30,626:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 11:01:33,473:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,475:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,476:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,477:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,480:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,483:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,604:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,605:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,607:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,608:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,609:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,610:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,632:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,633:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,635:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:33,638:INFO:Calculating mean and std
2024-02-05 11:01:33,641:INFO:Creating metrics dataframe
2024-02-05 11:01:33,642:INFO:Finalizing model
2024-02-05 11:01:33,713:INFO:Uploading results into container
2024-02-05 11:01:33,714:INFO:Uploading model into container now
2024-02-05 11:01:33,723:INFO:_master_model_container: 1
2024-02-05 11:01:33,723:INFO:_display_container: 2
2024-02-05 11:01:33,723:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 11:01:33,724:INFO:create_model() successfully completed......................................
2024-02-05 11:01:33,794:INFO:Initializing predict_model()
2024-02-05 11:01:33,794:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018C7FF48250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018C7D006480>)
2024-02-05 11:01:33,794:INFO:Checking exceptions
2024-02-05 11:01:33,794:INFO:Preloading libraries
2024-02-05 11:01:33,795:INFO:Set up data.
2024-02-05 11:01:33,798:INFO:Set up index.
2024-02-05 11:01:33,893:INFO:Initializing plot_model()
2024-02-05 11:01:33,893:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018C7FF48250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 11:01:33,893:INFO:Checking exceptions
2024-02-05 11:01:33,895:INFO:Preloading libraries
2024-02-05 11:01:33,899:INFO:Copying training dataset
2024-02-05 11:01:33,899:INFO:Plot type: auc
2024-02-05 11:01:33,998:INFO:Fitting Model
2024-02-05 11:01:33,998:INFO:Scoring test/hold-out set
2024-02-05 11:01:34,013:INFO:Saving 'AUC.png'
2024-02-05 11:01:34,165:INFO:Visual Rendered Successfully
2024-02-05 11:01:34,226:INFO:plot_model() successfully completed......................................
2024-02-05 11:01:34,227:INFO:Initializing plot_model()
2024-02-05 11:01:34,227:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018C7FF48250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 11:01:34,227:INFO:Checking exceptions
2024-02-05 11:01:34,228:INFO:Preloading libraries
2024-02-05 11:01:34,232:INFO:Copying training dataset
2024-02-05 11:01:34,232:INFO:Plot type: confusion_matrix
2024-02-05 11:01:34,281:INFO:Fitting Model
2024-02-05 11:01:34,282:INFO:Scoring test/hold-out set
2024-02-05 11:01:34,293:INFO:Saving 'Confusion Matrix.png'
2024-02-05 11:01:34,372:INFO:Visual Rendered Successfully
2024-02-05 11:01:34,430:INFO:plot_model() successfully completed......................................
2024-02-05 11:01:34,431:INFO:Initializing plot_model()
2024-02-05 11:01:34,431:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018C7FF48250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 11:01:34,431:INFO:Checking exceptions
2024-02-05 11:01:34,432:INFO:Preloading libraries
2024-02-05 11:01:34,436:INFO:Copying training dataset
2024-02-05 11:01:34,436:INFO:Plot type: feature
2024-02-05 11:01:34,437:WARNING:No coef_ found. Trying feature_importances_
2024-02-05 11:01:34,462:INFO:Saving 'Feature Importance.png'
2024-02-05 11:01:34,540:INFO:Visual Rendered Successfully
2024-02-05 11:01:34,602:INFO:plot_model() successfully completed......................................
2024-02-05 11:01:34,602:INFO:Initializing interpret_model()
2024-02-05 11:01:34,602:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018C7FF48250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-05 11:01:34,602:INFO:Checking exceptions
2024-02-05 11:01:34,602:INFO:Soft dependency imported: shap: 0.44.1
2024-02-05 11:01:35,107:INFO:plot type: summary
2024-02-05 11:01:35,107:INFO:Creating TreeExplainer
2024-02-05 11:01:35,123:INFO:Compiling shap values
2024-02-05 11:01:35,190:INFO:Saving 'SHAP summary.png'
2024-02-05 11:01:35,294:INFO:Visual Rendered Successfully
2024-02-05 11:01:35,294:INFO:interpret_model() successfully completed......................................
2024-02-05 11:01:48,593:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 11:01:48,593:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 11:01:48,593:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 11:01:48,593:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 11:01:49,432:INFO:PyCaret ClassificationExperiment
2024-02-05 11:01:49,432:INFO:Logging name: clf-default-name
2024-02-05 11:01:49,432:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 11:01:49,432:INFO:version 3.2.0
2024-02-05 11:01:49,432:INFO:Initializing setup()
2024-02-05 11:01:49,432:INFO:self.USI: 0943
2024-02-05 11:01:49,432:INFO:self._variable_keys: {'exp_name_log', 'n_jobs_param', 'data', 'exp_id', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'idx', 'log_plots_param', 'target_param', 'X_train', 'pipeline', 'y_test', '_ml_usecase', 'X_test', 'seed', 'html_param', 'logging_param', 'fold_generator', 'USI', '_available_plots', 'y_train', 'fix_imbalance', 'y', 'X', 'fold_groups_param', 'gpu_n_jobs_param', 'memory'}
2024-02-05 11:01:49,432:INFO:Checking environment
2024-02-05 11:01:49,432:INFO:python_version: 3.11.7
2024-02-05 11:01:49,432:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 11:01:49,432:INFO:machine: AMD64
2024-02-05 11:01:49,440:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 11:01:49,442:INFO:Memory: svmem(total=16892026880, available=6495252480, percent=61.5, used=10396774400, free=6495252480)
2024-02-05 11:01:49,442:INFO:Physical Core: 12
2024-02-05 11:01:49,442:INFO:Logical Core: 16
2024-02-05 11:01:49,442:INFO:Checking libraries
2024-02-05 11:01:49,442:INFO:System:
2024-02-05 11:01:49,442:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 11:01:49,442:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 11:01:49,442:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 11:01:49,442:INFO:PyCaret required dependencies:
2024-02-05 11:01:49,472:INFO:                 pip: 23.3.2
2024-02-05 11:01:49,472:INFO:          setuptools: 65.5.0
2024-02-05 11:01:49,472:INFO:             pycaret: 3.2.0
2024-02-05 11:01:49,472:INFO:             IPython: 8.20.0
2024-02-05 11:01:49,472:INFO:          ipywidgets: 8.1.1
2024-02-05 11:01:49,472:INFO:                tqdm: 4.66.1
2024-02-05 11:01:49,472:INFO:               numpy: 1.25.2
2024-02-05 11:01:49,472:INFO:              pandas: 1.5.3
2024-02-05 11:01:49,472:INFO:              jinja2: 3.1.3
2024-02-05 11:01:49,472:INFO:               scipy: 1.10.1
2024-02-05 11:01:49,472:INFO:              joblib: 1.3.2
2024-02-05 11:01:49,472:INFO:             sklearn: 1.2.2
2024-02-05 11:01:49,472:INFO:                pyod: 1.1.2
2024-02-05 11:01:49,472:INFO:            imblearn: 0.12.0
2024-02-05 11:01:49,472:INFO:   category_encoders: 2.6.3
2024-02-05 11:01:49,472:INFO:            lightgbm: 4.3.0
2024-02-05 11:01:49,472:INFO:               numba: 0.58.1
2024-02-05 11:01:49,472:INFO:            requests: 2.31.0
2024-02-05 11:01:49,472:INFO:          matplotlib: 3.6.0
2024-02-05 11:01:49,472:INFO:          scikitplot: 0.3.7
2024-02-05 11:01:49,472:INFO:         yellowbrick: 1.5
2024-02-05 11:01:49,472:INFO:              plotly: 5.18.0
2024-02-05 11:01:49,472:INFO:    plotly-resampler: Not installed
2024-02-05 11:01:49,472:INFO:             kaleido: 0.2.1
2024-02-05 11:01:49,473:INFO:           schemdraw: 0.15
2024-02-05 11:01:49,473:INFO:         statsmodels: 0.14.1
2024-02-05 11:01:49,473:INFO:              sktime: 0.21.1
2024-02-05 11:01:49,473:INFO:               tbats: 1.1.3
2024-02-05 11:01:49,473:INFO:            pmdarima: 2.0.4
2024-02-05 11:01:49,473:INFO:              psutil: 5.9.8
2024-02-05 11:01:49,473:INFO:          markupsafe: 2.1.4
2024-02-05 11:01:49,473:INFO:             pickle5: Not installed
2024-02-05 11:01:49,473:INFO:         cloudpickle: 3.0.0
2024-02-05 11:01:49,473:INFO:         deprecation: 2.1.0
2024-02-05 11:01:49,473:INFO:              xxhash: 3.4.1
2024-02-05 11:01:49,473:INFO:           wurlitzer: Not installed
2024-02-05 11:01:49,473:INFO:PyCaret optional dependencies:
2024-02-05 11:01:49,503:INFO:                shap: 0.44.1
2024-02-05 11:01:49,503:INFO:           interpret: Not installed
2024-02-05 11:01:49,503:INFO:                umap: Not installed
2024-02-05 11:01:49,503:INFO:     ydata_profiling: Not installed
2024-02-05 11:01:49,504:INFO:  explainerdashboard: Not installed
2024-02-05 11:01:49,504:INFO:             autoviz: Not installed
2024-02-05 11:01:49,504:INFO:           fairlearn: Not installed
2024-02-05 11:01:49,504:INFO:          deepchecks: Not installed
2024-02-05 11:01:49,504:INFO:             xgboost: 2.0.3
2024-02-05 11:01:49,504:INFO:            catboost: 1.2.2
2024-02-05 11:01:49,504:INFO:              kmodes: Not installed
2024-02-05 11:01:49,504:INFO:             mlxtend: Not installed
2024-02-05 11:01:49,504:INFO:       statsforecast: Not installed
2024-02-05 11:01:49,504:INFO:        tune_sklearn: Not installed
2024-02-05 11:01:49,504:INFO:                 ray: Not installed
2024-02-05 11:01:49,504:INFO:            hyperopt: Not installed
2024-02-05 11:01:49,504:INFO:              optuna: Not installed
2024-02-05 11:01:49,504:INFO:               skopt: Not installed
2024-02-05 11:01:49,504:INFO:              mlflow: Not installed
2024-02-05 11:01:49,504:INFO:              gradio: Not installed
2024-02-05 11:01:49,504:INFO:             fastapi: Not installed
2024-02-05 11:01:49,504:INFO:             uvicorn: Not installed
2024-02-05 11:01:49,504:INFO:              m2cgen: Not installed
2024-02-05 11:01:49,504:INFO:           evidently: Not installed
2024-02-05 11:01:49,504:INFO:               fugue: Not installed
2024-02-05 11:01:49,504:INFO:           streamlit: Not installed
2024-02-05 11:01:49,504:INFO:             prophet: 1.1.5
2024-02-05 11:01:49,504:INFO:None
2024-02-05 11:01:49,504:INFO:Set up data.
2024-02-05 11:01:49,508:INFO:Set up folding strategy.
2024-02-05 11:01:49,508:INFO:Set up train/test split.
2024-02-05 11:01:49,510:INFO:Set up index.
2024-02-05 11:01:49,510:INFO:Assigning column types.
2024-02-05 11:01:49,513:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 11:01:49,538:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 11:01:49,540:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 11:01:49,559:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:49,561:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:49,602:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 11:01:49,603:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 11:01:49,619:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:49,621:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:49,621:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 11:01:49,646:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 11:01:49,661:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:49,663:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:49,688:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 11:01:49,765:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:49,766:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:49,766:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 11:01:49,810:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:49,812:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:49,849:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:49,850:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:49,853:INFO:Preparing preprocessing pipeline...
2024-02-05 11:01:49,854:INFO:Set up label encoding.
2024-02-05 11:01:49,854:INFO:Set up simple imputation.
2024-02-05 11:01:49,868:INFO:Finished creating preprocessing pipeline.
2024-02-05 11:01:49,870:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 11:01:49,870:INFO:Creating final display dataframe.
2024-02-05 11:01:49,912:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  0943
2024-02-05 11:01:49,955:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:49,957:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:50,000:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 11:01:50,001:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 11:01:50,002:INFO:setup() successfully completed in 0.58s...............
2024-02-05 11:01:50,002:INFO:Initializing create_model()
2024-02-05 11:01:50,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213D84979D0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 11:01:50,002:INFO:Checking exceptions
2024-02-05 11:01:50,003:INFO:Importing libraries
2024-02-05 11:01:50,003:INFO:Copying training dataset
2024-02-05 11:01:50,005:INFO:Defining folds
2024-02-05 11:01:50,005:INFO:Declaring metric variables
2024-02-05 11:01:50,005:INFO:Importing untrained model
2024-02-05 11:01:50,006:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 11:01:50,006:INFO:Starting cross validation
2024-02-05 11:01:50,007:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 11:01:52,995:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:52,997:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:52,998:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,050:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,052:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,053:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,196:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,197:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,198:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,199:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,199:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,200:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,259:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,260:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,262:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 11:01:53,275:INFO:Calculating mean and std
2024-02-05 11:01:53,275:INFO:Creating metrics dataframe
2024-02-05 11:01:53,276:INFO:Finalizing model
2024-02-05 11:01:53,323:INFO:Uploading results into container
2024-02-05 11:01:53,323:INFO:Uploading model into container now
2024-02-05 11:01:53,329:INFO:_master_model_container: 1
2024-02-05 11:01:53,329:INFO:_display_container: 2
2024-02-05 11:01:53,329:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 11:01:53,329:INFO:create_model() successfully completed......................................
2024-02-05 11:01:53,404:INFO:Initializing predict_model()
2024-02-05 11:01:53,405:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213D84979D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000213B2396480>)
2024-02-05 11:01:53,405:INFO:Checking exceptions
2024-02-05 11:01:53,405:INFO:Preloading libraries
2024-02-05 11:01:53,405:INFO:Set up data.
2024-02-05 11:01:53,407:INFO:Set up index.
2024-02-05 11:01:53,498:INFO:Initializing plot_model()
2024-02-05 11:01:53,498:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213D84979D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 11:01:53,498:INFO:Checking exceptions
2024-02-05 11:01:53,501:INFO:Preloading libraries
2024-02-05 11:01:53,505:INFO:Copying training dataset
2024-02-05 11:01:53,506:INFO:Plot type: auc
2024-02-05 11:01:53,585:INFO:Fitting Model
2024-02-05 11:01:53,587:INFO:Scoring test/hold-out set
2024-02-05 11:01:53,602:INFO:Saving 'AUC.png'
2024-02-05 11:01:53,744:INFO:Visual Rendered Successfully
2024-02-05 11:01:53,809:INFO:plot_model() successfully completed......................................
2024-02-05 11:01:53,810:INFO:Initializing plot_model()
2024-02-05 11:01:53,810:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213D84979D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 11:01:53,810:INFO:Checking exceptions
2024-02-05 11:01:53,812:INFO:Preloading libraries
2024-02-05 11:01:53,816:INFO:Copying training dataset
2024-02-05 11:01:53,816:INFO:Plot type: confusion_matrix
2024-02-05 11:01:53,887:INFO:Fitting Model
2024-02-05 11:01:53,888:INFO:Scoring test/hold-out set
2024-02-05 11:01:53,905:INFO:Saving 'Confusion Matrix.png'
2024-02-05 11:01:53,984:INFO:Visual Rendered Successfully
2024-02-05 11:01:54,044:INFO:plot_model() successfully completed......................................
2024-02-05 11:01:54,045:INFO:Initializing plot_model()
2024-02-05 11:01:54,045:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213D84979D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 11:01:54,045:INFO:Checking exceptions
2024-02-05 11:01:54,046:INFO:Preloading libraries
2024-02-05 11:01:54,050:INFO:Copying training dataset
2024-02-05 11:01:54,050:INFO:Plot type: feature
2024-02-05 11:01:54,051:WARNING:No coef_ found. Trying feature_importances_
2024-02-05 11:01:54,077:INFO:Saving 'Feature Importance.png'
2024-02-05 11:01:54,159:INFO:Visual Rendered Successfully
2024-02-05 11:01:54,223:INFO:plot_model() successfully completed......................................
2024-02-05 11:01:54,224:INFO:Initializing interpret_model()
2024-02-05 11:01:54,224:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213D84979D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-05 11:01:54,224:INFO:Checking exceptions
2024-02-05 11:01:54,224:INFO:Soft dependency imported: shap: 0.44.1
2024-02-05 11:01:54,483:INFO:plot type: summary
2024-02-05 11:01:54,483:INFO:Creating TreeExplainer
2024-02-05 11:01:54,503:INFO:Compiling shap values
2024-02-05 11:01:54,574:INFO:Saving 'SHAP summary.png'
2024-02-05 11:01:54,677:INFO:Visual Rendered Successfully
2024-02-05 11:01:54,677:INFO:interpret_model() successfully completed......................................
2024-02-05 15:39:26,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:39:26,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:39:26,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:39:26,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:39:27,668:INFO:PyCaret ClassificationExperiment
2024-02-05 15:39:27,668:INFO:Logging name: clf-default-name
2024-02-05 15:39:27,668:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 15:39:27,668:INFO:version 3.2.0
2024-02-05 15:39:27,668:INFO:Initializing setup()
2024-02-05 15:39:27,668:INFO:self.USI: ecb1
2024-02-05 15:39:27,668:INFO:self._variable_keys: {'fix_imbalance', 'html_param', 'idx', 'logging_param', 'log_plots_param', 'X_train', '_ml_usecase', '_available_plots', 'gpu_param', 'fold_shuffle_param', 'y_test', 'is_multiclass', 'memory', 'USI', 'target_param', 'exp_id', 'gpu_n_jobs_param', 'seed', 'y', 'fold_groups_param', 'n_jobs_param', 'fold_generator', 'exp_name_log', 'y_train', 'data', 'X', 'X_test', 'pipeline'}
2024-02-05 15:39:27,668:INFO:Checking environment
2024-02-05 15:39:27,668:INFO:python_version: 3.11.7
2024-02-05 15:39:27,668:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 15:39:27,668:INFO:machine: AMD64
2024-02-05 15:39:27,677:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 15:39:27,681:INFO:Memory: svmem(total=16892026880, available=7354187776, percent=56.5, used=9537839104, free=7354187776)
2024-02-05 15:39:27,681:INFO:Physical Core: 12
2024-02-05 15:39:27,681:INFO:Logical Core: 16
2024-02-05 15:39:27,681:INFO:Checking libraries
2024-02-05 15:39:27,681:INFO:System:
2024-02-05 15:39:27,681:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 15:39:27,681:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 15:39:27,681:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 15:39:27,681:INFO:PyCaret required dependencies:
2024-02-05 15:39:27,732:INFO:                 pip: 23.3.2
2024-02-05 15:39:27,732:INFO:          setuptools: 65.5.0
2024-02-05 15:39:27,732:INFO:             pycaret: 3.2.0
2024-02-05 15:39:27,732:INFO:             IPython: 8.20.0
2024-02-05 15:39:27,732:INFO:          ipywidgets: 8.1.1
2024-02-05 15:39:27,732:INFO:                tqdm: 4.66.1
2024-02-05 15:39:27,732:INFO:               numpy: 1.25.2
2024-02-05 15:39:27,732:INFO:              pandas: 1.5.3
2024-02-05 15:39:27,732:INFO:              jinja2: 3.1.3
2024-02-05 15:39:27,732:INFO:               scipy: 1.10.1
2024-02-05 15:39:27,732:INFO:              joblib: 1.3.2
2024-02-05 15:39:27,732:INFO:             sklearn: 1.2.2
2024-02-05 15:39:27,732:INFO:                pyod: 1.1.2
2024-02-05 15:39:27,732:INFO:            imblearn: 0.12.0
2024-02-05 15:39:27,732:INFO:   category_encoders: 2.6.3
2024-02-05 15:39:27,732:INFO:            lightgbm: 4.3.0
2024-02-05 15:39:27,732:INFO:               numba: 0.58.1
2024-02-05 15:39:27,732:INFO:            requests: 2.31.0
2024-02-05 15:39:27,733:INFO:          matplotlib: 3.6.0
2024-02-05 15:39:27,733:INFO:          scikitplot: 0.3.7
2024-02-05 15:39:27,733:INFO:         yellowbrick: 1.5
2024-02-05 15:39:27,733:INFO:              plotly: 5.18.0
2024-02-05 15:39:27,733:INFO:    plotly-resampler: Not installed
2024-02-05 15:39:27,733:INFO:             kaleido: 0.2.1
2024-02-05 15:39:27,733:INFO:           schemdraw: 0.15
2024-02-05 15:39:27,733:INFO:         statsmodels: 0.14.1
2024-02-05 15:39:27,733:INFO:              sktime: 0.21.1
2024-02-05 15:39:27,733:INFO:               tbats: 1.1.3
2024-02-05 15:39:27,733:INFO:            pmdarima: 2.0.4
2024-02-05 15:39:27,733:INFO:              psutil: 5.9.8
2024-02-05 15:39:27,733:INFO:          markupsafe: 2.1.4
2024-02-05 15:39:27,733:INFO:             pickle5: Not installed
2024-02-05 15:39:27,733:INFO:         cloudpickle: 3.0.0
2024-02-05 15:39:27,733:INFO:         deprecation: 2.1.0
2024-02-05 15:39:27,733:INFO:              xxhash: 3.4.1
2024-02-05 15:39:27,733:INFO:           wurlitzer: Not installed
2024-02-05 15:39:27,733:INFO:PyCaret optional dependencies:
2024-02-05 15:39:27,793:INFO:                shap: 0.44.1
2024-02-05 15:39:27,793:INFO:           interpret: Not installed
2024-02-05 15:39:27,793:INFO:                umap: Not installed
2024-02-05 15:39:27,793:INFO:     ydata_profiling: Not installed
2024-02-05 15:39:27,793:INFO:  explainerdashboard: Not installed
2024-02-05 15:39:27,793:INFO:             autoviz: Not installed
2024-02-05 15:39:27,793:INFO:           fairlearn: Not installed
2024-02-05 15:39:27,793:INFO:          deepchecks: Not installed
2024-02-05 15:39:27,793:INFO:             xgboost: 2.0.3
2024-02-05 15:39:27,793:INFO:            catboost: 1.2.2
2024-02-05 15:39:27,793:INFO:              kmodes: Not installed
2024-02-05 15:39:27,793:INFO:             mlxtend: Not installed
2024-02-05 15:39:27,793:INFO:       statsforecast: Not installed
2024-02-05 15:39:27,793:INFO:        tune_sklearn: Not installed
2024-02-05 15:39:27,793:INFO:                 ray: Not installed
2024-02-05 15:39:27,793:INFO:            hyperopt: Not installed
2024-02-05 15:39:27,793:INFO:              optuna: Not installed
2024-02-05 15:39:27,793:INFO:               skopt: Not installed
2024-02-05 15:39:27,793:INFO:              mlflow: Not installed
2024-02-05 15:39:27,793:INFO:              gradio: Not installed
2024-02-05 15:39:27,793:INFO:             fastapi: Not installed
2024-02-05 15:39:27,793:INFO:             uvicorn: Not installed
2024-02-05 15:39:27,793:INFO:              m2cgen: Not installed
2024-02-05 15:39:27,793:INFO:           evidently: Not installed
2024-02-05 15:39:27,793:INFO:               fugue: Not installed
2024-02-05 15:39:27,794:INFO:           streamlit: Not installed
2024-02-05 15:39:27,794:INFO:             prophet: 1.1.5
2024-02-05 15:39:27,794:INFO:None
2024-02-05 15:39:27,794:INFO:Set up data.
2024-02-05 15:39:27,799:INFO:Set up folding strategy.
2024-02-05 15:39:27,799:INFO:Set up train/test split.
2024-02-05 15:39:27,803:INFO:Set up index.
2024-02-05 15:39:27,803:INFO:Assigning column types.
2024-02-05 15:39:27,805:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 15:39:27,829:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 15:39:27,832:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:39:27,853:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:39:27,854:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:39:27,973:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 15:39:27,974:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:39:27,989:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:39:27,991:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:39:27,991:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 15:39:28,015:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:39:28,029:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:39:28,031:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:39:28,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:39:28,124:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:39:28,126:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:39:28,126:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 15:39:28,167:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:39:28,169:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:39:28,210:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:39:28,212:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:39:28,222:INFO:Preparing preprocessing pipeline...
2024-02-05 15:39:28,223:INFO:Set up label encoding.
2024-02-05 15:39:28,223:INFO:Set up simple imputation.
2024-02-05 15:39:28,239:INFO:Finished creating preprocessing pipeline.
2024-02-05 15:39:28,242:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 15:39:28,242:INFO:Creating final display dataframe.
2024-02-05 15:39:28,287:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  ecb1
2024-02-05 15:39:28,331:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:39:28,333:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:39:28,374:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:39:28,375:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:39:28,376:INFO:setup() successfully completed in 0.71s...............
2024-02-05 15:39:28,376:INFO:Initializing create_model()
2024-02-05 15:39:28,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029939197AD0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 15:39:28,376:INFO:Checking exceptions
2024-02-05 15:39:28,377:INFO:Importing libraries
2024-02-05 15:39:28,378:INFO:Copying training dataset
2024-02-05 15:39:28,380:INFO:Defining folds
2024-02-05 15:39:28,380:INFO:Declaring metric variables
2024-02-05 15:39:28,380:INFO:Importing untrained model
2024-02-05 15:39:28,380:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 15:39:28,380:INFO:Starting cross validation
2024-02-05 15:39:28,381:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 15:39:31,006:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,009:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,010:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,177:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,178:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,182:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,204:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,205:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,206:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,207:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,208:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,210:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,275:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,276:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,278:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:39:31,289:INFO:Calculating mean and std
2024-02-05 15:39:31,298:INFO:Creating metrics dataframe
2024-02-05 15:39:31,299:INFO:Finalizing model
2024-02-05 15:39:31,351:INFO:Uploading results into container
2024-02-05 15:39:31,351:INFO:Uploading model into container now
2024-02-05 15:39:31,357:INFO:_master_model_container: 1
2024-02-05 15:39:31,357:INFO:_display_container: 2
2024-02-05 15:39:31,358:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 15:39:31,358:INFO:create_model() successfully completed......................................
2024-02-05 15:39:31,426:INFO:Initializing predict_model()
2024-02-05 15:39:31,427:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029939197AD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000299130C6480>)
2024-02-05 15:39:31,427:INFO:Checking exceptions
2024-02-05 15:39:31,427:INFO:Preloading libraries
2024-02-05 15:39:31,427:INFO:Set up data.
2024-02-05 15:39:31,429:INFO:Set up index.
2024-02-05 15:39:31,504:INFO:Initializing plot_model()
2024-02-05 15:39:31,504:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029939197AD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 15:39:31,504:INFO:Checking exceptions
2024-02-05 15:39:31,509:INFO:Preloading libraries
2024-02-05 15:39:31,513:INFO:Copying training dataset
2024-02-05 15:39:31,513:INFO:Plot type: auc
2024-02-05 15:39:31,590:INFO:Fitting Model
2024-02-05 15:39:31,592:INFO:Scoring test/hold-out set
2024-02-05 15:39:31,610:INFO:Saving 'AUC.png'
2024-02-05 15:39:31,742:INFO:Visual Rendered Successfully
2024-02-05 15:39:31,803:INFO:plot_model() successfully completed......................................
2024-02-05 15:39:31,803:INFO:Initializing plot_model()
2024-02-05 15:39:31,803:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029939197AD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 15:39:31,804:INFO:Checking exceptions
2024-02-05 15:39:31,805:INFO:Preloading libraries
2024-02-05 15:39:31,809:INFO:Copying training dataset
2024-02-05 15:39:31,809:INFO:Plot type: confusion_matrix
2024-02-05 15:39:31,853:INFO:Fitting Model
2024-02-05 15:39:31,853:INFO:Scoring test/hold-out set
2024-02-05 15:39:31,863:INFO:Saving 'Confusion Matrix.png'
2024-02-05 15:39:31,944:INFO:Visual Rendered Successfully
2024-02-05 15:39:31,998:INFO:plot_model() successfully completed......................................
2024-02-05 15:39:31,998:INFO:Initializing plot_model()
2024-02-05 15:39:31,999:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029939197AD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 15:39:31,999:INFO:Checking exceptions
2024-02-05 15:39:32,000:INFO:Preloading libraries
2024-02-05 15:39:32,005:INFO:Copying training dataset
2024-02-05 15:39:32,005:INFO:Plot type: feature
2024-02-05 15:39:32,006:WARNING:No coef_ found. Trying feature_importances_
2024-02-05 15:39:32,031:INFO:Saving 'Feature Importance.png'
2024-02-05 15:39:32,108:INFO:Visual Rendered Successfully
2024-02-05 15:39:32,162:INFO:plot_model() successfully completed......................................
2024-02-05 15:39:32,163:INFO:Initializing interpret_model()
2024-02-05 15:39:32,163:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029939197AD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-05 15:39:32,163:INFO:Checking exceptions
2024-02-05 15:39:32,163:INFO:Soft dependency imported: shap: 0.44.1
2024-02-05 15:39:32,657:INFO:plot type: summary
2024-02-05 15:39:32,657:INFO:Creating TreeExplainer
2024-02-05 15:39:32,675:INFO:Compiling shap values
2024-02-05 15:39:32,745:INFO:Saving 'SHAP summary.png'
2024-02-05 15:39:32,849:INFO:Visual Rendered Successfully
2024-02-05 15:39:32,849:INFO:interpret_model() successfully completed......................................
2024-02-05 15:45:09,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:45:09,299:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:45:09,299:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:45:09,299:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:45:10,124:INFO:PyCaret ClassificationExperiment
2024-02-05 15:45:10,124:INFO:Logging name: clf-default-name
2024-02-05 15:45:10,124:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 15:45:10,124:INFO:version 3.2.0
2024-02-05 15:45:10,124:INFO:Initializing setup()
2024-02-05 15:45:10,124:INFO:self.USI: 4740
2024-02-05 15:45:10,124:INFO:self._variable_keys: {'gpu_param', 'logging_param', 'seed', 'fix_imbalance', 'data', 'gpu_n_jobs_param', 'y', 'pipeline', 'fold_shuffle_param', '_available_plots', 'y_train', 'USI', 'memory', 'idx', 'log_plots_param', 'html_param', 'exp_id', 'fold_generator', 'X_test', 'X_train', 'target_param', 'fold_groups_param', '_ml_usecase', 'y_test', 'X', 'is_multiclass', 'exp_name_log', 'n_jobs_param'}
2024-02-05 15:45:10,124:INFO:Checking environment
2024-02-05 15:45:10,124:INFO:python_version: 3.11.7
2024-02-05 15:45:10,124:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 15:45:10,124:INFO:machine: AMD64
2024-02-05 15:45:10,132:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 15:45:10,135:INFO:Memory: svmem(total=16892026880, available=6691221504, percent=60.4, used=10200805376, free=6691221504)
2024-02-05 15:45:10,135:INFO:Physical Core: 12
2024-02-05 15:45:10,135:INFO:Logical Core: 16
2024-02-05 15:45:10,135:INFO:Checking libraries
2024-02-05 15:45:10,135:INFO:System:
2024-02-05 15:45:10,135:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 15:45:10,135:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 15:45:10,135:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 15:45:10,135:INFO:PyCaret required dependencies:
2024-02-05 15:45:10,165:INFO:                 pip: 23.3.2
2024-02-05 15:45:10,165:INFO:          setuptools: 65.5.0
2024-02-05 15:45:10,165:INFO:             pycaret: 3.2.0
2024-02-05 15:45:10,165:INFO:             IPython: 8.20.0
2024-02-05 15:45:10,165:INFO:          ipywidgets: 8.1.1
2024-02-05 15:45:10,165:INFO:                tqdm: 4.66.1
2024-02-05 15:45:10,165:INFO:               numpy: 1.25.2
2024-02-05 15:45:10,165:INFO:              pandas: 1.5.3
2024-02-05 15:45:10,165:INFO:              jinja2: 3.1.3
2024-02-05 15:45:10,165:INFO:               scipy: 1.10.1
2024-02-05 15:45:10,165:INFO:              joblib: 1.3.2
2024-02-05 15:45:10,165:INFO:             sklearn: 1.2.2
2024-02-05 15:45:10,165:INFO:                pyod: 1.1.2
2024-02-05 15:45:10,165:INFO:            imblearn: 0.12.0
2024-02-05 15:45:10,165:INFO:   category_encoders: 2.6.3
2024-02-05 15:45:10,165:INFO:            lightgbm: 4.3.0
2024-02-05 15:45:10,165:INFO:               numba: 0.58.1
2024-02-05 15:45:10,165:INFO:            requests: 2.31.0
2024-02-05 15:45:10,165:INFO:          matplotlib: 3.6.0
2024-02-05 15:45:10,165:INFO:          scikitplot: 0.3.7
2024-02-05 15:45:10,165:INFO:         yellowbrick: 1.5
2024-02-05 15:45:10,165:INFO:              plotly: 5.18.0
2024-02-05 15:45:10,165:INFO:    plotly-resampler: Not installed
2024-02-05 15:45:10,165:INFO:             kaleido: 0.2.1
2024-02-05 15:45:10,165:INFO:           schemdraw: 0.15
2024-02-05 15:45:10,165:INFO:         statsmodels: 0.14.1
2024-02-05 15:45:10,165:INFO:              sktime: 0.21.1
2024-02-05 15:45:10,165:INFO:               tbats: 1.1.3
2024-02-05 15:45:10,165:INFO:            pmdarima: 2.0.4
2024-02-05 15:45:10,166:INFO:              psutil: 5.9.8
2024-02-05 15:45:10,166:INFO:          markupsafe: 2.1.4
2024-02-05 15:45:10,166:INFO:             pickle5: Not installed
2024-02-05 15:45:10,166:INFO:         cloudpickle: 3.0.0
2024-02-05 15:45:10,166:INFO:         deprecation: 2.1.0
2024-02-05 15:45:10,166:INFO:              xxhash: 3.4.1
2024-02-05 15:45:10,166:INFO:           wurlitzer: Not installed
2024-02-05 15:45:10,166:INFO:PyCaret optional dependencies:
2024-02-05 15:45:10,204:INFO:                shap: 0.44.1
2024-02-05 15:45:10,204:INFO:           interpret: Not installed
2024-02-05 15:45:10,204:INFO:                umap: Not installed
2024-02-05 15:45:10,205:INFO:     ydata_profiling: Not installed
2024-02-05 15:45:10,205:INFO:  explainerdashboard: Not installed
2024-02-05 15:45:10,205:INFO:             autoviz: Not installed
2024-02-05 15:45:10,205:INFO:           fairlearn: Not installed
2024-02-05 15:45:10,205:INFO:          deepchecks: Not installed
2024-02-05 15:45:10,205:INFO:             xgboost: 2.0.3
2024-02-05 15:45:10,205:INFO:            catboost: 1.2.2
2024-02-05 15:45:10,205:INFO:              kmodes: Not installed
2024-02-05 15:45:10,205:INFO:             mlxtend: Not installed
2024-02-05 15:45:10,205:INFO:       statsforecast: Not installed
2024-02-05 15:45:10,205:INFO:        tune_sklearn: Not installed
2024-02-05 15:45:10,205:INFO:                 ray: Not installed
2024-02-05 15:45:10,205:INFO:            hyperopt: Not installed
2024-02-05 15:45:10,205:INFO:              optuna: Not installed
2024-02-05 15:45:10,205:INFO:               skopt: Not installed
2024-02-05 15:45:10,205:INFO:              mlflow: Not installed
2024-02-05 15:45:10,205:INFO:              gradio: Not installed
2024-02-05 15:45:10,205:INFO:             fastapi: Not installed
2024-02-05 15:45:10,205:INFO:             uvicorn: Not installed
2024-02-05 15:45:10,205:INFO:              m2cgen: Not installed
2024-02-05 15:45:10,205:INFO:           evidently: Not installed
2024-02-05 15:45:10,205:INFO:               fugue: Not installed
2024-02-05 15:45:10,205:INFO:           streamlit: Not installed
2024-02-05 15:45:10,205:INFO:             prophet: 1.1.5
2024-02-05 15:45:10,205:INFO:None
2024-02-05 15:45:10,206:INFO:Set up data.
2024-02-05 15:45:10,210:INFO:Set up folding strategy.
2024-02-05 15:45:10,210:INFO:Set up train/test split.
2024-02-05 15:45:10,213:INFO:Set up index.
2024-02-05 15:45:10,213:INFO:Assigning column types.
2024-02-05 15:45:10,215:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 15:45:10,241:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 15:45:10,243:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:45:10,264:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:45:10,266:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:45:10,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 15:45:10,310:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:45:10,328:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:45:10,330:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:45:10,330:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 15:45:10,356:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:45:10,373:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:45:10,374:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:45:10,401:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:45:10,482:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:45:10,484:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:45:10,484:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 15:45:10,528:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:45:10,530:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:45:10,571:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:45:10,573:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:45:10,575:INFO:Preparing preprocessing pipeline...
2024-02-05 15:45:10,575:INFO:Set up label encoding.
2024-02-05 15:45:10,576:INFO:Set up simple imputation.
2024-02-05 15:45:10,591:INFO:Finished creating preprocessing pipeline.
2024-02-05 15:45:10,594:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 15:45:10,594:INFO:Creating final display dataframe.
2024-02-05 15:45:10,641:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  4740
2024-02-05 15:45:10,685:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:45:10,686:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:45:10,727:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:45:10,729:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:45:10,730:INFO:setup() successfully completed in 0.61s...............
2024-02-05 15:45:10,730:INFO:Initializing create_model()
2024-02-05 15:45:10,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E5CACE950>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 15:45:10,730:INFO:Checking exceptions
2024-02-05 15:45:10,731:INFO:Importing libraries
2024-02-05 15:45:10,731:INFO:Copying training dataset
2024-02-05 15:45:10,733:INFO:Defining folds
2024-02-05 15:45:10,733:INFO:Declaring metric variables
2024-02-05 15:45:10,733:INFO:Importing untrained model
2024-02-05 15:45:10,734:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 15:45:10,734:INFO:Starting cross validation
2024-02-05 15:45:10,735:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 15:45:13,329:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,331:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,332:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,373:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,375:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,376:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,498:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,499:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,500:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,520:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,520:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,521:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,522:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,523:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,524:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:45:13,529:INFO:Calculating mean and std
2024-02-05 15:45:13,529:INFO:Creating metrics dataframe
2024-02-05 15:45:13,531:INFO:Finalizing model
2024-02-05 15:45:13,580:INFO:Uploading results into container
2024-02-05 15:45:13,581:INFO:Uploading model into container now
2024-02-05 15:45:13,590:INFO:_master_model_container: 1
2024-02-05 15:45:13,590:INFO:_display_container: 2
2024-02-05 15:45:13,590:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 15:45:13,590:INFO:create_model() successfully completed......................................
2024-02-05 15:45:13,656:INFO:Initializing predict_model()
2024-02-05 15:45:13,656:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E5CACE950>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024E357B6480>)
2024-02-05 15:45:13,656:INFO:Checking exceptions
2024-02-05 15:45:13,656:INFO:Preloading libraries
2024-02-05 15:45:13,656:INFO:Set up data.
2024-02-05 15:45:13,658:INFO:Set up index.
2024-02-05 15:45:13,735:INFO:Initializing plot_model()
2024-02-05 15:45:13,735:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E5CACE950>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 15:45:13,735:INFO:Checking exceptions
2024-02-05 15:45:13,737:INFO:Preloading libraries
2024-02-05 15:45:13,741:INFO:Copying training dataset
2024-02-05 15:45:13,741:INFO:Plot type: auc
2024-02-05 15:45:13,810:INFO:Fitting Model
2024-02-05 15:45:13,810:INFO:Scoring test/hold-out set
2024-02-05 15:45:13,825:INFO:Saving 'AUC.png'
2024-02-05 15:45:13,954:INFO:Visual Rendered Successfully
2024-02-05 15:45:14,012:INFO:plot_model() successfully completed......................................
2024-02-05 15:45:14,013:INFO:Initializing plot_model()
2024-02-05 15:45:14,013:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E5CACE950>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 15:45:14,013:INFO:Checking exceptions
2024-02-05 15:45:14,014:INFO:Preloading libraries
2024-02-05 15:45:14,021:INFO:Copying training dataset
2024-02-05 15:45:14,021:INFO:Plot type: confusion_matrix
2024-02-05 15:45:14,072:INFO:Fitting Model
2024-02-05 15:45:14,072:INFO:Scoring test/hold-out set
2024-02-05 15:45:14,083:INFO:Saving 'Confusion Matrix.png'
2024-02-05 15:45:14,153:INFO:Visual Rendered Successfully
2024-02-05 15:45:14,212:INFO:plot_model() successfully completed......................................
2024-02-05 15:45:14,213:INFO:Initializing plot_model()
2024-02-05 15:45:14,213:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E5CACE950>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 15:45:14,213:INFO:Checking exceptions
2024-02-05 15:45:14,214:INFO:Preloading libraries
2024-02-05 15:45:14,218:INFO:Copying training dataset
2024-02-05 15:45:14,218:INFO:Plot type: feature
2024-02-05 15:45:14,218:WARNING:No coef_ found. Trying feature_importances_
2024-02-05 15:45:14,243:INFO:Saving 'Feature Importance.png'
2024-02-05 15:45:14,322:INFO:Visual Rendered Successfully
2024-02-05 15:45:14,375:INFO:plot_model() successfully completed......................................
2024-02-05 15:45:14,375:INFO:Initializing interpret_model()
2024-02-05 15:45:14,375:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E5CACE950>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-05 15:45:14,376:INFO:Checking exceptions
2024-02-05 15:45:14,376:INFO:Soft dependency imported: shap: 0.44.1
2024-02-05 15:45:14,625:INFO:plot type: summary
2024-02-05 15:45:14,625:INFO:Creating TreeExplainer
2024-02-05 15:45:14,645:INFO:Compiling shap values
2024-02-05 15:45:14,713:INFO:Saving 'SHAP summary.png'
2024-02-05 15:45:14,814:INFO:Visual Rendered Successfully
2024-02-05 15:45:14,814:INFO:interpret_model() successfully completed......................................
2024-02-05 15:50:58,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:50:58,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:50:58,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:50:58,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 15:50:59,272:INFO:PyCaret ClassificationExperiment
2024-02-05 15:50:59,272:INFO:Logging name: clf-default-name
2024-02-05 15:50:59,272:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 15:50:59,272:INFO:version 3.2.0
2024-02-05 15:50:59,272:INFO:Initializing setup()
2024-02-05 15:50:59,272:INFO:self.USI: 16b7
2024-02-05 15:50:59,272:INFO:self._variable_keys: {'fix_imbalance', 'fold_generator', 'fold_shuffle_param', 'logging_param', 'pipeline', 'X_train', 'y_test', 'log_plots_param', 'seed', 'html_param', 'fold_groups_param', 'is_multiclass', 'memory', 'data', 'exp_id', 'exp_name_log', 'y_train', 'USI', 'y', '_ml_usecase', 'X_test', 'X', 'gpu_n_jobs_param', 'target_param', '_available_plots', 'gpu_param', 'idx', 'n_jobs_param'}
2024-02-05 15:50:59,272:INFO:Checking environment
2024-02-05 15:50:59,272:INFO:python_version: 3.11.7
2024-02-05 15:50:59,272:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 15:50:59,272:INFO:machine: AMD64
2024-02-05 15:50:59,281:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 15:50:59,284:INFO:Memory: svmem(total=16892026880, available=6746329088, percent=60.1, used=10145697792, free=6746329088)
2024-02-05 15:50:59,284:INFO:Physical Core: 12
2024-02-05 15:50:59,284:INFO:Logical Core: 16
2024-02-05 15:50:59,284:INFO:Checking libraries
2024-02-05 15:50:59,284:INFO:System:
2024-02-05 15:50:59,284:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 15:50:59,284:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 15:50:59,285:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 15:50:59,285:INFO:PyCaret required dependencies:
2024-02-05 15:50:59,312:INFO:                 pip: 23.3.2
2024-02-05 15:50:59,312:INFO:          setuptools: 65.5.0
2024-02-05 15:50:59,312:INFO:             pycaret: 3.2.0
2024-02-05 15:50:59,312:INFO:             IPython: 8.20.0
2024-02-05 15:50:59,312:INFO:          ipywidgets: 8.1.1
2024-02-05 15:50:59,312:INFO:                tqdm: 4.66.1
2024-02-05 15:50:59,312:INFO:               numpy: 1.25.2
2024-02-05 15:50:59,312:INFO:              pandas: 1.5.3
2024-02-05 15:50:59,312:INFO:              jinja2: 3.1.3
2024-02-05 15:50:59,312:INFO:               scipy: 1.10.1
2024-02-05 15:50:59,312:INFO:              joblib: 1.3.2
2024-02-05 15:50:59,312:INFO:             sklearn: 1.2.2
2024-02-05 15:50:59,313:INFO:                pyod: 1.1.2
2024-02-05 15:50:59,313:INFO:            imblearn: 0.12.0
2024-02-05 15:50:59,313:INFO:   category_encoders: 2.6.3
2024-02-05 15:50:59,313:INFO:            lightgbm: 4.3.0
2024-02-05 15:50:59,313:INFO:               numba: 0.58.1
2024-02-05 15:50:59,313:INFO:            requests: 2.31.0
2024-02-05 15:50:59,313:INFO:          matplotlib: 3.6.0
2024-02-05 15:50:59,313:INFO:          scikitplot: 0.3.7
2024-02-05 15:50:59,313:INFO:         yellowbrick: 1.5
2024-02-05 15:50:59,313:INFO:              plotly: 5.18.0
2024-02-05 15:50:59,313:INFO:    plotly-resampler: Not installed
2024-02-05 15:50:59,313:INFO:             kaleido: 0.2.1
2024-02-05 15:50:59,313:INFO:           schemdraw: 0.15
2024-02-05 15:50:59,313:INFO:         statsmodels: 0.14.1
2024-02-05 15:50:59,313:INFO:              sktime: 0.21.1
2024-02-05 15:50:59,313:INFO:               tbats: 1.1.3
2024-02-05 15:50:59,313:INFO:            pmdarima: 2.0.4
2024-02-05 15:50:59,313:INFO:              psutil: 5.9.8
2024-02-05 15:50:59,313:INFO:          markupsafe: 2.1.4
2024-02-05 15:50:59,313:INFO:             pickle5: Not installed
2024-02-05 15:50:59,313:INFO:         cloudpickle: 3.0.0
2024-02-05 15:50:59,313:INFO:         deprecation: 2.1.0
2024-02-05 15:50:59,313:INFO:              xxhash: 3.4.1
2024-02-05 15:50:59,313:INFO:           wurlitzer: Not installed
2024-02-05 15:50:59,313:INFO:PyCaret optional dependencies:
2024-02-05 15:50:59,342:INFO:                shap: 0.44.1
2024-02-05 15:50:59,342:INFO:           interpret: Not installed
2024-02-05 15:50:59,342:INFO:                umap: Not installed
2024-02-05 15:50:59,342:INFO:     ydata_profiling: Not installed
2024-02-05 15:50:59,342:INFO:  explainerdashboard: Not installed
2024-02-05 15:50:59,342:INFO:             autoviz: Not installed
2024-02-05 15:50:59,342:INFO:           fairlearn: Not installed
2024-02-05 15:50:59,342:INFO:          deepchecks: Not installed
2024-02-05 15:50:59,342:INFO:             xgboost: 2.0.3
2024-02-05 15:50:59,342:INFO:            catboost: 1.2.2
2024-02-05 15:50:59,342:INFO:              kmodes: Not installed
2024-02-05 15:50:59,342:INFO:             mlxtend: Not installed
2024-02-05 15:50:59,342:INFO:       statsforecast: Not installed
2024-02-05 15:50:59,342:INFO:        tune_sklearn: Not installed
2024-02-05 15:50:59,342:INFO:                 ray: Not installed
2024-02-05 15:50:59,342:INFO:            hyperopt: Not installed
2024-02-05 15:50:59,342:INFO:              optuna: Not installed
2024-02-05 15:50:59,342:INFO:               skopt: Not installed
2024-02-05 15:50:59,342:INFO:              mlflow: Not installed
2024-02-05 15:50:59,342:INFO:              gradio: Not installed
2024-02-05 15:50:59,342:INFO:             fastapi: Not installed
2024-02-05 15:50:59,342:INFO:             uvicorn: Not installed
2024-02-05 15:50:59,342:INFO:              m2cgen: Not installed
2024-02-05 15:50:59,343:INFO:           evidently: Not installed
2024-02-05 15:50:59,343:INFO:               fugue: Not installed
2024-02-05 15:50:59,343:INFO:           streamlit: Not installed
2024-02-05 15:50:59,343:INFO:             prophet: 1.1.5
2024-02-05 15:50:59,343:INFO:None
2024-02-05 15:50:59,343:INFO:Set up data.
2024-02-05 15:50:59,346:INFO:Set up folding strategy.
2024-02-05 15:50:59,346:INFO:Set up train/test split.
2024-02-05 15:50:59,349:INFO:Set up index.
2024-02-05 15:50:59,349:INFO:Assigning column types.
2024-02-05 15:50:59,350:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 15:50:59,373:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 15:50:59,375:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:50:59,394:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:50:59,396:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:50:59,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 15:50:59,436:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:50:59,452:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:50:59,453:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:50:59,454:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 15:50:59,477:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:50:59,491:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:50:59,492:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:50:59,519:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 15:50:59,597:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:50:59,599:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:50:59,599:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 15:50:59,636:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:50:59,637:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:50:59,676:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:50:59,679:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:50:59,680:INFO:Preparing preprocessing pipeline...
2024-02-05 15:50:59,681:INFO:Set up label encoding.
2024-02-05 15:50:59,681:INFO:Set up simple imputation.
2024-02-05 15:50:59,695:INFO:Finished creating preprocessing pipeline.
2024-02-05 15:50:59,697:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 15:50:59,697:INFO:Creating final display dataframe.
2024-02-05 15:50:59,741:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  16b7
2024-02-05 15:50:59,783:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:50:59,786:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:50:59,828:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 15:50:59,829:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 15:50:59,830:INFO:setup() successfully completed in 0.56s...............
2024-02-05 15:50:59,830:INFO:Initializing create_model()
2024-02-05 15:50:59,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025B3F727A50>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 15:50:59,830:INFO:Checking exceptions
2024-02-05 15:50:59,832:INFO:Importing libraries
2024-02-05 15:50:59,832:INFO:Copying training dataset
2024-02-05 15:50:59,834:INFO:Defining folds
2024-02-05 15:50:59,835:INFO:Declaring metric variables
2024-02-05 15:50:59,835:INFO:Importing untrained model
2024-02-05 15:50:59,835:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 15:50:59,835:INFO:Starting cross validation
2024-02-05 15:50:59,836:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 15:51:03,385:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,387:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,389:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,569:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,571:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,574:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,592:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,598:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,603:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,609:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,611:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,632:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,657:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,660:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,662:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 15:51:03,668:INFO:Calculating mean and std
2024-02-05 15:51:03,668:INFO:Creating metrics dataframe
2024-02-05 15:51:03,670:INFO:Finalizing model
2024-02-05 15:51:03,747:INFO:Uploading results into container
2024-02-05 15:51:03,747:INFO:Uploading model into container now
2024-02-05 15:51:03,754:INFO:_master_model_container: 1
2024-02-05 15:51:03,755:INFO:_display_container: 2
2024-02-05 15:51:03,755:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 15:51:03,755:INFO:create_model() successfully completed......................................
2024-02-05 15:51:03,829:INFO:Initializing predict_model()
2024-02-05 15:51:03,829:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025B3F727A50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025B19626480>)
2024-02-05 15:51:03,829:INFO:Checking exceptions
2024-02-05 15:51:03,829:INFO:Preloading libraries
2024-02-05 15:51:03,829:INFO:Set up data.
2024-02-05 15:51:03,831:INFO:Set up index.
2024-02-05 15:51:03,919:INFO:Initializing plot_model()
2024-02-05 15:51:03,919:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025B3F727A50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 15:51:03,919:INFO:Checking exceptions
2024-02-05 15:51:03,922:INFO:Preloading libraries
2024-02-05 15:51:03,925:INFO:Copying training dataset
2024-02-05 15:51:03,926:INFO:Plot type: auc
2024-02-05 15:51:04,003:INFO:Fitting Model
2024-02-05 15:51:04,003:INFO:Scoring test/hold-out set
2024-02-05 15:51:04,017:INFO:Saving 'AUC.png'
2024-02-05 15:51:04,157:INFO:Visual Rendered Successfully
2024-02-05 15:51:04,222:INFO:plot_model() successfully completed......................................
2024-02-05 15:51:04,223:INFO:Initializing plot_model()
2024-02-05 15:51:04,223:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025B3F727A50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 15:51:04,223:INFO:Checking exceptions
2024-02-05 15:51:04,225:INFO:Preloading libraries
2024-02-05 15:51:04,231:INFO:Copying training dataset
2024-02-05 15:51:04,231:INFO:Plot type: confusion_matrix
2024-02-05 15:51:04,279:INFO:Fitting Model
2024-02-05 15:51:04,280:INFO:Scoring test/hold-out set
2024-02-05 15:51:04,290:INFO:Saving 'Confusion Matrix.png'
2024-02-05 15:51:04,361:INFO:Visual Rendered Successfully
2024-02-05 15:51:04,422:INFO:plot_model() successfully completed......................................
2024-02-05 15:51:04,423:INFO:Initializing plot_model()
2024-02-05 15:51:04,423:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025B3F727A50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 15:51:04,423:INFO:Checking exceptions
2024-02-05 15:51:04,425:INFO:Preloading libraries
2024-02-05 15:51:04,429:INFO:Copying training dataset
2024-02-05 15:51:04,429:INFO:Plot type: feature
2024-02-05 15:51:04,429:WARNING:No coef_ found. Trying feature_importances_
2024-02-05 15:51:04,454:INFO:Saving 'Feature Importance.png'
2024-02-05 15:51:04,533:INFO:Visual Rendered Successfully
2024-02-05 15:51:04,593:INFO:plot_model() successfully completed......................................
2024-02-05 15:51:04,594:INFO:Initializing interpret_model()
2024-02-05 15:51:04,594:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025B3F727A50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-05 15:51:04,594:INFO:Checking exceptions
2024-02-05 15:51:04,594:INFO:Soft dependency imported: shap: 0.44.1
2024-02-05 15:51:04,837:INFO:plot type: summary
2024-02-05 15:51:04,837:INFO:Creating TreeExplainer
2024-02-05 15:51:04,853:INFO:Compiling shap values
2024-02-05 15:51:04,925:INFO:Saving 'SHAP summary.png'
2024-02-05 15:51:05,026:INFO:Visual Rendered Successfully
2024-02-05 15:51:05,026:INFO:interpret_model() successfully completed......................................
2024-02-05 16:13:33,834:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:13:33,835:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:13:33,835:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:13:33,835:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:13:34,560:INFO:PyCaret ClassificationExperiment
2024-02-05 16:13:34,560:INFO:Logging name: clf-default-name
2024-02-05 16:13:34,560:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:13:34,560:INFO:version 3.2.0
2024-02-05 16:13:34,560:INFO:Initializing setup()
2024-02-05 16:13:34,560:INFO:self.USI: 3b0a
2024-02-05 16:13:34,560:INFO:self._variable_keys: {'log_plots_param', 'logging_param', 'X_train', 'fold_generator', 'y', 'n_jobs_param', 'exp_id', '_available_plots', 'pipeline', 'USI', '_ml_usecase', 'y_test', 'data', 'is_multiclass', 'seed', 'fix_imbalance', 'fold_shuffle_param', 'target_param', 'memory', 'X_test', 'exp_name_log', 'y_train', 'idx', 'fold_groups_param', 'X', 'gpu_param', 'gpu_n_jobs_param', 'html_param'}
2024-02-05 16:13:34,560:INFO:Checking environment
2024-02-05 16:13:34,560:INFO:python_version: 3.11.7
2024-02-05 16:13:34,560:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:13:34,560:INFO:machine: AMD64
2024-02-05 16:13:34,569:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:13:34,572:INFO:Memory: svmem(total=16892026880, available=5978550272, percent=64.6, used=10913476608, free=5978550272)
2024-02-05 16:13:34,572:INFO:Physical Core: 12
2024-02-05 16:13:34,572:INFO:Logical Core: 16
2024-02-05 16:13:34,572:INFO:Checking libraries
2024-02-05 16:13:34,572:INFO:System:
2024-02-05 16:13:34,572:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:13:34,572:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:13:34,572:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:13:34,572:INFO:PyCaret required dependencies:
2024-02-05 16:13:34,605:INFO:                 pip: 23.3.2
2024-02-05 16:13:34,605:INFO:          setuptools: 65.5.0
2024-02-05 16:13:34,605:INFO:             pycaret: 3.2.0
2024-02-05 16:13:34,605:INFO:             IPython: 8.20.0
2024-02-05 16:13:34,605:INFO:          ipywidgets: 8.1.1
2024-02-05 16:13:34,605:INFO:                tqdm: 4.66.1
2024-02-05 16:13:34,605:INFO:               numpy: 1.25.2
2024-02-05 16:13:34,605:INFO:              pandas: 1.5.3
2024-02-05 16:13:34,605:INFO:              jinja2: 3.1.3
2024-02-05 16:13:34,605:INFO:               scipy: 1.10.1
2024-02-05 16:13:34,605:INFO:              joblib: 1.3.2
2024-02-05 16:13:34,605:INFO:             sklearn: 1.2.2
2024-02-05 16:13:34,605:INFO:                pyod: 1.1.2
2024-02-05 16:13:34,605:INFO:            imblearn: 0.12.0
2024-02-05 16:13:34,605:INFO:   category_encoders: 2.6.3
2024-02-05 16:13:34,605:INFO:            lightgbm: 4.3.0
2024-02-05 16:13:34,605:INFO:               numba: 0.58.1
2024-02-05 16:13:34,605:INFO:            requests: 2.31.0
2024-02-05 16:13:34,605:INFO:          matplotlib: 3.6.0
2024-02-05 16:13:34,605:INFO:          scikitplot: 0.3.7
2024-02-05 16:13:34,605:INFO:         yellowbrick: 1.5
2024-02-05 16:13:34,605:INFO:              plotly: 5.18.0
2024-02-05 16:13:34,605:INFO:    plotly-resampler: Not installed
2024-02-05 16:13:34,605:INFO:             kaleido: 0.2.1
2024-02-05 16:13:34,605:INFO:           schemdraw: 0.15
2024-02-05 16:13:34,605:INFO:         statsmodels: 0.14.1
2024-02-05 16:13:34,605:INFO:              sktime: 0.21.1
2024-02-05 16:13:34,605:INFO:               tbats: 1.1.3
2024-02-05 16:13:34,605:INFO:            pmdarima: 2.0.4
2024-02-05 16:13:34,605:INFO:              psutil: 5.9.8
2024-02-05 16:13:34,605:INFO:          markupsafe: 2.1.4
2024-02-05 16:13:34,605:INFO:             pickle5: Not installed
2024-02-05 16:13:34,605:INFO:         cloudpickle: 3.0.0
2024-02-05 16:13:34,606:INFO:         deprecation: 2.1.0
2024-02-05 16:13:34,606:INFO:              xxhash: 3.4.1
2024-02-05 16:13:34,606:INFO:           wurlitzer: Not installed
2024-02-05 16:13:34,606:INFO:PyCaret optional dependencies:
2024-02-05 16:13:34,634:INFO:                shap: 0.44.1
2024-02-05 16:13:34,634:INFO:           interpret: Not installed
2024-02-05 16:13:34,634:INFO:                umap: Not installed
2024-02-05 16:13:34,634:INFO:     ydata_profiling: Not installed
2024-02-05 16:13:34,634:INFO:  explainerdashboard: Not installed
2024-02-05 16:13:34,634:INFO:             autoviz: Not installed
2024-02-05 16:13:34,634:INFO:           fairlearn: Not installed
2024-02-05 16:13:34,634:INFO:          deepchecks: Not installed
2024-02-05 16:13:34,634:INFO:             xgboost: 2.0.3
2024-02-05 16:13:34,634:INFO:            catboost: 1.2.2
2024-02-05 16:13:34,634:INFO:              kmodes: Not installed
2024-02-05 16:13:34,634:INFO:             mlxtend: Not installed
2024-02-05 16:13:34,634:INFO:       statsforecast: Not installed
2024-02-05 16:13:34,634:INFO:        tune_sklearn: Not installed
2024-02-05 16:13:34,634:INFO:                 ray: Not installed
2024-02-05 16:13:34,634:INFO:            hyperopt: Not installed
2024-02-05 16:13:34,634:INFO:              optuna: Not installed
2024-02-05 16:13:34,634:INFO:               skopt: Not installed
2024-02-05 16:13:34,634:INFO:              mlflow: Not installed
2024-02-05 16:13:34,634:INFO:              gradio: Not installed
2024-02-05 16:13:34,634:INFO:             fastapi: Not installed
2024-02-05 16:13:34,634:INFO:             uvicorn: Not installed
2024-02-05 16:13:34,634:INFO:              m2cgen: Not installed
2024-02-05 16:13:34,634:INFO:           evidently: Not installed
2024-02-05 16:13:34,634:INFO:               fugue: Not installed
2024-02-05 16:13:34,634:INFO:           streamlit: Not installed
2024-02-05 16:13:34,634:INFO:             prophet: 1.1.5
2024-02-05 16:13:34,634:INFO:None
2024-02-05 16:13:34,634:INFO:Set up data.
2024-02-05 16:13:34,638:INFO:Set up folding strategy.
2024-02-05 16:13:34,638:INFO:Set up train/test split.
2024-02-05 16:13:34,640:INFO:Set up index.
2024-02-05 16:13:34,641:INFO:Assigning column types.
2024-02-05 16:13:34,642:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:13:34,664:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:13:34,666:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:13:34,683:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:13:34,685:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:13:34,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:13:34,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:13:34,739:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:13:34,740:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:13:34,740:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:13:34,764:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:13:34,778:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:13:34,780:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:13:34,804:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:13:34,878:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:13:34,879:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:13:34,880:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:13:34,919:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:13:34,921:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:13:34,959:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:13:34,960:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:13:34,962:INFO:Preparing preprocessing pipeline...
2024-02-05 16:13:34,962:INFO:Set up label encoding.
2024-02-05 16:13:34,962:INFO:Set up simple imputation.
2024-02-05 16:13:34,976:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:13:34,978:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:13:34,978:INFO:Creating final display dataframe.
2024-02-05 16:13:35,015:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  3b0a
2024-02-05 16:13:35,060:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:13:35,061:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:13:35,105:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:13:35,106:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:13:35,107:INFO:setup() successfully completed in 0.56s...............
2024-02-05 16:13:35,107:INFO:Initializing create_model()
2024-02-05 16:13:35,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AD9C33AD0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:13:35,107:INFO:Checking exceptions
2024-02-05 16:13:35,108:INFO:Importing libraries
2024-02-05 16:13:35,108:INFO:Copying training dataset
2024-02-05 16:13:35,110:INFO:Defining folds
2024-02-05 16:13:35,110:INFO:Declaring metric variables
2024-02-05 16:13:35,111:INFO:Importing untrained model
2024-02-05 16:13:35,111:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:13:35,111:INFO:Starting cross validation
2024-02-05 16:13:35,112:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:13:37,788:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:37,789:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:37,790:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:37,868:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:37,870:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:37,871:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:37,983:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:37,984:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:37,985:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:38,004:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:38,004:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:38,005:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:38,021:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:38,022:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:38,023:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:13:38,034:INFO:Calculating mean and std
2024-02-05 16:13:38,034:INFO:Creating metrics dataframe
2024-02-05 16:13:38,037:INFO:Finalizing model
2024-02-05 16:13:38,082:INFO:Uploading results into container
2024-02-05 16:13:38,083:INFO:Uploading model into container now
2024-02-05 16:13:38,088:INFO:_master_model_container: 1
2024-02-05 16:13:38,088:INFO:_display_container: 2
2024-02-05 16:13:38,089:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:13:38,089:INFO:create_model() successfully completed......................................
2024-02-05 16:13:38,160:INFO:Initializing plot_model()
2024-02-05 16:13:38,160:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AD9C33AD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:13:38,160:INFO:Checking exceptions
2024-02-05 16:13:38,163:INFO:Preloading libraries
2024-02-05 16:13:38,166:INFO:Copying training dataset
2024-02-05 16:13:38,167:INFO:Plot type: error
2024-02-05 16:13:38,260:INFO:Fitting Model
2024-02-05 16:13:38,261:INFO:Scoring test/hold-out set
2024-02-05 16:13:38,277:INFO:Saving 'Prediction Error.png'
2024-02-05 16:13:38,392:INFO:Visual Rendered Successfully
2024-02-05 16:13:38,450:INFO:plot_model() successfully completed......................................
2024-02-05 16:18:24,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:18:24,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:18:24,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:18:24,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:02,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:02,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:02,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:02,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:27,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:27,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:27,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:27,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:37,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:37,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:37,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:37,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:20:38,617:WARNING:C:\Documents\Code\Pycharm\MCM2024C\classify.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data['momentum1'] = train_data['momentum1'] + noise

2024-02-05 16:20:38,619:INFO:PyCaret ClassificationExperiment
2024-02-05 16:20:38,620:INFO:Logging name: clf-default-name
2024-02-05 16:20:38,620:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:20:38,620:INFO:version 3.2.0
2024-02-05 16:20:38,620:INFO:Initializing setup()
2024-02-05 16:20:38,620:INFO:self.USI: c5b8
2024-02-05 16:20:38,620:INFO:self._variable_keys: {'gpu_param', 'y_train', 'X', 'html_param', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'target_param', 'fold_generator', 'fold_shuffle_param', 'log_plots_param', 'X_test', 'USI', 'memory', 'pipeline', 'y_test', 'seed', 'fix_imbalance', 'logging_param', '_available_plots', 'fold_groups_param', 'data', 'y', 'n_jobs_param', '_ml_usecase', 'X_train', 'is_multiclass', 'idx'}
2024-02-05 16:20:38,620:INFO:Checking environment
2024-02-05 16:20:38,620:INFO:python_version: 3.11.7
2024-02-05 16:20:38,620:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:20:38,620:INFO:machine: AMD64
2024-02-05 16:20:38,628:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:20:38,631:INFO:Memory: svmem(total=16892026880, available=6092578816, percent=63.9, used=10799448064, free=6092578816)
2024-02-05 16:20:38,631:INFO:Physical Core: 12
2024-02-05 16:20:38,631:INFO:Logical Core: 16
2024-02-05 16:20:38,631:INFO:Checking libraries
2024-02-05 16:20:38,631:INFO:System:
2024-02-05 16:20:38,631:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:20:38,631:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:20:38,632:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:20:38,632:INFO:PyCaret required dependencies:
2024-02-05 16:20:38,660:INFO:                 pip: 23.3.2
2024-02-05 16:20:38,660:INFO:          setuptools: 65.5.0
2024-02-05 16:20:38,660:INFO:             pycaret: 3.2.0
2024-02-05 16:20:38,660:INFO:             IPython: 8.20.0
2024-02-05 16:20:38,660:INFO:          ipywidgets: 8.1.1
2024-02-05 16:20:38,660:INFO:                tqdm: 4.66.1
2024-02-05 16:20:38,660:INFO:               numpy: 1.25.2
2024-02-05 16:20:38,660:INFO:              pandas: 1.5.3
2024-02-05 16:20:38,660:INFO:              jinja2: 3.1.3
2024-02-05 16:20:38,660:INFO:               scipy: 1.10.1
2024-02-05 16:20:38,660:INFO:              joblib: 1.3.2
2024-02-05 16:20:38,660:INFO:             sklearn: 1.2.2
2024-02-05 16:20:38,660:INFO:                pyod: 1.1.2
2024-02-05 16:20:38,660:INFO:            imblearn: 0.12.0
2024-02-05 16:20:38,660:INFO:   category_encoders: 2.6.3
2024-02-05 16:20:38,660:INFO:            lightgbm: 4.3.0
2024-02-05 16:20:38,660:INFO:               numba: 0.58.1
2024-02-05 16:20:38,660:INFO:            requests: 2.31.0
2024-02-05 16:20:38,660:INFO:          matplotlib: 3.6.0
2024-02-05 16:20:38,660:INFO:          scikitplot: 0.3.7
2024-02-05 16:20:38,660:INFO:         yellowbrick: 1.5
2024-02-05 16:20:38,660:INFO:              plotly: 5.18.0
2024-02-05 16:20:38,660:INFO:    plotly-resampler: Not installed
2024-02-05 16:20:38,660:INFO:             kaleido: 0.2.1
2024-02-05 16:20:38,661:INFO:           schemdraw: 0.15
2024-02-05 16:20:38,661:INFO:         statsmodels: 0.14.1
2024-02-05 16:20:38,661:INFO:              sktime: 0.21.1
2024-02-05 16:20:38,661:INFO:               tbats: 1.1.3
2024-02-05 16:20:38,661:INFO:            pmdarima: 2.0.4
2024-02-05 16:20:38,661:INFO:              psutil: 5.9.8
2024-02-05 16:20:38,661:INFO:          markupsafe: 2.1.4
2024-02-05 16:20:38,661:INFO:             pickle5: Not installed
2024-02-05 16:20:38,661:INFO:         cloudpickle: 3.0.0
2024-02-05 16:20:38,661:INFO:         deprecation: 2.1.0
2024-02-05 16:20:38,661:INFO:              xxhash: 3.4.1
2024-02-05 16:20:38,661:INFO:           wurlitzer: Not installed
2024-02-05 16:20:38,661:INFO:PyCaret optional dependencies:
2024-02-05 16:20:38,690:INFO:                shap: 0.44.1
2024-02-05 16:20:38,692:INFO:           interpret: Not installed
2024-02-05 16:20:38,692:INFO:                umap: Not installed
2024-02-05 16:20:38,692:INFO:     ydata_profiling: Not installed
2024-02-05 16:20:38,692:INFO:  explainerdashboard: Not installed
2024-02-05 16:20:38,692:INFO:             autoviz: Not installed
2024-02-05 16:20:38,692:INFO:           fairlearn: Not installed
2024-02-05 16:20:38,692:INFO:          deepchecks: Not installed
2024-02-05 16:20:38,692:INFO:             xgboost: 2.0.3
2024-02-05 16:20:38,692:INFO:            catboost: 1.2.2
2024-02-05 16:20:38,692:INFO:              kmodes: Not installed
2024-02-05 16:20:38,692:INFO:             mlxtend: Not installed
2024-02-05 16:20:38,692:INFO:       statsforecast: Not installed
2024-02-05 16:20:38,692:INFO:        tune_sklearn: Not installed
2024-02-05 16:20:38,692:INFO:                 ray: Not installed
2024-02-05 16:20:38,692:INFO:            hyperopt: Not installed
2024-02-05 16:20:38,692:INFO:              optuna: Not installed
2024-02-05 16:20:38,692:INFO:               skopt: Not installed
2024-02-05 16:20:38,692:INFO:              mlflow: Not installed
2024-02-05 16:20:38,692:INFO:              gradio: Not installed
2024-02-05 16:20:38,692:INFO:             fastapi: Not installed
2024-02-05 16:20:38,692:INFO:             uvicorn: Not installed
2024-02-05 16:20:38,692:INFO:              m2cgen: Not installed
2024-02-05 16:20:38,692:INFO:           evidently: Not installed
2024-02-05 16:20:38,692:INFO:               fugue: Not installed
2024-02-05 16:20:38,692:INFO:           streamlit: Not installed
2024-02-05 16:20:38,692:INFO:             prophet: 1.1.5
2024-02-05 16:20:38,692:INFO:None
2024-02-05 16:20:38,692:INFO:Set up data.
2024-02-05 16:20:38,695:INFO:Set up folding strategy.
2024-02-05 16:20:38,695:INFO:Set up train/test split.
2024-02-05 16:20:38,697:INFO:Set up index.
2024-02-05 16:20:38,697:INFO:Assigning column types.
2024-02-05 16:20:38,699:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:20:38,722:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:20:38,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:20:38,740:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:20:38,743:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:20:38,782:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:20:38,782:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:20:38,798:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:20:38,799:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:20:38,799:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:20:38,824:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:20:38,838:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:20:38,839:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:20:38,864:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:20:38,936:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:20:38,937:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:20:38,938:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:20:38,974:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:20:38,975:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:20:39,014:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:20:39,015:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:20:39,017:INFO:Preparing preprocessing pipeline...
2024-02-05 16:20:39,017:INFO:Set up label encoding.
2024-02-05 16:20:39,017:INFO:Set up simple imputation.
2024-02-05 16:20:39,030:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:20:39,033:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:20:39,033:INFO:Creating final display dataframe.
2024-02-05 16:20:39,070:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  c5b8
2024-02-05 16:20:39,113:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:20:39,115:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:20:39,153:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:20:39,154:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:20:39,155:INFO:setup() successfully completed in 0.54s...............
2024-02-05 16:20:39,155:INFO:Initializing create_model()
2024-02-05 16:20:39,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001981013C150>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:20:39,155:INFO:Checking exceptions
2024-02-05 16:20:39,157:INFO:Importing libraries
2024-02-05 16:20:39,157:INFO:Copying training dataset
2024-02-05 16:20:39,158:INFO:Defining folds
2024-02-05 16:20:39,158:INFO:Declaring metric variables
2024-02-05 16:20:39,158:INFO:Importing untrained model
2024-02-05 16:20:39,159:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:20:39,159:INFO:Starting cross validation
2024-02-05 16:20:39,160:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:20:41,742:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,743:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,744:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,768:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,769:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,770:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,879:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,882:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,883:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,895:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,895:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,897:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,907:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,908:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,909:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:20:41,916:INFO:Calculating mean and std
2024-02-05 16:20:41,917:INFO:Creating metrics dataframe
2024-02-05 16:20:41,919:INFO:Finalizing model
2024-02-05 16:20:41,976:INFO:Uploading results into container
2024-02-05 16:20:41,977:INFO:Uploading model into container now
2024-02-05 16:20:41,983:INFO:_master_model_container: 1
2024-02-05 16:20:41,983:INFO:_display_container: 2
2024-02-05 16:20:41,983:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:20:41,983:INFO:create_model() successfully completed......................................
2024-02-05 16:20:42,048:INFO:Initializing plot_model()
2024-02-05 16:20:42,048:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001981013C150>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:20:42,048:INFO:Checking exceptions
2024-02-05 16:20:42,050:INFO:Preloading libraries
2024-02-05 16:20:42,055:INFO:Copying training dataset
2024-02-05 16:20:42,055:INFO:Plot type: error
2024-02-05 16:20:42,121:INFO:Fitting Model
2024-02-05 16:20:42,121:INFO:Scoring test/hold-out set
2024-02-05 16:20:42,138:INFO:Saving 'Prediction Error.png'
2024-02-05 16:20:42,255:INFO:Visual Rendered Successfully
2024-02-05 16:20:42,313:INFO:plot_model() successfully completed......................................
2024-02-05 16:21:31,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:21:31,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:21:31,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:21:31,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:21:32,674:WARNING:C:\Documents\Code\Pycharm\MCM2024C\classify.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data['momentum1'] = train_data['momentum1'] + noise

2024-02-05 16:21:32,676:INFO:PyCaret ClassificationExperiment
2024-02-05 16:21:32,676:INFO:Logging name: clf-default-name
2024-02-05 16:21:32,676:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:21:32,676:INFO:version 3.2.0
2024-02-05 16:21:32,676:INFO:Initializing setup()
2024-02-05 16:21:32,676:INFO:self.USI: fa52
2024-02-05 16:21:32,676:INFO:self._variable_keys: {'fold_groups_param', 'fold_shuffle_param', 'exp_id', 'y', 'pipeline', 'fix_imbalance', 'gpu_n_jobs_param', 'X_test', 'html_param', 'data', '_available_plots', '_ml_usecase', 'y_train', 'is_multiclass', 'X', 'target_param', 'seed', 'memory', 'fold_generator', 'idx', 'gpu_param', 'log_plots_param', 'logging_param', 'X_train', 'n_jobs_param', 'y_test', 'USI', 'exp_name_log'}
2024-02-05 16:21:32,676:INFO:Checking environment
2024-02-05 16:21:32,676:INFO:python_version: 3.11.7
2024-02-05 16:21:32,676:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:21:32,676:INFO:machine: AMD64
2024-02-05 16:21:32,685:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:21:32,688:INFO:Memory: svmem(total=16892026880, available=6198411264, percent=63.3, used=10693615616, free=6198411264)
2024-02-05 16:21:32,688:INFO:Physical Core: 12
2024-02-05 16:21:32,688:INFO:Logical Core: 16
2024-02-05 16:21:32,688:INFO:Checking libraries
2024-02-05 16:21:32,688:INFO:System:
2024-02-05 16:21:32,688:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:21:32,688:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:21:32,688:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:21:32,688:INFO:PyCaret required dependencies:
2024-02-05 16:21:32,715:INFO:                 pip: 23.3.2
2024-02-05 16:21:32,715:INFO:          setuptools: 65.5.0
2024-02-05 16:21:32,716:INFO:             pycaret: 3.2.0
2024-02-05 16:21:32,716:INFO:             IPython: 8.20.0
2024-02-05 16:21:32,716:INFO:          ipywidgets: 8.1.1
2024-02-05 16:21:32,716:INFO:                tqdm: 4.66.1
2024-02-05 16:21:32,716:INFO:               numpy: 1.25.2
2024-02-05 16:21:32,716:INFO:              pandas: 1.5.3
2024-02-05 16:21:32,716:INFO:              jinja2: 3.1.3
2024-02-05 16:21:32,716:INFO:               scipy: 1.10.1
2024-02-05 16:21:32,716:INFO:              joblib: 1.3.2
2024-02-05 16:21:32,716:INFO:             sklearn: 1.2.2
2024-02-05 16:21:32,716:INFO:                pyod: 1.1.2
2024-02-05 16:21:32,716:INFO:            imblearn: 0.12.0
2024-02-05 16:21:32,716:INFO:   category_encoders: 2.6.3
2024-02-05 16:21:32,716:INFO:            lightgbm: 4.3.0
2024-02-05 16:21:32,716:INFO:               numba: 0.58.1
2024-02-05 16:21:32,716:INFO:            requests: 2.31.0
2024-02-05 16:21:32,716:INFO:          matplotlib: 3.6.0
2024-02-05 16:21:32,716:INFO:          scikitplot: 0.3.7
2024-02-05 16:21:32,716:INFO:         yellowbrick: 1.5
2024-02-05 16:21:32,716:INFO:              plotly: 5.18.0
2024-02-05 16:21:32,716:INFO:    plotly-resampler: Not installed
2024-02-05 16:21:32,716:INFO:             kaleido: 0.2.1
2024-02-05 16:21:32,716:INFO:           schemdraw: 0.15
2024-02-05 16:21:32,716:INFO:         statsmodels: 0.14.1
2024-02-05 16:21:32,716:INFO:              sktime: 0.21.1
2024-02-05 16:21:32,716:INFO:               tbats: 1.1.3
2024-02-05 16:21:32,716:INFO:            pmdarima: 2.0.4
2024-02-05 16:21:32,716:INFO:              psutil: 5.9.8
2024-02-05 16:21:32,716:INFO:          markupsafe: 2.1.4
2024-02-05 16:21:32,716:INFO:             pickle5: Not installed
2024-02-05 16:21:32,716:INFO:         cloudpickle: 3.0.0
2024-02-05 16:21:32,716:INFO:         deprecation: 2.1.0
2024-02-05 16:21:32,716:INFO:              xxhash: 3.4.1
2024-02-05 16:21:32,716:INFO:           wurlitzer: Not installed
2024-02-05 16:21:32,716:INFO:PyCaret optional dependencies:
2024-02-05 16:21:32,745:INFO:                shap: 0.44.1
2024-02-05 16:21:32,745:INFO:           interpret: Not installed
2024-02-05 16:21:32,745:INFO:                umap: Not installed
2024-02-05 16:21:32,745:INFO:     ydata_profiling: Not installed
2024-02-05 16:21:32,745:INFO:  explainerdashboard: Not installed
2024-02-05 16:21:32,745:INFO:             autoviz: Not installed
2024-02-05 16:21:32,746:INFO:           fairlearn: Not installed
2024-02-05 16:21:32,746:INFO:          deepchecks: Not installed
2024-02-05 16:21:32,746:INFO:             xgboost: 2.0.3
2024-02-05 16:21:32,746:INFO:            catboost: 1.2.2
2024-02-05 16:21:32,746:INFO:              kmodes: Not installed
2024-02-05 16:21:32,746:INFO:             mlxtend: Not installed
2024-02-05 16:21:32,746:INFO:       statsforecast: Not installed
2024-02-05 16:21:32,746:INFO:        tune_sklearn: Not installed
2024-02-05 16:21:32,746:INFO:                 ray: Not installed
2024-02-05 16:21:32,746:INFO:            hyperopt: Not installed
2024-02-05 16:21:32,746:INFO:              optuna: Not installed
2024-02-05 16:21:32,746:INFO:               skopt: Not installed
2024-02-05 16:21:32,746:INFO:              mlflow: Not installed
2024-02-05 16:21:32,746:INFO:              gradio: Not installed
2024-02-05 16:21:32,746:INFO:             fastapi: Not installed
2024-02-05 16:21:32,746:INFO:             uvicorn: Not installed
2024-02-05 16:21:32,746:INFO:              m2cgen: Not installed
2024-02-05 16:21:32,746:INFO:           evidently: Not installed
2024-02-05 16:21:32,746:INFO:               fugue: Not installed
2024-02-05 16:21:32,746:INFO:           streamlit: Not installed
2024-02-05 16:21:32,746:INFO:             prophet: 1.1.5
2024-02-05 16:21:32,746:INFO:None
2024-02-05 16:21:32,746:INFO:Set up data.
2024-02-05 16:21:32,750:INFO:Set up folding strategy.
2024-02-05 16:21:32,750:INFO:Set up train/test split.
2024-02-05 16:21:32,751:INFO:Set up index.
2024-02-05 16:21:32,751:INFO:Assigning column types.
2024-02-05 16:21:32,753:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:21:32,777:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:21:32,778:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:21:32,796:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:21:32,798:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:21:32,837:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:21:32,838:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:21:32,853:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:21:32,855:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:21:32,855:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:21:32,879:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:21:32,893:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:21:32,895:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:21:32,919:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:21:32,990:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:21:32,991:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:21:32,992:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:21:33,029:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:21:33,030:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:21:33,069:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:21:33,070:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:21:33,071:INFO:Preparing preprocessing pipeline...
2024-02-05 16:21:33,072:INFO:Set up label encoding.
2024-02-05 16:21:33,072:INFO:Set up simple imputation.
2024-02-05 16:21:33,088:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:21:33,091:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:21:33,091:INFO:Creating final display dataframe.
2024-02-05 16:21:33,127:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  fa52
2024-02-05 16:21:33,167:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:21:33,169:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:21:33,207:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:21:33,208:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:21:33,209:INFO:setup() successfully completed in 0.53s...............
2024-02-05 16:21:33,209:INFO:Initializing create_model()
2024-02-05 16:21:33,209:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028EDCC602D0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:21:33,209:INFO:Checking exceptions
2024-02-05 16:21:33,211:INFO:Importing libraries
2024-02-05 16:21:33,211:INFO:Copying training dataset
2024-02-05 16:21:33,213:INFO:Defining folds
2024-02-05 16:21:33,213:INFO:Declaring metric variables
2024-02-05 16:21:33,213:INFO:Importing untrained model
2024-02-05 16:21:33,214:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:21:33,214:INFO:Starting cross validation
2024-02-05 16:21:33,215:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:21:35,744:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,745:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,747:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,777:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,779:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,780:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,894:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,896:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,897:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,907:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,908:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,908:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,908:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,909:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,910:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:21:35,920:INFO:Calculating mean and std
2024-02-05 16:21:35,920:INFO:Creating metrics dataframe
2024-02-05 16:21:35,922:INFO:Finalizing model
2024-02-05 16:21:35,984:INFO:Uploading results into container
2024-02-05 16:21:35,985:INFO:Uploading model into container now
2024-02-05 16:21:35,993:INFO:_master_model_container: 1
2024-02-05 16:21:35,993:INFO:_display_container: 2
2024-02-05 16:21:35,994:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:21:35,994:INFO:create_model() successfully completed......................................
2024-02-05 16:21:36,060:INFO:Initializing plot_model()
2024-02-05 16:21:36,060:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028EDCC602D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:21:36,060:INFO:Checking exceptions
2024-02-05 16:21:36,063:INFO:Preloading libraries
2024-02-05 16:21:36,068:INFO:Copying training dataset
2024-02-05 16:21:36,068:INFO:Plot type: confusion_matrix
2024-02-05 16:21:36,169:INFO:Fitting Model
2024-02-05 16:21:36,170:INFO:Scoring test/hold-out set
2024-02-05 16:21:36,185:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:21:36,286:INFO:Visual Rendered Successfully
2024-02-05 16:21:36,339:INFO:plot_model() successfully completed......................................
2024-02-05 16:21:36,341:INFO:Initializing plot_model()
2024-02-05 16:21:36,341:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028EDCC602D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:21:36,341:INFO:Checking exceptions
2024-02-05 16:21:36,342:INFO:Preloading libraries
2024-02-05 16:21:36,346:INFO:Copying training dataset
2024-02-05 16:21:36,346:INFO:Plot type: error
2024-02-05 16:21:36,394:INFO:Fitting Model
2024-02-05 16:21:36,395:INFO:Scoring test/hold-out set
2024-02-05 16:21:36,408:INFO:Saving 'Prediction Error.png'
2024-02-05 16:21:36,509:INFO:Visual Rendered Successfully
2024-02-05 16:21:36,564:INFO:plot_model() successfully completed......................................
2024-02-05 16:22:48,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:22:48,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:22:48,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:22:48,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:22:49,660:INFO:PyCaret ClassificationExperiment
2024-02-05 16:22:49,660:INFO:Logging name: clf-default-name
2024-02-05 16:22:49,660:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:22:49,660:INFO:version 3.2.0
2024-02-05 16:22:49,660:INFO:Initializing setup()
2024-02-05 16:22:49,660:INFO:self.USI: 265f
2024-02-05 16:22:49,660:INFO:self._variable_keys: {'fold_groups_param', 'target_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'exp_name_log', 'is_multiclass', 'memory', 'y_train', 'logging_param', 'fold_generator', 'fix_imbalance', 'X_test', 'y_test', 'seed', 'X_train', 'pipeline', 'exp_id', 'idx', 'y', 'data', 'fold_shuffle_param', 'html_param', 'log_plots_param', 'n_jobs_param', 'gpu_param', 'USI', '_ml_usecase'}
2024-02-05 16:22:49,660:INFO:Checking environment
2024-02-05 16:22:49,660:INFO:python_version: 3.11.7
2024-02-05 16:22:49,660:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:22:49,660:INFO:machine: AMD64
2024-02-05 16:22:49,667:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:22:49,671:INFO:Memory: svmem(total=16892026880, available=5938995200, percent=64.8, used=10953031680, free=5938995200)
2024-02-05 16:22:49,671:INFO:Physical Core: 12
2024-02-05 16:22:49,671:INFO:Logical Core: 16
2024-02-05 16:22:49,671:INFO:Checking libraries
2024-02-05 16:22:49,671:INFO:System:
2024-02-05 16:22:49,671:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:22:49,671:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:22:49,671:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:22:49,671:INFO:PyCaret required dependencies:
2024-02-05 16:22:49,698:INFO:                 pip: 23.3.2
2024-02-05 16:22:49,698:INFO:          setuptools: 65.5.0
2024-02-05 16:22:49,698:INFO:             pycaret: 3.2.0
2024-02-05 16:22:49,698:INFO:             IPython: 8.20.0
2024-02-05 16:22:49,698:INFO:          ipywidgets: 8.1.1
2024-02-05 16:22:49,698:INFO:                tqdm: 4.66.1
2024-02-05 16:22:49,698:INFO:               numpy: 1.25.2
2024-02-05 16:22:49,698:INFO:              pandas: 1.5.3
2024-02-05 16:22:49,698:INFO:              jinja2: 3.1.3
2024-02-05 16:22:49,698:INFO:               scipy: 1.10.1
2024-02-05 16:22:49,698:INFO:              joblib: 1.3.2
2024-02-05 16:22:49,698:INFO:             sklearn: 1.2.2
2024-02-05 16:22:49,698:INFO:                pyod: 1.1.2
2024-02-05 16:22:49,698:INFO:            imblearn: 0.12.0
2024-02-05 16:22:49,698:INFO:   category_encoders: 2.6.3
2024-02-05 16:22:49,698:INFO:            lightgbm: 4.3.0
2024-02-05 16:22:49,698:INFO:               numba: 0.58.1
2024-02-05 16:22:49,698:INFO:            requests: 2.31.0
2024-02-05 16:22:49,698:INFO:          matplotlib: 3.6.0
2024-02-05 16:22:49,698:INFO:          scikitplot: 0.3.7
2024-02-05 16:22:49,698:INFO:         yellowbrick: 1.5
2024-02-05 16:22:49,698:INFO:              plotly: 5.18.0
2024-02-05 16:22:49,698:INFO:    plotly-resampler: Not installed
2024-02-05 16:22:49,698:INFO:             kaleido: 0.2.1
2024-02-05 16:22:49,698:INFO:           schemdraw: 0.15
2024-02-05 16:22:49,698:INFO:         statsmodels: 0.14.1
2024-02-05 16:22:49,698:INFO:              sktime: 0.21.1
2024-02-05 16:22:49,698:INFO:               tbats: 1.1.3
2024-02-05 16:22:49,698:INFO:            pmdarima: 2.0.4
2024-02-05 16:22:49,698:INFO:              psutil: 5.9.8
2024-02-05 16:22:49,698:INFO:          markupsafe: 2.1.4
2024-02-05 16:22:49,698:INFO:             pickle5: Not installed
2024-02-05 16:22:49,698:INFO:         cloudpickle: 3.0.0
2024-02-05 16:22:49,698:INFO:         deprecation: 2.1.0
2024-02-05 16:22:49,698:INFO:              xxhash: 3.4.1
2024-02-05 16:22:49,699:INFO:           wurlitzer: Not installed
2024-02-05 16:22:49,699:INFO:PyCaret optional dependencies:
2024-02-05 16:22:49,728:INFO:                shap: 0.44.1
2024-02-05 16:22:49,728:INFO:           interpret: Not installed
2024-02-05 16:22:49,728:INFO:                umap: Not installed
2024-02-05 16:22:49,728:INFO:     ydata_profiling: Not installed
2024-02-05 16:22:49,728:INFO:  explainerdashboard: Not installed
2024-02-05 16:22:49,728:INFO:             autoviz: Not installed
2024-02-05 16:22:49,728:INFO:           fairlearn: Not installed
2024-02-05 16:22:49,728:INFO:          deepchecks: Not installed
2024-02-05 16:22:49,728:INFO:             xgboost: 2.0.3
2024-02-05 16:22:49,728:INFO:            catboost: 1.2.2
2024-02-05 16:22:49,728:INFO:              kmodes: Not installed
2024-02-05 16:22:49,728:INFO:             mlxtend: Not installed
2024-02-05 16:22:49,728:INFO:       statsforecast: Not installed
2024-02-05 16:22:49,728:INFO:        tune_sklearn: Not installed
2024-02-05 16:22:49,728:INFO:                 ray: Not installed
2024-02-05 16:22:49,728:INFO:            hyperopt: Not installed
2024-02-05 16:22:49,728:INFO:              optuna: Not installed
2024-02-05 16:22:49,728:INFO:               skopt: Not installed
2024-02-05 16:22:49,728:INFO:              mlflow: Not installed
2024-02-05 16:22:49,728:INFO:              gradio: Not installed
2024-02-05 16:22:49,728:INFO:             fastapi: Not installed
2024-02-05 16:22:49,728:INFO:             uvicorn: Not installed
2024-02-05 16:22:49,729:INFO:              m2cgen: Not installed
2024-02-05 16:22:49,729:INFO:           evidently: Not installed
2024-02-05 16:22:49,729:INFO:               fugue: Not installed
2024-02-05 16:22:49,729:INFO:           streamlit: Not installed
2024-02-05 16:22:49,729:INFO:             prophet: 1.1.5
2024-02-05 16:22:49,729:INFO:None
2024-02-05 16:22:49,729:INFO:Set up data.
2024-02-05 16:22:49,732:INFO:Set up folding strategy.
2024-02-05 16:22:49,732:INFO:Set up train/test split.
2024-02-05 16:22:49,734:INFO:Set up index.
2024-02-05 16:22:49,734:INFO:Assigning column types.
2024-02-05 16:22:49,735:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:22:49,759:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:22:49,760:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:22:49,777:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:22:49,779:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:22:49,828:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:22:49,828:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:22:49,844:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:22:49,845:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:22:49,846:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:22:49,870:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:22:49,885:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:22:49,887:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:22:49,912:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:22:49,987:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:22:49,989:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:22:49,989:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:22:50,029:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:22:50,031:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:22:50,071:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:22:50,072:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:22:50,073:INFO:Preparing preprocessing pipeline...
2024-02-05 16:22:50,074:INFO:Set up label encoding.
2024-02-05 16:22:50,074:INFO:Set up simple imputation.
2024-02-05 16:22:50,089:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:22:50,091:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:22:50,091:INFO:Creating final display dataframe.
2024-02-05 16:22:50,132:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  265f
2024-02-05 16:22:50,175:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:22:50,177:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:22:50,219:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:22:50,220:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:22:50,220:INFO:setup() successfully completed in 0.56s...............
2024-02-05 16:22:50,221:INFO:Initializing create_model()
2024-02-05 16:22:50,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C6B7B3A90>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:22:50,221:INFO:Checking exceptions
2024-02-05 16:22:50,222:INFO:Importing libraries
2024-02-05 16:22:50,222:INFO:Copying training dataset
2024-02-05 16:22:50,224:INFO:Defining folds
2024-02-05 16:22:50,224:INFO:Declaring metric variables
2024-02-05 16:22:50,224:INFO:Importing untrained model
2024-02-05 16:22:50,225:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:22:50,225:INFO:Starting cross validation
2024-02-05 16:22:50,226:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:22:53,289:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,291:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,293:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,329:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,331:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,332:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,368:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,370:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,370:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,376:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,377:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,379:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,380:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,380:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,381:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:22:53,390:INFO:Calculating mean and std
2024-02-05 16:22:53,390:INFO:Creating metrics dataframe
2024-02-05 16:22:53,392:INFO:Finalizing model
2024-02-05 16:22:53,447:INFO:Uploading results into container
2024-02-05 16:22:53,448:INFO:Uploading model into container now
2024-02-05 16:22:53,456:INFO:_master_model_container: 1
2024-02-05 16:22:53,456:INFO:_display_container: 2
2024-02-05 16:22:53,457:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:22:53,457:INFO:create_model() successfully completed......................................
2024-02-05 16:22:53,525:INFO:Initializing plot_model()
2024-02-05 16:22:53,525:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C6B7B3A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:22:53,525:INFO:Checking exceptions
2024-02-05 16:22:53,529:INFO:Preloading libraries
2024-02-05 16:22:53,533:INFO:Copying training dataset
2024-02-05 16:22:53,533:INFO:Plot type: confusion_matrix
2024-02-05 16:22:53,605:INFO:Fitting Model
2024-02-05 16:22:53,605:INFO:Scoring test/hold-out set
2024-02-05 16:22:53,620:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:22:53,706:INFO:Visual Rendered Successfully
2024-02-05 16:22:53,766:INFO:plot_model() successfully completed......................................
2024-02-05 16:22:53,767:INFO:Initializing plot_model()
2024-02-05 16:22:53,767:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C6B7B3A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:22:53,767:INFO:Checking exceptions
2024-02-05 16:22:53,768:INFO:Preloading libraries
2024-02-05 16:22:53,772:INFO:Copying training dataset
2024-02-05 16:22:53,772:INFO:Plot type: error
2024-02-05 16:22:53,822:INFO:Fitting Model
2024-02-05 16:22:53,822:INFO:Scoring test/hold-out set
2024-02-05 16:22:53,835:INFO:Saving 'Prediction Error.png'
2024-02-05 16:22:53,945:INFO:Visual Rendered Successfully
2024-02-05 16:22:54,009:INFO:plot_model() successfully completed......................................
2024-02-05 16:23:22,849:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:23:22,850:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:23:22,850:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:23:22,850:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:23:23,635:WARNING:C:\Documents\Code\Pycharm\MCM2024C\classify.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data['momentum1'] = train_data['momentum1'] + noise

2024-02-05 16:23:23,637:INFO:PyCaret ClassificationExperiment
2024-02-05 16:23:23,637:INFO:Logging name: clf-default-name
2024-02-05 16:23:23,637:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:23:23,637:INFO:version 3.2.0
2024-02-05 16:23:23,638:INFO:Initializing setup()
2024-02-05 16:23:23,638:INFO:self.USI: 0a8a
2024-02-05 16:23:23,638:INFO:self._variable_keys: {'seed', 'exp_id', 'fold_groups_param', '_ml_usecase', 'fix_imbalance', '_available_plots', 'log_plots_param', 'gpu_n_jobs_param', 'X', 'is_multiclass', 'y_test', 'exp_name_log', 'fold_shuffle_param', 'y_train', 'pipeline', 'idx', 'html_param', 'n_jobs_param', 'y', 'USI', 'logging_param', 'data', 'fold_generator', 'memory', 'X_train', 'target_param', 'gpu_param', 'X_test'}
2024-02-05 16:23:23,638:INFO:Checking environment
2024-02-05 16:23:23,638:INFO:python_version: 3.11.7
2024-02-05 16:23:23,638:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:23:23,638:INFO:machine: AMD64
2024-02-05 16:23:23,644:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:23:23,648:INFO:Memory: svmem(total=16892026880, available=5894541312, percent=65.1, used=10997485568, free=5894541312)
2024-02-05 16:23:23,648:INFO:Physical Core: 12
2024-02-05 16:23:23,648:INFO:Logical Core: 16
2024-02-05 16:23:23,648:INFO:Checking libraries
2024-02-05 16:23:23,648:INFO:System:
2024-02-05 16:23:23,648:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:23:23,648:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:23:23,648:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:23:23,648:INFO:PyCaret required dependencies:
2024-02-05 16:23:23,678:INFO:                 pip: 23.3.2
2024-02-05 16:23:23,678:INFO:          setuptools: 65.5.0
2024-02-05 16:23:23,678:INFO:             pycaret: 3.2.0
2024-02-05 16:23:23,678:INFO:             IPython: 8.20.0
2024-02-05 16:23:23,678:INFO:          ipywidgets: 8.1.1
2024-02-05 16:23:23,678:INFO:                tqdm: 4.66.1
2024-02-05 16:23:23,678:INFO:               numpy: 1.25.2
2024-02-05 16:23:23,678:INFO:              pandas: 1.5.3
2024-02-05 16:23:23,678:INFO:              jinja2: 3.1.3
2024-02-05 16:23:23,678:INFO:               scipy: 1.10.1
2024-02-05 16:23:23,678:INFO:              joblib: 1.3.2
2024-02-05 16:23:23,678:INFO:             sklearn: 1.2.2
2024-02-05 16:23:23,678:INFO:                pyod: 1.1.2
2024-02-05 16:23:23,678:INFO:            imblearn: 0.12.0
2024-02-05 16:23:23,678:INFO:   category_encoders: 2.6.3
2024-02-05 16:23:23,678:INFO:            lightgbm: 4.3.0
2024-02-05 16:23:23,678:INFO:               numba: 0.58.1
2024-02-05 16:23:23,678:INFO:            requests: 2.31.0
2024-02-05 16:23:23,678:INFO:          matplotlib: 3.6.0
2024-02-05 16:23:23,678:INFO:          scikitplot: 0.3.7
2024-02-05 16:23:23,678:INFO:         yellowbrick: 1.5
2024-02-05 16:23:23,678:INFO:              plotly: 5.18.0
2024-02-05 16:23:23,678:INFO:    plotly-resampler: Not installed
2024-02-05 16:23:23,678:INFO:             kaleido: 0.2.1
2024-02-05 16:23:23,678:INFO:           schemdraw: 0.15
2024-02-05 16:23:23,678:INFO:         statsmodels: 0.14.1
2024-02-05 16:23:23,678:INFO:              sktime: 0.21.1
2024-02-05 16:23:23,678:INFO:               tbats: 1.1.3
2024-02-05 16:23:23,678:INFO:            pmdarima: 2.0.4
2024-02-05 16:23:23,678:INFO:              psutil: 5.9.8
2024-02-05 16:23:23,678:INFO:          markupsafe: 2.1.4
2024-02-05 16:23:23,678:INFO:             pickle5: Not installed
2024-02-05 16:23:23,678:INFO:         cloudpickle: 3.0.0
2024-02-05 16:23:23,679:INFO:         deprecation: 2.1.0
2024-02-05 16:23:23,679:INFO:              xxhash: 3.4.1
2024-02-05 16:23:23,679:INFO:           wurlitzer: Not installed
2024-02-05 16:23:23,679:INFO:PyCaret optional dependencies:
2024-02-05 16:23:23,707:INFO:                shap: 0.44.1
2024-02-05 16:23:23,707:INFO:           interpret: Not installed
2024-02-05 16:23:23,707:INFO:                umap: Not installed
2024-02-05 16:23:23,707:INFO:     ydata_profiling: Not installed
2024-02-05 16:23:23,707:INFO:  explainerdashboard: Not installed
2024-02-05 16:23:23,707:INFO:             autoviz: Not installed
2024-02-05 16:23:23,707:INFO:           fairlearn: Not installed
2024-02-05 16:23:23,707:INFO:          deepchecks: Not installed
2024-02-05 16:23:23,707:INFO:             xgboost: 2.0.3
2024-02-05 16:23:23,707:INFO:            catboost: 1.2.2
2024-02-05 16:23:23,707:INFO:              kmodes: Not installed
2024-02-05 16:23:23,707:INFO:             mlxtend: Not installed
2024-02-05 16:23:23,707:INFO:       statsforecast: Not installed
2024-02-05 16:23:23,707:INFO:        tune_sklearn: Not installed
2024-02-05 16:23:23,707:INFO:                 ray: Not installed
2024-02-05 16:23:23,707:INFO:            hyperopt: Not installed
2024-02-05 16:23:23,707:INFO:              optuna: Not installed
2024-02-05 16:23:23,707:INFO:               skopt: Not installed
2024-02-05 16:23:23,707:INFO:              mlflow: Not installed
2024-02-05 16:23:23,707:INFO:              gradio: Not installed
2024-02-05 16:23:23,707:INFO:             fastapi: Not installed
2024-02-05 16:23:23,707:INFO:             uvicorn: Not installed
2024-02-05 16:23:23,707:INFO:              m2cgen: Not installed
2024-02-05 16:23:23,707:INFO:           evidently: Not installed
2024-02-05 16:23:23,707:INFO:               fugue: Not installed
2024-02-05 16:23:23,707:INFO:           streamlit: Not installed
2024-02-05 16:23:23,707:INFO:             prophet: 1.1.5
2024-02-05 16:23:23,707:INFO:None
2024-02-05 16:23:23,707:INFO:Set up data.
2024-02-05 16:23:23,711:INFO:Set up folding strategy.
2024-02-05 16:23:23,711:INFO:Set up train/test split.
2024-02-05 16:23:23,713:INFO:Set up index.
2024-02-05 16:23:23,713:INFO:Assigning column types.
2024-02-05 16:23:23,714:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:23:23,738:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:23:23,739:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:23:23,758:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:23:23,759:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:23:23,797:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:23:23,798:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:23:23,812:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:23:23,814:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:23:23,814:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:23:23,838:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:23:23,852:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:23:23,853:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:23:23,877:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:23:23,949:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:23:23,950:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:23:23,950:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:23:23,988:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:23:23,989:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:23:24,027:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:23:24,028:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:23:24,030:INFO:Preparing preprocessing pipeline...
2024-02-05 16:23:24,031:INFO:Set up label encoding.
2024-02-05 16:23:24,031:INFO:Set up simple imputation.
2024-02-05 16:23:24,047:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:23:24,050:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:23:24,050:INFO:Creating final display dataframe.
2024-02-05 16:23:24,087:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  0a8a
2024-02-05 16:23:24,127:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:23:24,129:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:23:24,167:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:23:24,169:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:23:24,170:INFO:setup() successfully completed in 0.54s...............
2024-02-05 16:23:24,170:INFO:Initializing create_model()
2024-02-05 16:23:24,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000188BC804F90>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:23:24,170:INFO:Checking exceptions
2024-02-05 16:23:24,172:INFO:Importing libraries
2024-02-05 16:23:24,172:INFO:Copying training dataset
2024-02-05 16:23:24,174:INFO:Defining folds
2024-02-05 16:23:24,174:INFO:Declaring metric variables
2024-02-05 16:23:24,174:INFO:Importing untrained model
2024-02-05 16:23:24,174:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:23:24,175:INFO:Starting cross validation
2024-02-05 16:23:24,175:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:23:26,951:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:26,952:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:26,954:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,048:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,050:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,051:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,099:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,101:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,102:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,106:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,108:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,109:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,110:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,112:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,114:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:23:27,122:INFO:Calculating mean and std
2024-02-05 16:23:27,122:INFO:Creating metrics dataframe
2024-02-05 16:23:27,124:INFO:Finalizing model
2024-02-05 16:23:27,184:INFO:Uploading results into container
2024-02-05 16:23:27,185:INFO:Uploading model into container now
2024-02-05 16:23:27,191:INFO:_master_model_container: 1
2024-02-05 16:23:27,191:INFO:_display_container: 2
2024-02-05 16:23:27,192:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:23:27,192:INFO:create_model() successfully completed......................................
2024-02-05 16:23:27,264:INFO:Initializing plot_model()
2024-02-05 16:23:27,264:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000188BC804F90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:23:27,264:INFO:Checking exceptions
2024-02-05 16:23:27,267:INFO:Preloading libraries
2024-02-05 16:23:27,271:INFO:Copying training dataset
2024-02-05 16:23:27,272:INFO:Plot type: confusion_matrix
2024-02-05 16:23:27,343:INFO:Fitting Model
2024-02-05 16:23:27,344:INFO:Scoring test/hold-out set
2024-02-05 16:23:27,360:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:23:27,442:INFO:Visual Rendered Successfully
2024-02-05 16:23:27,502:INFO:plot_model() successfully completed......................................
2024-02-05 16:23:27,503:INFO:Initializing plot_model()
2024-02-05 16:23:27,503:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000188BC804F90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:23:27,503:INFO:Checking exceptions
2024-02-05 16:23:27,505:INFO:Preloading libraries
2024-02-05 16:23:27,512:INFO:Copying training dataset
2024-02-05 16:23:27,512:INFO:Plot type: error
2024-02-05 16:23:27,564:INFO:Fitting Model
2024-02-05 16:23:27,564:INFO:Scoring test/hold-out set
2024-02-05 16:23:27,577:INFO:Saving 'Prediction Error.png'
2024-02-05 16:23:27,696:INFO:Visual Rendered Successfully
2024-02-05 16:23:27,758:INFO:plot_model() successfully completed......................................
2024-02-05 16:24:05,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:24:05,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:24:05,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:24:05,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:24:06,109:WARNING:C:\Documents\Code\Pycharm\MCM2024C\classify.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data['type'] = train_data['type'] + noise

2024-02-05 16:24:06,111:INFO:PyCaret ClassificationExperiment
2024-02-05 16:24:06,111:INFO:Logging name: clf-default-name
2024-02-05 16:24:06,111:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:24:06,111:INFO:version 3.2.0
2024-02-05 16:24:06,111:INFO:Initializing setup()
2024-02-05 16:24:06,111:INFO:self.USI: 5218
2024-02-05 16:24:06,111:INFO:self._variable_keys: {'_available_plots', 'exp_id', 'gpu_param', '_ml_usecase', 'data', 'pipeline', 'seed', 'idx', 'log_plots_param', 'X_train', 'fix_imbalance', 'n_jobs_param', 'y', 'USI', 'is_multiclass', 'gpu_n_jobs_param', 'memory', 'fold_shuffle_param', 'y_test', 'fold_generator', 'html_param', 'y_train', 'X_test', 'logging_param', 'target_param', 'X', 'exp_name_log', 'fold_groups_param'}
2024-02-05 16:24:06,111:INFO:Checking environment
2024-02-05 16:24:06,111:INFO:python_version: 3.11.7
2024-02-05 16:24:06,111:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:24:06,111:INFO:machine: AMD64
2024-02-05 16:24:06,118:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:24:06,123:INFO:Memory: svmem(total=16892026880, available=5971824640, percent=64.6, used=10920202240, free=5971824640)
2024-02-05 16:24:06,124:INFO:Physical Core: 12
2024-02-05 16:24:06,124:INFO:Logical Core: 16
2024-02-05 16:24:06,124:INFO:Checking libraries
2024-02-05 16:24:06,124:INFO:System:
2024-02-05 16:24:06,124:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:24:06,124:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:24:06,124:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:24:06,124:INFO:PyCaret required dependencies:
2024-02-05 16:24:06,151:INFO:                 pip: 23.3.2
2024-02-05 16:24:06,151:INFO:          setuptools: 65.5.0
2024-02-05 16:24:06,151:INFO:             pycaret: 3.2.0
2024-02-05 16:24:06,151:INFO:             IPython: 8.20.0
2024-02-05 16:24:06,151:INFO:          ipywidgets: 8.1.1
2024-02-05 16:24:06,151:INFO:                tqdm: 4.66.1
2024-02-05 16:24:06,151:INFO:               numpy: 1.25.2
2024-02-05 16:24:06,151:INFO:              pandas: 1.5.3
2024-02-05 16:24:06,151:INFO:              jinja2: 3.1.3
2024-02-05 16:24:06,151:INFO:               scipy: 1.10.1
2024-02-05 16:24:06,151:INFO:              joblib: 1.3.2
2024-02-05 16:24:06,151:INFO:             sklearn: 1.2.2
2024-02-05 16:24:06,151:INFO:                pyod: 1.1.2
2024-02-05 16:24:06,151:INFO:            imblearn: 0.12.0
2024-02-05 16:24:06,151:INFO:   category_encoders: 2.6.3
2024-02-05 16:24:06,151:INFO:            lightgbm: 4.3.0
2024-02-05 16:24:06,151:INFO:               numba: 0.58.1
2024-02-05 16:24:06,151:INFO:            requests: 2.31.0
2024-02-05 16:24:06,151:INFO:          matplotlib: 3.6.0
2024-02-05 16:24:06,151:INFO:          scikitplot: 0.3.7
2024-02-05 16:24:06,151:INFO:         yellowbrick: 1.5
2024-02-05 16:24:06,151:INFO:              plotly: 5.18.0
2024-02-05 16:24:06,151:INFO:    plotly-resampler: Not installed
2024-02-05 16:24:06,152:INFO:             kaleido: 0.2.1
2024-02-05 16:24:06,152:INFO:           schemdraw: 0.15
2024-02-05 16:24:06,152:INFO:         statsmodels: 0.14.1
2024-02-05 16:24:06,152:INFO:              sktime: 0.21.1
2024-02-05 16:24:06,152:INFO:               tbats: 1.1.3
2024-02-05 16:24:06,152:INFO:            pmdarima: 2.0.4
2024-02-05 16:24:06,152:INFO:              psutil: 5.9.8
2024-02-05 16:24:06,152:INFO:          markupsafe: 2.1.4
2024-02-05 16:24:06,152:INFO:             pickle5: Not installed
2024-02-05 16:24:06,152:INFO:         cloudpickle: 3.0.0
2024-02-05 16:24:06,152:INFO:         deprecation: 2.1.0
2024-02-05 16:24:06,152:INFO:              xxhash: 3.4.1
2024-02-05 16:24:06,152:INFO:           wurlitzer: Not installed
2024-02-05 16:24:06,152:INFO:PyCaret optional dependencies:
2024-02-05 16:24:06,182:INFO:                shap: 0.44.1
2024-02-05 16:24:06,182:INFO:           interpret: Not installed
2024-02-05 16:24:06,182:INFO:                umap: Not installed
2024-02-05 16:24:06,182:INFO:     ydata_profiling: Not installed
2024-02-05 16:24:06,182:INFO:  explainerdashboard: Not installed
2024-02-05 16:24:06,182:INFO:             autoviz: Not installed
2024-02-05 16:24:06,182:INFO:           fairlearn: Not installed
2024-02-05 16:24:06,182:INFO:          deepchecks: Not installed
2024-02-05 16:24:06,182:INFO:             xgboost: 2.0.3
2024-02-05 16:24:06,182:INFO:            catboost: 1.2.2
2024-02-05 16:24:06,182:INFO:              kmodes: Not installed
2024-02-05 16:24:06,182:INFO:             mlxtend: Not installed
2024-02-05 16:24:06,182:INFO:       statsforecast: Not installed
2024-02-05 16:24:06,182:INFO:        tune_sklearn: Not installed
2024-02-05 16:24:06,182:INFO:                 ray: Not installed
2024-02-05 16:24:06,182:INFO:            hyperopt: Not installed
2024-02-05 16:24:06,182:INFO:              optuna: Not installed
2024-02-05 16:24:06,182:INFO:               skopt: Not installed
2024-02-05 16:24:06,182:INFO:              mlflow: Not installed
2024-02-05 16:24:06,182:INFO:              gradio: Not installed
2024-02-05 16:24:06,182:INFO:             fastapi: Not installed
2024-02-05 16:24:06,182:INFO:             uvicorn: Not installed
2024-02-05 16:24:06,182:INFO:              m2cgen: Not installed
2024-02-05 16:24:06,182:INFO:           evidently: Not installed
2024-02-05 16:24:06,182:INFO:               fugue: Not installed
2024-02-05 16:24:06,182:INFO:           streamlit: Not installed
2024-02-05 16:24:06,182:INFO:             prophet: 1.1.5
2024-02-05 16:24:06,182:INFO:None
2024-02-05 16:24:06,182:INFO:Set up data.
2024-02-05 16:24:06,186:INFO:Set up folding strategy.
2024-02-05 16:24:06,186:INFO:Set up train/test split.
2024-02-05 16:24:06,188:INFO:Set up index.
2024-02-05 16:24:06,188:INFO:Assigning column types.
2024-02-05 16:24:06,189:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:24:06,214:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:24:06,215:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:24:06,234:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:24:06,235:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:24:06,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:24:06,277:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:24:06,296:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:24:06,298:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:24:06,299:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:24:06,322:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:24:06,337:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:24:06,338:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:24:06,361:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:24:06,436:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:24:06,437:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:24:06,438:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:24:06,475:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:24:06,476:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:24:06,515:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:24:06,517:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:24:06,519:INFO:Preparing preprocessing pipeline...
2024-02-05 16:24:06,520:INFO:Set up label encoding.
2024-02-05 16:24:06,520:INFO:Set up simple imputation.
2024-02-05 16:24:06,535:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:24:06,537:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:24:06,537:INFO:Creating final display dataframe.
2024-02-05 16:24:06,576:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  5218
2024-02-05 16:24:06,617:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:24:06,619:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:24:06,660:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:24:06,661:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:24:06,661:INFO:setup() successfully completed in 0.55s...............
2024-02-05 16:24:06,661:INFO:Initializing create_model()
2024-02-05 16:24:06,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F46EBDC150>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:24:06,661:INFO:Checking exceptions
2024-02-05 16:24:06,663:INFO:Importing libraries
2024-02-05 16:24:06,663:INFO:Copying training dataset
2024-02-05 16:24:06,665:INFO:Defining folds
2024-02-05 16:24:06,665:INFO:Declaring metric variables
2024-02-05 16:24:06,665:INFO:Importing untrained model
2024-02-05 16:24:06,665:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:24:06,665:INFO:Starting cross validation
2024-02-05 16:24:06,666:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:24:09,393:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,394:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,395:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,421:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,423:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,424:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,515:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,515:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,517:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,517:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,518:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,518:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,530:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,531:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,532:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:24:09,544:INFO:Calculating mean and std
2024-02-05 16:24:09,544:INFO:Creating metrics dataframe
2024-02-05 16:24:09,546:INFO:Finalizing model
2024-02-05 16:24:09,600:INFO:Uploading results into container
2024-02-05 16:24:09,601:INFO:Uploading model into container now
2024-02-05 16:24:09,606:INFO:_master_model_container: 1
2024-02-05 16:24:09,606:INFO:_display_container: 2
2024-02-05 16:24:09,607:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:24:09,607:INFO:create_model() successfully completed......................................
2024-02-05 16:24:09,676:INFO:Initializing plot_model()
2024-02-05 16:24:09,676:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F46EBDC150>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:24:09,676:INFO:Checking exceptions
2024-02-05 16:24:09,679:INFO:Preloading libraries
2024-02-05 16:24:09,684:INFO:Copying training dataset
2024-02-05 16:24:09,684:INFO:Plot type: confusion_matrix
2024-02-05 16:24:09,751:INFO:Fitting Model
2024-02-05 16:24:09,752:INFO:Scoring test/hold-out set
2024-02-05 16:24:09,767:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:24:09,848:INFO:Visual Rendered Successfully
2024-02-05 16:24:09,906:INFO:plot_model() successfully completed......................................
2024-02-05 16:24:09,907:INFO:Initializing plot_model()
2024-02-05 16:24:09,907:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F46EBDC150>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:24:09,907:INFO:Checking exceptions
2024-02-05 16:24:09,908:INFO:Preloading libraries
2024-02-05 16:24:09,912:INFO:Copying training dataset
2024-02-05 16:24:09,912:INFO:Plot type: error
2024-02-05 16:24:09,958:INFO:Fitting Model
2024-02-05 16:24:09,959:INFO:Scoring test/hold-out set
2024-02-05 16:24:09,973:INFO:Saving 'Prediction Error.png'
2024-02-05 16:24:10,077:INFO:Visual Rendered Successfully
2024-02-05 16:24:10,138:INFO:plot_model() successfully completed......................................
2024-02-05 16:25:29,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:25:29,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:25:29,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:25:29,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:25:30,574:WARNING:C:\Documents\Code\Pycharm\MCM2024C\classify.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data['df'] = train_data['df'] + noise

2024-02-05 16:25:30,576:INFO:PyCaret ClassificationExperiment
2024-02-05 16:25:30,576:INFO:Logging name: clf-default-name
2024-02-05 16:25:30,576:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:25:30,576:INFO:version 3.2.0
2024-02-05 16:25:30,576:INFO:Initializing setup()
2024-02-05 16:25:30,576:INFO:self.USI: e08d
2024-02-05 16:25:30,576:INFO:self._variable_keys: {'USI', 'log_plots_param', 'pipeline', 'fix_imbalance', 'y_test', 'target_param', 'exp_id', 'logging_param', '_available_plots', '_ml_usecase', 'y', 'fold_generator', 'exp_name_log', 'is_multiclass', 'fold_shuffle_param', 'gpu_n_jobs_param', 'idx', 'X', 'fold_groups_param', 'memory', 'X_train', 'seed', 'html_param', 'y_train', 'X_test', 'data', 'n_jobs_param', 'gpu_param'}
2024-02-05 16:25:30,576:INFO:Checking environment
2024-02-05 16:25:30,576:INFO:python_version: 3.11.7
2024-02-05 16:25:30,576:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:25:30,576:INFO:machine: AMD64
2024-02-05 16:25:30,584:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:25:30,588:INFO:Memory: svmem(total=16892026880, available=5740113920, percent=66.0, used=11151912960, free=5740113920)
2024-02-05 16:25:30,588:INFO:Physical Core: 12
2024-02-05 16:25:30,588:INFO:Logical Core: 16
2024-02-05 16:25:30,588:INFO:Checking libraries
2024-02-05 16:25:30,588:INFO:System:
2024-02-05 16:25:30,588:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:25:30,588:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:25:30,588:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:25:30,588:INFO:PyCaret required dependencies:
2024-02-05 16:25:30,617:INFO:                 pip: 23.3.2
2024-02-05 16:25:30,617:INFO:          setuptools: 65.5.0
2024-02-05 16:25:30,617:INFO:             pycaret: 3.2.0
2024-02-05 16:25:30,617:INFO:             IPython: 8.20.0
2024-02-05 16:25:30,617:INFO:          ipywidgets: 8.1.1
2024-02-05 16:25:30,617:INFO:                tqdm: 4.66.1
2024-02-05 16:25:30,617:INFO:               numpy: 1.25.2
2024-02-05 16:25:30,617:INFO:              pandas: 1.5.3
2024-02-05 16:25:30,617:INFO:              jinja2: 3.1.3
2024-02-05 16:25:30,617:INFO:               scipy: 1.10.1
2024-02-05 16:25:30,617:INFO:              joblib: 1.3.2
2024-02-05 16:25:30,617:INFO:             sklearn: 1.2.2
2024-02-05 16:25:30,617:INFO:                pyod: 1.1.2
2024-02-05 16:25:30,617:INFO:            imblearn: 0.12.0
2024-02-05 16:25:30,617:INFO:   category_encoders: 2.6.3
2024-02-05 16:25:30,617:INFO:            lightgbm: 4.3.0
2024-02-05 16:25:30,617:INFO:               numba: 0.58.1
2024-02-05 16:25:30,617:INFO:            requests: 2.31.0
2024-02-05 16:25:30,617:INFO:          matplotlib: 3.6.0
2024-02-05 16:25:30,617:INFO:          scikitplot: 0.3.7
2024-02-05 16:25:30,617:INFO:         yellowbrick: 1.5
2024-02-05 16:25:30,617:INFO:              plotly: 5.18.0
2024-02-05 16:25:30,617:INFO:    plotly-resampler: Not installed
2024-02-05 16:25:30,617:INFO:             kaleido: 0.2.1
2024-02-05 16:25:30,617:INFO:           schemdraw: 0.15
2024-02-05 16:25:30,617:INFO:         statsmodels: 0.14.1
2024-02-05 16:25:30,617:INFO:              sktime: 0.21.1
2024-02-05 16:25:30,618:INFO:               tbats: 1.1.3
2024-02-05 16:25:30,618:INFO:            pmdarima: 2.0.4
2024-02-05 16:25:30,618:INFO:              psutil: 5.9.8
2024-02-05 16:25:30,618:INFO:          markupsafe: 2.1.4
2024-02-05 16:25:30,618:INFO:             pickle5: Not installed
2024-02-05 16:25:30,618:INFO:         cloudpickle: 3.0.0
2024-02-05 16:25:30,618:INFO:         deprecation: 2.1.0
2024-02-05 16:25:30,618:INFO:              xxhash: 3.4.1
2024-02-05 16:25:30,618:INFO:           wurlitzer: Not installed
2024-02-05 16:25:30,618:INFO:PyCaret optional dependencies:
2024-02-05 16:25:30,649:INFO:                shap: 0.44.1
2024-02-05 16:25:30,649:INFO:           interpret: Not installed
2024-02-05 16:25:30,649:INFO:                umap: Not installed
2024-02-05 16:25:30,649:INFO:     ydata_profiling: Not installed
2024-02-05 16:25:30,649:INFO:  explainerdashboard: Not installed
2024-02-05 16:25:30,649:INFO:             autoviz: Not installed
2024-02-05 16:25:30,649:INFO:           fairlearn: Not installed
2024-02-05 16:25:30,649:INFO:          deepchecks: Not installed
2024-02-05 16:25:30,649:INFO:             xgboost: 2.0.3
2024-02-05 16:25:30,649:INFO:            catboost: 1.2.2
2024-02-05 16:25:30,649:INFO:              kmodes: Not installed
2024-02-05 16:25:30,649:INFO:             mlxtend: Not installed
2024-02-05 16:25:30,649:INFO:       statsforecast: Not installed
2024-02-05 16:25:30,649:INFO:        tune_sklearn: Not installed
2024-02-05 16:25:30,649:INFO:                 ray: Not installed
2024-02-05 16:25:30,649:INFO:            hyperopt: Not installed
2024-02-05 16:25:30,649:INFO:              optuna: Not installed
2024-02-05 16:25:30,649:INFO:               skopt: Not installed
2024-02-05 16:25:30,649:INFO:              mlflow: Not installed
2024-02-05 16:25:30,649:INFO:              gradio: Not installed
2024-02-05 16:25:30,649:INFO:             fastapi: Not installed
2024-02-05 16:25:30,649:INFO:             uvicorn: Not installed
2024-02-05 16:25:30,649:INFO:              m2cgen: Not installed
2024-02-05 16:25:30,649:INFO:           evidently: Not installed
2024-02-05 16:25:30,649:INFO:               fugue: Not installed
2024-02-05 16:25:30,649:INFO:           streamlit: Not installed
2024-02-05 16:25:30,649:INFO:             prophet: 1.1.5
2024-02-05 16:25:30,650:INFO:None
2024-02-05 16:25:30,650:INFO:Set up data.
2024-02-05 16:25:30,653:INFO:Set up folding strategy.
2024-02-05 16:25:30,653:INFO:Set up train/test split.
2024-02-05 16:25:30,655:INFO:Set up index.
2024-02-05 16:25:30,655:INFO:Assigning column types.
2024-02-05 16:25:30,657:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:25:30,682:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:25:30,683:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:25:30,701:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:25:30,703:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:25:30,746:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:25:30,747:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:25:30,763:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:25:30,764:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:25:30,765:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:25:30,789:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:25:30,804:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:25:30,807:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:25:30,894:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:25:30,909:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:25:30,911:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:25:30,911:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:25:30,950:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:25:30,953:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:25:30,992:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:25:30,993:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:25:30,995:INFO:Preparing preprocessing pipeline...
2024-02-05 16:25:30,995:INFO:Set up label encoding.
2024-02-05 16:25:30,996:INFO:Set up simple imputation.
2024-02-05 16:25:31,008:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:25:31,011:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:25:31,011:INFO:Creating final display dataframe.
2024-02-05 16:25:31,052:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  e08d
2024-02-05 16:25:31,094:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:25:31,095:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:25:31,134:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:25:31,136:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:25:31,136:INFO:setup() successfully completed in 0.56s...............
2024-02-05 16:25:31,136:INFO:Initializing create_model()
2024-02-05 16:25:31,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000264996419D0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:25:31,136:INFO:Checking exceptions
2024-02-05 16:25:31,138:INFO:Importing libraries
2024-02-05 16:25:31,138:INFO:Copying training dataset
2024-02-05 16:25:31,140:INFO:Defining folds
2024-02-05 16:25:31,140:INFO:Declaring metric variables
2024-02-05 16:25:31,141:INFO:Importing untrained model
2024-02-05 16:25:31,141:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:25:31,141:INFO:Starting cross validation
2024-02-05 16:25:31,142:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:25:33,799:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,801:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,802:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,832:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,833:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,834:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,921:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,922:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,923:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,931:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,932:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,934:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,949:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,952:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,953:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:25:33,956:INFO:Calculating mean and std
2024-02-05 16:25:33,956:INFO:Creating metrics dataframe
2024-02-05 16:25:33,958:INFO:Finalizing model
2024-02-05 16:25:34,010:INFO:Uploading results into container
2024-02-05 16:25:34,010:INFO:Uploading model into container now
2024-02-05 16:25:34,019:INFO:_master_model_container: 1
2024-02-05 16:25:34,019:INFO:_display_container: 2
2024-02-05 16:25:34,020:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:25:34,020:INFO:create_model() successfully completed......................................
2024-02-05 16:25:34,089:INFO:Initializing plot_model()
2024-02-05 16:25:34,089:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000264996419D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:25:34,089:INFO:Checking exceptions
2024-02-05 16:25:34,093:INFO:Preloading libraries
2024-02-05 16:25:34,098:INFO:Copying training dataset
2024-02-05 16:25:34,098:INFO:Plot type: confusion_matrix
2024-02-05 16:25:34,202:INFO:Fitting Model
2024-02-05 16:25:34,203:INFO:Scoring test/hold-out set
2024-02-05 16:25:34,218:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:25:34,307:INFO:Visual Rendered Successfully
2024-02-05 16:25:34,366:INFO:plot_model() successfully completed......................................
2024-02-05 16:25:34,367:INFO:Initializing plot_model()
2024-02-05 16:25:34,367:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000264996419D0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:25:34,367:INFO:Checking exceptions
2024-02-05 16:25:34,368:INFO:Preloading libraries
2024-02-05 16:25:34,372:INFO:Copying training dataset
2024-02-05 16:25:34,372:INFO:Plot type: error
2024-02-05 16:25:34,438:INFO:Fitting Model
2024-02-05 16:25:34,439:INFO:Scoring test/hold-out set
2024-02-05 16:25:34,459:INFO:Saving 'Prediction Error.png'
2024-02-05 16:25:34,574:INFO:Visual Rendered Successfully
2024-02-05 16:25:34,637:INFO:plot_model() successfully completed......................................
2024-02-05 16:27:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:27:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:27:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:27:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:27:09,405:WARNING:C:\Documents\Code\Pycharm\MCM2024C\classify.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data['ace'] = train_data['ace'] + noise

2024-02-05 16:27:09,408:INFO:PyCaret ClassificationExperiment
2024-02-05 16:27:09,408:INFO:Logging name: clf-default-name
2024-02-05 16:27:09,408:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:27:09,408:INFO:version 3.2.0
2024-02-05 16:27:09,408:INFO:Initializing setup()
2024-02-05 16:27:09,409:INFO:self.USI: 3720
2024-02-05 16:27:09,409:INFO:self._variable_keys: {'idx', 'memory', 'gpu_param', 'is_multiclass', 'exp_name_log', 'pipeline', 'y_train', 'exp_id', 'log_plots_param', 'logging_param', 'gpu_n_jobs_param', 'USI', 'X', 'y_test', 'fold_shuffle_param', 'html_param', 'X_train', 'data', 'target_param', 'fold_generator', '_available_plots', 'y', 'n_jobs_param', '_ml_usecase', 'seed', 'X_test', 'fix_imbalance', 'fold_groups_param'}
2024-02-05 16:27:09,409:INFO:Checking environment
2024-02-05 16:27:09,409:INFO:python_version: 3.11.7
2024-02-05 16:27:09,409:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:27:09,409:INFO:machine: AMD64
2024-02-05 16:27:09,417:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:27:09,420:INFO:Memory: svmem(total=16892026880, available=5632774144, percent=66.7, used=11259252736, free=5632774144)
2024-02-05 16:27:09,420:INFO:Physical Core: 12
2024-02-05 16:27:09,420:INFO:Logical Core: 16
2024-02-05 16:27:09,420:INFO:Checking libraries
2024-02-05 16:27:09,420:INFO:System:
2024-02-05 16:27:09,420:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:27:09,420:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:27:09,420:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:27:09,421:INFO:PyCaret required dependencies:
2024-02-05 16:27:09,450:INFO:                 pip: 23.3.2
2024-02-05 16:27:09,450:INFO:          setuptools: 65.5.0
2024-02-05 16:27:09,450:INFO:             pycaret: 3.2.0
2024-02-05 16:27:09,450:INFO:             IPython: 8.20.0
2024-02-05 16:27:09,450:INFO:          ipywidgets: 8.1.1
2024-02-05 16:27:09,450:INFO:                tqdm: 4.66.1
2024-02-05 16:27:09,450:INFO:               numpy: 1.25.2
2024-02-05 16:27:09,450:INFO:              pandas: 1.5.3
2024-02-05 16:27:09,450:INFO:              jinja2: 3.1.3
2024-02-05 16:27:09,450:INFO:               scipy: 1.10.1
2024-02-05 16:27:09,450:INFO:              joblib: 1.3.2
2024-02-05 16:27:09,450:INFO:             sklearn: 1.2.2
2024-02-05 16:27:09,450:INFO:                pyod: 1.1.2
2024-02-05 16:27:09,450:INFO:            imblearn: 0.12.0
2024-02-05 16:27:09,450:INFO:   category_encoders: 2.6.3
2024-02-05 16:27:09,450:INFO:            lightgbm: 4.3.0
2024-02-05 16:27:09,450:INFO:               numba: 0.58.1
2024-02-05 16:27:09,450:INFO:            requests: 2.31.0
2024-02-05 16:27:09,452:INFO:          matplotlib: 3.6.0
2024-02-05 16:27:09,452:INFO:          scikitplot: 0.3.7
2024-02-05 16:27:09,452:INFO:         yellowbrick: 1.5
2024-02-05 16:27:09,452:INFO:              plotly: 5.18.0
2024-02-05 16:27:09,452:INFO:    plotly-resampler: Not installed
2024-02-05 16:27:09,452:INFO:             kaleido: 0.2.1
2024-02-05 16:27:09,452:INFO:           schemdraw: 0.15
2024-02-05 16:27:09,452:INFO:         statsmodels: 0.14.1
2024-02-05 16:27:09,452:INFO:              sktime: 0.21.1
2024-02-05 16:27:09,452:INFO:               tbats: 1.1.3
2024-02-05 16:27:09,452:INFO:            pmdarima: 2.0.4
2024-02-05 16:27:09,452:INFO:              psutil: 5.9.8
2024-02-05 16:27:09,452:INFO:          markupsafe: 2.1.4
2024-02-05 16:27:09,452:INFO:             pickle5: Not installed
2024-02-05 16:27:09,452:INFO:         cloudpickle: 3.0.0
2024-02-05 16:27:09,452:INFO:         deprecation: 2.1.0
2024-02-05 16:27:09,452:INFO:              xxhash: 3.4.1
2024-02-05 16:27:09,452:INFO:           wurlitzer: Not installed
2024-02-05 16:27:09,452:INFO:PyCaret optional dependencies:
2024-02-05 16:27:09,481:INFO:                shap: 0.44.1
2024-02-05 16:27:09,481:INFO:           interpret: Not installed
2024-02-05 16:27:09,481:INFO:                umap: Not installed
2024-02-05 16:27:09,481:INFO:     ydata_profiling: Not installed
2024-02-05 16:27:09,481:INFO:  explainerdashboard: Not installed
2024-02-05 16:27:09,481:INFO:             autoviz: Not installed
2024-02-05 16:27:09,481:INFO:           fairlearn: Not installed
2024-02-05 16:27:09,481:INFO:          deepchecks: Not installed
2024-02-05 16:27:09,481:INFO:             xgboost: 2.0.3
2024-02-05 16:27:09,481:INFO:            catboost: 1.2.2
2024-02-05 16:27:09,481:INFO:              kmodes: Not installed
2024-02-05 16:27:09,481:INFO:             mlxtend: Not installed
2024-02-05 16:27:09,481:INFO:       statsforecast: Not installed
2024-02-05 16:27:09,481:INFO:        tune_sklearn: Not installed
2024-02-05 16:27:09,481:INFO:                 ray: Not installed
2024-02-05 16:27:09,481:INFO:            hyperopt: Not installed
2024-02-05 16:27:09,481:INFO:              optuna: Not installed
2024-02-05 16:27:09,481:INFO:               skopt: Not installed
2024-02-05 16:27:09,481:INFO:              mlflow: Not installed
2024-02-05 16:27:09,481:INFO:              gradio: Not installed
2024-02-05 16:27:09,481:INFO:             fastapi: Not installed
2024-02-05 16:27:09,481:INFO:             uvicorn: Not installed
2024-02-05 16:27:09,481:INFO:              m2cgen: Not installed
2024-02-05 16:27:09,481:INFO:           evidently: Not installed
2024-02-05 16:27:09,481:INFO:               fugue: Not installed
2024-02-05 16:27:09,481:INFO:           streamlit: Not installed
2024-02-05 16:27:09,481:INFO:             prophet: 1.1.5
2024-02-05 16:27:09,481:INFO:None
2024-02-05 16:27:09,481:INFO:Set up data.
2024-02-05 16:27:09,486:INFO:Set up folding strategy.
2024-02-05 16:27:09,486:INFO:Set up train/test split.
2024-02-05 16:27:09,489:INFO:Set up index.
2024-02-05 16:27:09,489:INFO:Assigning column types.
2024-02-05 16:27:09,491:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:27:09,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:27:09,516:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:27:09,534:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:27:09,536:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:27:09,576:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:27:09,577:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:27:09,592:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:27:09,593:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:27:09,594:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:27:09,618:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:27:09,633:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:27:09,634:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:27:09,718:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:27:09,735:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:27:09,736:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:27:09,737:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:27:09,777:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:27:09,778:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:27:09,817:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:27:09,819:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:27:09,821:INFO:Preparing preprocessing pipeline...
2024-02-05 16:27:09,821:INFO:Set up label encoding.
2024-02-05 16:27:09,821:INFO:Set up simple imputation.
2024-02-05 16:27:09,835:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:27:09,838:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:27:09,838:INFO:Creating final display dataframe.
2024-02-05 16:27:09,877:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  3720
2024-02-05 16:27:09,918:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:27:09,919:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:27:09,958:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:27:09,959:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:27:09,960:INFO:setup() successfully completed in 0.56s...............
2024-02-05 16:27:09,960:INFO:Initializing create_model()
2024-02-05 16:27:09,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002073DFCF250>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:27:09,960:INFO:Checking exceptions
2024-02-05 16:27:09,962:INFO:Importing libraries
2024-02-05 16:27:09,962:INFO:Copying training dataset
2024-02-05 16:27:09,964:INFO:Defining folds
2024-02-05 16:27:09,965:INFO:Declaring metric variables
2024-02-05 16:27:09,965:INFO:Importing untrained model
2024-02-05 16:27:09,965:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:27:09,966:INFO:Starting cross validation
2024-02-05 16:27:09,967:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:27:12,649:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,650:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,652:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,746:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,746:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,748:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,786:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,787:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,788:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,839:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,841:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,842:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,853:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,855:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,856:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:27:12,863:INFO:Calculating mean and std
2024-02-05 16:27:12,863:INFO:Creating metrics dataframe
2024-02-05 16:27:12,865:INFO:Finalizing model
2024-02-05 16:27:12,917:INFO:Uploading results into container
2024-02-05 16:27:12,918:INFO:Uploading model into container now
2024-02-05 16:27:12,922:INFO:_master_model_container: 1
2024-02-05 16:27:12,922:INFO:_display_container: 2
2024-02-05 16:27:12,923:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:27:12,923:INFO:create_model() successfully completed......................................
2024-02-05 16:27:12,995:INFO:Initializing plot_model()
2024-02-05 16:27:12,995:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002073DFCF250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:27:12,995:INFO:Checking exceptions
2024-02-05 16:27:12,998:INFO:Preloading libraries
2024-02-05 16:27:13,001:INFO:Copying training dataset
2024-02-05 16:27:13,001:INFO:Plot type: confusion_matrix
2024-02-05 16:27:13,072:INFO:Fitting Model
2024-02-05 16:27:13,073:INFO:Scoring test/hold-out set
2024-02-05 16:27:13,089:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:27:13,171:INFO:Visual Rendered Successfully
2024-02-05 16:27:13,235:INFO:plot_model() successfully completed......................................
2024-02-05 16:27:13,236:INFO:Initializing plot_model()
2024-02-05 16:27:13,236:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002073DFCF250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:27:13,236:INFO:Checking exceptions
2024-02-05 16:27:13,237:INFO:Preloading libraries
2024-02-05 16:27:13,240:INFO:Copying training dataset
2024-02-05 16:27:13,240:INFO:Plot type: error
2024-02-05 16:27:13,294:INFO:Fitting Model
2024-02-05 16:27:13,294:INFO:Scoring test/hold-out set
2024-02-05 16:27:13,308:INFO:Saving 'Prediction Error.png'
2024-02-05 16:27:13,422:INFO:Visual Rendered Successfully
2024-02-05 16:27:13,481:INFO:plot_model() successfully completed......................................
2024-02-05 16:28:25,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:28:25,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:28:25,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:28:25,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:28:25,905:WARNING:C:\Documents\Code\Pycharm\MCM2024C\classify.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data['ue'] = train_data['ue'] + noise

2024-02-05 16:28:25,907:INFO:PyCaret ClassificationExperiment
2024-02-05 16:28:25,907:INFO:Logging name: clf-default-name
2024-02-05 16:28:25,907:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:28:25,907:INFO:version 3.2.0
2024-02-05 16:28:25,907:INFO:Initializing setup()
2024-02-05 16:28:25,907:INFO:self.USI: 77ff
2024-02-05 16:28:25,907:INFO:self._variable_keys: {'_available_plots', 'fold_groups_param', 'X_train', 'n_jobs_param', 'logging_param', 'gpu_n_jobs_param', 'fold_generator', 'pipeline', 'memory', 'gpu_param', 'y_test', 'data', 'target_param', 'is_multiclass', 'html_param', 'log_plots_param', 'idx', 'y_train', 'fix_imbalance', 'X_test', 'X', 'fold_shuffle_param', 'y', 'exp_id', 'USI', 'seed', 'exp_name_log', '_ml_usecase'}
2024-02-05 16:28:25,907:INFO:Checking environment
2024-02-05 16:28:25,907:INFO:python_version: 3.11.7
2024-02-05 16:28:25,907:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:28:25,908:INFO:machine: AMD64
2024-02-05 16:28:25,916:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:28:25,920:INFO:Memory: svmem(total=16892026880, available=5626159104, percent=66.7, used=11265867776, free=5626159104)
2024-02-05 16:28:25,920:INFO:Physical Core: 12
2024-02-05 16:28:25,920:INFO:Logical Core: 16
2024-02-05 16:28:25,920:INFO:Checking libraries
2024-02-05 16:28:25,920:INFO:System:
2024-02-05 16:28:25,920:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:28:25,920:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:28:25,920:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:28:25,920:INFO:PyCaret required dependencies:
2024-02-05 16:28:25,949:INFO:                 pip: 23.3.2
2024-02-05 16:28:25,949:INFO:          setuptools: 65.5.0
2024-02-05 16:28:25,949:INFO:             pycaret: 3.2.0
2024-02-05 16:28:25,949:INFO:             IPython: 8.20.0
2024-02-05 16:28:25,949:INFO:          ipywidgets: 8.1.1
2024-02-05 16:28:25,949:INFO:                tqdm: 4.66.1
2024-02-05 16:28:25,950:INFO:               numpy: 1.25.2
2024-02-05 16:28:25,950:INFO:              pandas: 1.5.3
2024-02-05 16:28:25,950:INFO:              jinja2: 3.1.3
2024-02-05 16:28:25,950:INFO:               scipy: 1.10.1
2024-02-05 16:28:25,950:INFO:              joblib: 1.3.2
2024-02-05 16:28:25,950:INFO:             sklearn: 1.2.2
2024-02-05 16:28:25,950:INFO:                pyod: 1.1.2
2024-02-05 16:28:25,950:INFO:            imblearn: 0.12.0
2024-02-05 16:28:25,950:INFO:   category_encoders: 2.6.3
2024-02-05 16:28:25,950:INFO:            lightgbm: 4.3.0
2024-02-05 16:28:25,950:INFO:               numba: 0.58.1
2024-02-05 16:28:25,950:INFO:            requests: 2.31.0
2024-02-05 16:28:25,950:INFO:          matplotlib: 3.6.0
2024-02-05 16:28:25,950:INFO:          scikitplot: 0.3.7
2024-02-05 16:28:25,950:INFO:         yellowbrick: 1.5
2024-02-05 16:28:25,950:INFO:              plotly: 5.18.0
2024-02-05 16:28:25,950:INFO:    plotly-resampler: Not installed
2024-02-05 16:28:25,950:INFO:             kaleido: 0.2.1
2024-02-05 16:28:25,950:INFO:           schemdraw: 0.15
2024-02-05 16:28:25,950:INFO:         statsmodels: 0.14.1
2024-02-05 16:28:25,950:INFO:              sktime: 0.21.1
2024-02-05 16:28:25,950:INFO:               tbats: 1.1.3
2024-02-05 16:28:25,950:INFO:            pmdarima: 2.0.4
2024-02-05 16:28:25,950:INFO:              psutil: 5.9.8
2024-02-05 16:28:25,950:INFO:          markupsafe: 2.1.4
2024-02-05 16:28:25,950:INFO:             pickle5: Not installed
2024-02-05 16:28:25,950:INFO:         cloudpickle: 3.0.0
2024-02-05 16:28:25,950:INFO:         deprecation: 2.1.0
2024-02-05 16:28:25,950:INFO:              xxhash: 3.4.1
2024-02-05 16:28:25,950:INFO:           wurlitzer: Not installed
2024-02-05 16:28:25,950:INFO:PyCaret optional dependencies:
2024-02-05 16:28:25,981:INFO:                shap: 0.44.1
2024-02-05 16:28:25,981:INFO:           interpret: Not installed
2024-02-05 16:28:25,981:INFO:                umap: Not installed
2024-02-05 16:28:25,981:INFO:     ydata_profiling: Not installed
2024-02-05 16:28:25,981:INFO:  explainerdashboard: Not installed
2024-02-05 16:28:25,981:INFO:             autoviz: Not installed
2024-02-05 16:28:25,981:INFO:           fairlearn: Not installed
2024-02-05 16:28:25,981:INFO:          deepchecks: Not installed
2024-02-05 16:28:25,981:INFO:             xgboost: 2.0.3
2024-02-05 16:28:25,981:INFO:            catboost: 1.2.2
2024-02-05 16:28:25,981:INFO:              kmodes: Not installed
2024-02-05 16:28:25,981:INFO:             mlxtend: Not installed
2024-02-05 16:28:25,981:INFO:       statsforecast: Not installed
2024-02-05 16:28:25,981:INFO:        tune_sklearn: Not installed
2024-02-05 16:28:25,982:INFO:                 ray: Not installed
2024-02-05 16:28:25,982:INFO:            hyperopt: Not installed
2024-02-05 16:28:25,982:INFO:              optuna: Not installed
2024-02-05 16:28:25,982:INFO:               skopt: Not installed
2024-02-05 16:28:25,982:INFO:              mlflow: Not installed
2024-02-05 16:28:25,982:INFO:              gradio: Not installed
2024-02-05 16:28:25,982:INFO:             fastapi: Not installed
2024-02-05 16:28:25,982:INFO:             uvicorn: Not installed
2024-02-05 16:28:25,982:INFO:              m2cgen: Not installed
2024-02-05 16:28:25,982:INFO:           evidently: Not installed
2024-02-05 16:28:25,982:INFO:               fugue: Not installed
2024-02-05 16:28:25,982:INFO:           streamlit: Not installed
2024-02-05 16:28:25,982:INFO:             prophet: 1.1.5
2024-02-05 16:28:25,982:INFO:None
2024-02-05 16:28:25,982:INFO:Set up data.
2024-02-05 16:28:25,985:INFO:Set up folding strategy.
2024-02-05 16:28:25,985:INFO:Set up train/test split.
2024-02-05 16:28:25,988:INFO:Set up index.
2024-02-05 16:28:25,988:INFO:Assigning column types.
2024-02-05 16:28:25,989:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:28:26,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:28:26,015:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:28:26,033:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:28:26,034:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:28:26,076:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:28:26,076:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:28:26,093:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:28:26,094:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:28:26,094:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:28:26,118:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:28:26,133:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:28:26,134:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:28:26,228:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:28:26,243:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:28:26,245:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:28:26,245:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:28:26,287:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:28:26,290:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:28:26,332:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:28:26,334:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:28:26,335:INFO:Preparing preprocessing pipeline...
2024-02-05 16:28:26,336:INFO:Set up label encoding.
2024-02-05 16:28:26,336:INFO:Set up simple imputation.
2024-02-05 16:28:26,352:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:28:26,354:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:28:26,355:INFO:Creating final display dataframe.
2024-02-05 16:28:26,396:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  77ff
2024-02-05 16:28:26,438:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:28:26,441:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:28:26,484:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:28:26,486:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:28:26,487:INFO:setup() successfully completed in 0.58s...............
2024-02-05 16:28:26,487:INFO:Initializing create_model()
2024-02-05 16:28:26,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C456B1D50>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:28:26,488:INFO:Checking exceptions
2024-02-05 16:28:26,491:INFO:Importing libraries
2024-02-05 16:28:26,491:INFO:Copying training dataset
2024-02-05 16:28:26,493:INFO:Defining folds
2024-02-05 16:28:26,494:INFO:Declaring metric variables
2024-02-05 16:28:26,494:INFO:Importing untrained model
2024-02-05 16:28:26,494:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:28:26,494:INFO:Starting cross validation
2024-02-05 16:28:26,495:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:28:29,218:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,219:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,221:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,336:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,338:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,339:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,370:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,371:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,373:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,374:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,377:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,384:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,393:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,394:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,396:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:28:29,399:INFO:Calculating mean and std
2024-02-05 16:28:29,399:INFO:Creating metrics dataframe
2024-02-05 16:28:29,401:INFO:Finalizing model
2024-02-05 16:28:29,455:INFO:Uploading results into container
2024-02-05 16:28:29,456:INFO:Uploading model into container now
2024-02-05 16:28:29,464:INFO:_master_model_container: 1
2024-02-05 16:28:29,464:INFO:_display_container: 2
2024-02-05 16:28:29,465:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:28:29,465:INFO:create_model() successfully completed......................................
2024-02-05 16:28:29,535:INFO:Initializing plot_model()
2024-02-05 16:28:29,535:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C456B1D50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:28:29,535:INFO:Checking exceptions
2024-02-05 16:28:29,539:INFO:Preloading libraries
2024-02-05 16:28:29,543:INFO:Copying training dataset
2024-02-05 16:28:29,543:INFO:Plot type: confusion_matrix
2024-02-05 16:28:29,642:INFO:Fitting Model
2024-02-05 16:28:29,643:INFO:Scoring test/hold-out set
2024-02-05 16:28:29,659:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:28:29,737:INFO:Visual Rendered Successfully
2024-02-05 16:28:29,794:INFO:plot_model() successfully completed......................................
2024-02-05 16:28:29,794:INFO:Initializing plot_model()
2024-02-05 16:28:29,794:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015C456B1D50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:28:29,794:INFO:Checking exceptions
2024-02-05 16:28:29,796:INFO:Preloading libraries
2024-02-05 16:28:29,800:INFO:Copying training dataset
2024-02-05 16:28:29,800:INFO:Plot type: error
2024-02-05 16:28:29,865:INFO:Fitting Model
2024-02-05 16:28:29,866:INFO:Scoring test/hold-out set
2024-02-05 16:28:29,885:INFO:Saving 'Prediction Error.png'
2024-02-05 16:28:29,997:INFO:Visual Rendered Successfully
2024-02-05 16:28:30,060:INFO:plot_model() successfully completed......................................
2024-02-05 16:29:12,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:29:12,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:29:12,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:29:12,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:29:12,985:WARNING:C:\Documents\Code\Pycharm\MCM2024C\classify.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data['bw'] = train_data['bw'] + noise

2024-02-05 16:29:12,987:INFO:PyCaret ClassificationExperiment
2024-02-05 16:29:12,987:INFO:Logging name: clf-default-name
2024-02-05 16:29:12,987:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:29:12,987:INFO:version 3.2.0
2024-02-05 16:29:12,987:INFO:Initializing setup()
2024-02-05 16:29:12,987:INFO:self.USI: 335f
2024-02-05 16:29:12,987:INFO:self._variable_keys: {'exp_name_log', 'X', 'log_plots_param', 'target_param', 'memory', 'logging_param', 'exp_id', 'fold_shuffle_param', 'gpu_param', 'data', 'n_jobs_param', '_available_plots', '_ml_usecase', 'fold_generator', 'idx', 'X_train', 'y_test', 'fix_imbalance', 'is_multiclass', 'pipeline', 'seed', 'html_param', 'gpu_n_jobs_param', 'USI', 'X_test', 'fold_groups_param', 'y', 'y_train'}
2024-02-05 16:29:12,987:INFO:Checking environment
2024-02-05 16:29:12,987:INFO:python_version: 3.11.7
2024-02-05 16:29:12,987:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:29:12,987:INFO:machine: AMD64
2024-02-05 16:29:12,996:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:29:13,000:INFO:Memory: svmem(total=16892026880, available=5789966336, percent=65.7, used=11102060544, free=5789966336)
2024-02-05 16:29:13,000:INFO:Physical Core: 12
2024-02-05 16:29:13,000:INFO:Logical Core: 16
2024-02-05 16:29:13,000:INFO:Checking libraries
2024-02-05 16:29:13,000:INFO:System:
2024-02-05 16:29:13,001:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:29:13,001:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:29:13,001:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:29:13,001:INFO:PyCaret required dependencies:
2024-02-05 16:29:13,038:INFO:                 pip: 23.3.2
2024-02-05 16:29:13,038:INFO:          setuptools: 65.5.0
2024-02-05 16:29:13,038:INFO:             pycaret: 3.2.0
2024-02-05 16:29:13,038:INFO:             IPython: 8.20.0
2024-02-05 16:29:13,038:INFO:          ipywidgets: 8.1.1
2024-02-05 16:29:13,038:INFO:                tqdm: 4.66.1
2024-02-05 16:29:13,038:INFO:               numpy: 1.25.2
2024-02-05 16:29:13,038:INFO:              pandas: 1.5.3
2024-02-05 16:29:13,038:INFO:              jinja2: 3.1.3
2024-02-05 16:29:13,038:INFO:               scipy: 1.10.1
2024-02-05 16:29:13,038:INFO:              joblib: 1.3.2
2024-02-05 16:29:13,038:INFO:             sklearn: 1.2.2
2024-02-05 16:29:13,038:INFO:                pyod: 1.1.2
2024-02-05 16:29:13,038:INFO:            imblearn: 0.12.0
2024-02-05 16:29:13,038:INFO:   category_encoders: 2.6.3
2024-02-05 16:29:13,038:INFO:            lightgbm: 4.3.0
2024-02-05 16:29:13,038:INFO:               numba: 0.58.1
2024-02-05 16:29:13,038:INFO:            requests: 2.31.0
2024-02-05 16:29:13,038:INFO:          matplotlib: 3.6.0
2024-02-05 16:29:13,038:INFO:          scikitplot: 0.3.7
2024-02-05 16:29:13,038:INFO:         yellowbrick: 1.5
2024-02-05 16:29:13,038:INFO:              plotly: 5.18.0
2024-02-05 16:29:13,038:INFO:    plotly-resampler: Not installed
2024-02-05 16:29:13,038:INFO:             kaleido: 0.2.1
2024-02-05 16:29:13,038:INFO:           schemdraw: 0.15
2024-02-05 16:29:13,038:INFO:         statsmodels: 0.14.1
2024-02-05 16:29:13,038:INFO:              sktime: 0.21.1
2024-02-05 16:29:13,038:INFO:               tbats: 1.1.3
2024-02-05 16:29:13,038:INFO:            pmdarima: 2.0.4
2024-02-05 16:29:13,038:INFO:              psutil: 5.9.8
2024-02-05 16:29:13,038:INFO:          markupsafe: 2.1.4
2024-02-05 16:29:13,038:INFO:             pickle5: Not installed
2024-02-05 16:29:13,038:INFO:         cloudpickle: 3.0.0
2024-02-05 16:29:13,038:INFO:         deprecation: 2.1.0
2024-02-05 16:29:13,038:INFO:              xxhash: 3.4.1
2024-02-05 16:29:13,038:INFO:           wurlitzer: Not installed
2024-02-05 16:29:13,039:INFO:PyCaret optional dependencies:
2024-02-05 16:29:13,071:INFO:                shap: 0.44.1
2024-02-05 16:29:13,071:INFO:           interpret: Not installed
2024-02-05 16:29:13,071:INFO:                umap: Not installed
2024-02-05 16:29:13,071:INFO:     ydata_profiling: Not installed
2024-02-05 16:29:13,071:INFO:  explainerdashboard: Not installed
2024-02-05 16:29:13,071:INFO:             autoviz: Not installed
2024-02-05 16:29:13,071:INFO:           fairlearn: Not installed
2024-02-05 16:29:13,071:INFO:          deepchecks: Not installed
2024-02-05 16:29:13,071:INFO:             xgboost: 2.0.3
2024-02-05 16:29:13,071:INFO:            catboost: 1.2.2
2024-02-05 16:29:13,071:INFO:              kmodes: Not installed
2024-02-05 16:29:13,071:INFO:             mlxtend: Not installed
2024-02-05 16:29:13,071:INFO:       statsforecast: Not installed
2024-02-05 16:29:13,071:INFO:        tune_sklearn: Not installed
2024-02-05 16:29:13,071:INFO:                 ray: Not installed
2024-02-05 16:29:13,071:INFO:            hyperopt: Not installed
2024-02-05 16:29:13,071:INFO:              optuna: Not installed
2024-02-05 16:29:13,072:INFO:               skopt: Not installed
2024-02-05 16:29:13,072:INFO:              mlflow: Not installed
2024-02-05 16:29:13,072:INFO:              gradio: Not installed
2024-02-05 16:29:13,072:INFO:             fastapi: Not installed
2024-02-05 16:29:13,072:INFO:             uvicorn: Not installed
2024-02-05 16:29:13,072:INFO:              m2cgen: Not installed
2024-02-05 16:29:13,072:INFO:           evidently: Not installed
2024-02-05 16:29:13,072:INFO:               fugue: Not installed
2024-02-05 16:29:13,072:INFO:           streamlit: Not installed
2024-02-05 16:29:13,072:INFO:             prophet: 1.1.5
2024-02-05 16:29:13,072:INFO:None
2024-02-05 16:29:13,072:INFO:Set up data.
2024-02-05 16:29:13,076:INFO:Set up folding strategy.
2024-02-05 16:29:13,076:INFO:Set up train/test split.
2024-02-05 16:29:13,078:INFO:Set up index.
2024-02-05 16:29:13,078:INFO:Assigning column types.
2024-02-05 16:29:13,080:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:29:13,104:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:29:13,106:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:29:13,124:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:13,126:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:13,168:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:29:13,168:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:29:13,185:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:13,186:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:13,187:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:29:13,211:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:29:13,226:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:13,228:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:13,322:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:29:13,338:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:13,340:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:13,340:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:29:13,382:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:13,384:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:13,426:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:13,427:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:13,429:INFO:Preparing preprocessing pipeline...
2024-02-05 16:29:13,430:INFO:Set up label encoding.
2024-02-05 16:29:13,430:INFO:Set up simple imputation.
2024-02-05 16:29:13,446:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:29:13,448:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:29:13,448:INFO:Creating final display dataframe.
2024-02-05 16:29:13,492:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  335f
2024-02-05 16:29:13,536:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:13,538:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:13,581:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:13,582:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:13,583:INFO:setup() successfully completed in 0.6s...............
2024-02-05 16:29:13,583:INFO:Initializing create_model()
2024-02-05 16:29:13,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CBFF46E590>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:29:13,583:INFO:Checking exceptions
2024-02-05 16:29:13,585:INFO:Importing libraries
2024-02-05 16:29:13,585:INFO:Copying training dataset
2024-02-05 16:29:13,586:INFO:Defining folds
2024-02-05 16:29:13,587:INFO:Declaring metric variables
2024-02-05 16:29:13,587:INFO:Importing untrained model
2024-02-05 16:29:13,587:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:29:13,587:INFO:Starting cross validation
2024-02-05 16:29:13,588:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:29:16,844:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,846:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,847:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,868:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,870:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,872:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,883:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,885:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,887:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,895:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,896:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,897:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,906:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,908:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,908:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:16,921:INFO:Calculating mean and std
2024-02-05 16:29:16,921:INFO:Creating metrics dataframe
2024-02-05 16:29:16,923:INFO:Finalizing model
2024-02-05 16:29:16,966:INFO:Uploading results into container
2024-02-05 16:29:16,967:INFO:Uploading model into container now
2024-02-05 16:29:16,973:INFO:_master_model_container: 1
2024-02-05 16:29:16,973:INFO:_display_container: 2
2024-02-05 16:29:16,973:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:29:16,973:INFO:create_model() successfully completed......................................
2024-02-05 16:29:17,041:INFO:Initializing plot_model()
2024-02-05 16:29:17,041:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CBFF46E590>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:29:17,041:INFO:Checking exceptions
2024-02-05 16:29:17,044:INFO:Preloading libraries
2024-02-05 16:29:17,048:INFO:Copying training dataset
2024-02-05 16:29:17,048:INFO:Plot type: confusion_matrix
2024-02-05 16:29:17,121:INFO:Fitting Model
2024-02-05 16:29:17,122:INFO:Scoring test/hold-out set
2024-02-05 16:29:17,137:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:29:17,228:INFO:Visual Rendered Successfully
2024-02-05 16:29:17,285:INFO:plot_model() successfully completed......................................
2024-02-05 16:29:17,286:INFO:Initializing plot_model()
2024-02-05 16:29:17,286:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CBFF46E590>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:29:17,286:INFO:Checking exceptions
2024-02-05 16:29:17,287:INFO:Preloading libraries
2024-02-05 16:29:17,291:INFO:Copying training dataset
2024-02-05 16:29:17,291:INFO:Plot type: error
2024-02-05 16:29:17,340:INFO:Fitting Model
2024-02-05 16:29:17,341:INFO:Scoring test/hold-out set
2024-02-05 16:29:17,356:INFO:Saving 'Prediction Error.png'
2024-02-05 16:29:17,482:INFO:Visual Rendered Successfully
2024-02-05 16:29:17,548:INFO:plot_model() successfully completed......................................
2024-02-05 16:29:52,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:29:52,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:29:52,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:29:52,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:29:52,814:WARNING:C:\Documents\Code\Pycharm\MCM2024C\classify.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data['rc'] = train_data['rc'] + noise

2024-02-05 16:29:52,816:INFO:PyCaret ClassificationExperiment
2024-02-05 16:29:52,816:INFO:Logging name: clf-default-name
2024-02-05 16:29:52,816:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:29:52,816:INFO:version 3.2.0
2024-02-05 16:29:52,816:INFO:Initializing setup()
2024-02-05 16:29:52,816:INFO:self.USI: 7f0f
2024-02-05 16:29:52,816:INFO:self._variable_keys: {'fix_imbalance', 'is_multiclass', 'X', 'USI', 'fold_groups_param', 'log_plots_param', 'y_train', 'memory', 'n_jobs_param', 'fold_generator', 'fold_shuffle_param', 'target_param', '_ml_usecase', 'logging_param', 'html_param', 'gpu_n_jobs_param', 'y_test', 'X_test', 'exp_id', 'data', 'seed', 'idx', 'pipeline', 'y', 'X_train', 'gpu_param', '_available_plots', 'exp_name_log'}
2024-02-05 16:29:52,816:INFO:Checking environment
2024-02-05 16:29:52,816:INFO:python_version: 3.11.7
2024-02-05 16:29:52,816:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:29:52,817:INFO:machine: AMD64
2024-02-05 16:29:52,825:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:29:52,829:INFO:Memory: svmem(total=16892026880, available=5949038592, percent=64.8, used=10942988288, free=5949038592)
2024-02-05 16:29:52,829:INFO:Physical Core: 12
2024-02-05 16:29:52,829:INFO:Logical Core: 16
2024-02-05 16:29:52,829:INFO:Checking libraries
2024-02-05 16:29:52,829:INFO:System:
2024-02-05 16:29:52,829:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:29:52,829:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:29:52,829:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:29:52,829:INFO:PyCaret required dependencies:
2024-02-05 16:29:52,859:INFO:                 pip: 23.3.2
2024-02-05 16:29:52,859:INFO:          setuptools: 65.5.0
2024-02-05 16:29:52,859:INFO:             pycaret: 3.2.0
2024-02-05 16:29:52,859:INFO:             IPython: 8.20.0
2024-02-05 16:29:52,859:INFO:          ipywidgets: 8.1.1
2024-02-05 16:29:52,859:INFO:                tqdm: 4.66.1
2024-02-05 16:29:52,859:INFO:               numpy: 1.25.2
2024-02-05 16:29:52,859:INFO:              pandas: 1.5.3
2024-02-05 16:29:52,859:INFO:              jinja2: 3.1.3
2024-02-05 16:29:52,859:INFO:               scipy: 1.10.1
2024-02-05 16:29:52,859:INFO:              joblib: 1.3.2
2024-02-05 16:29:52,859:INFO:             sklearn: 1.2.2
2024-02-05 16:29:52,859:INFO:                pyod: 1.1.2
2024-02-05 16:29:52,859:INFO:            imblearn: 0.12.0
2024-02-05 16:29:52,859:INFO:   category_encoders: 2.6.3
2024-02-05 16:29:52,859:INFO:            lightgbm: 4.3.0
2024-02-05 16:29:52,859:INFO:               numba: 0.58.1
2024-02-05 16:29:52,859:INFO:            requests: 2.31.0
2024-02-05 16:29:52,859:INFO:          matplotlib: 3.6.0
2024-02-05 16:29:52,859:INFO:          scikitplot: 0.3.7
2024-02-05 16:29:52,859:INFO:         yellowbrick: 1.5
2024-02-05 16:29:52,859:INFO:              plotly: 5.18.0
2024-02-05 16:29:52,859:INFO:    plotly-resampler: Not installed
2024-02-05 16:29:52,859:INFO:             kaleido: 0.2.1
2024-02-05 16:29:52,859:INFO:           schemdraw: 0.15
2024-02-05 16:29:52,860:INFO:         statsmodels: 0.14.1
2024-02-05 16:29:52,860:INFO:              sktime: 0.21.1
2024-02-05 16:29:52,860:INFO:               tbats: 1.1.3
2024-02-05 16:29:52,860:INFO:            pmdarima: 2.0.4
2024-02-05 16:29:52,860:INFO:              psutil: 5.9.8
2024-02-05 16:29:52,860:INFO:          markupsafe: 2.1.4
2024-02-05 16:29:52,860:INFO:             pickle5: Not installed
2024-02-05 16:29:52,860:INFO:         cloudpickle: 3.0.0
2024-02-05 16:29:52,860:INFO:         deprecation: 2.1.0
2024-02-05 16:29:52,860:INFO:              xxhash: 3.4.1
2024-02-05 16:29:52,860:INFO:           wurlitzer: Not installed
2024-02-05 16:29:52,860:INFO:PyCaret optional dependencies:
2024-02-05 16:29:52,890:INFO:                shap: 0.44.1
2024-02-05 16:29:52,890:INFO:           interpret: Not installed
2024-02-05 16:29:52,890:INFO:                umap: Not installed
2024-02-05 16:29:52,890:INFO:     ydata_profiling: Not installed
2024-02-05 16:29:52,890:INFO:  explainerdashboard: Not installed
2024-02-05 16:29:52,890:INFO:             autoviz: Not installed
2024-02-05 16:29:52,891:INFO:           fairlearn: Not installed
2024-02-05 16:29:52,891:INFO:          deepchecks: Not installed
2024-02-05 16:29:52,891:INFO:             xgboost: 2.0.3
2024-02-05 16:29:52,891:INFO:            catboost: 1.2.2
2024-02-05 16:29:52,891:INFO:              kmodes: Not installed
2024-02-05 16:29:52,891:INFO:             mlxtend: Not installed
2024-02-05 16:29:52,891:INFO:       statsforecast: Not installed
2024-02-05 16:29:52,891:INFO:        tune_sklearn: Not installed
2024-02-05 16:29:52,891:INFO:                 ray: Not installed
2024-02-05 16:29:52,891:INFO:            hyperopt: Not installed
2024-02-05 16:29:52,891:INFO:              optuna: Not installed
2024-02-05 16:29:52,891:INFO:               skopt: Not installed
2024-02-05 16:29:52,891:INFO:              mlflow: Not installed
2024-02-05 16:29:52,891:INFO:              gradio: Not installed
2024-02-05 16:29:52,891:INFO:             fastapi: Not installed
2024-02-05 16:29:52,891:INFO:             uvicorn: Not installed
2024-02-05 16:29:52,891:INFO:              m2cgen: Not installed
2024-02-05 16:29:52,891:INFO:           evidently: Not installed
2024-02-05 16:29:52,891:INFO:               fugue: Not installed
2024-02-05 16:29:52,891:INFO:           streamlit: Not installed
2024-02-05 16:29:52,891:INFO:             prophet: 1.1.5
2024-02-05 16:29:52,891:INFO:None
2024-02-05 16:29:52,891:INFO:Set up data.
2024-02-05 16:29:52,895:INFO:Set up folding strategy.
2024-02-05 16:29:52,895:INFO:Set up train/test split.
2024-02-05 16:29:52,897:INFO:Set up index.
2024-02-05 16:29:52,897:INFO:Assigning column types.
2024-02-05 16:29:52,899:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:29:52,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:29:52,924:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:29:52,943:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:52,944:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:52,985:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:29:52,986:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:29:53,002:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:53,004:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:53,004:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:29:53,028:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:29:53,043:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:53,045:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:53,069:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:29:53,146:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:53,148:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:53,148:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:29:53,186:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:53,188:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:53,229:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:53,230:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:53,231:INFO:Preparing preprocessing pipeline...
2024-02-05 16:29:53,232:INFO:Set up label encoding.
2024-02-05 16:29:53,232:INFO:Set up simple imputation.
2024-02-05 16:29:53,247:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:29:53,250:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:29:53,250:INFO:Creating final display dataframe.
2024-02-05 16:29:53,287:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  7f0f
2024-02-05 16:29:53,329:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:53,330:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:53,370:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:29:53,372:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:29:53,372:INFO:setup() successfully completed in 0.56s...............
2024-02-05 16:29:53,372:INFO:Initializing create_model()
2024-02-05 16:29:53,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D607316250>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:29:53,372:INFO:Checking exceptions
2024-02-05 16:29:53,374:INFO:Importing libraries
2024-02-05 16:29:53,374:INFO:Copying training dataset
2024-02-05 16:29:53,376:INFO:Defining folds
2024-02-05 16:29:53,376:INFO:Declaring metric variables
2024-02-05 16:29:53,376:INFO:Importing untrained model
2024-02-05 16:29:53,377:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:29:53,377:INFO:Starting cross validation
2024-02-05 16:29:53,378:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:29:56,042:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,044:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,045:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,162:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,164:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,165:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,283:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,285:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,286:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,305:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,307:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,308:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,323:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,324:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,326:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:29:56,338:INFO:Calculating mean and std
2024-02-05 16:29:56,338:INFO:Creating metrics dataframe
2024-02-05 16:29:56,340:INFO:Finalizing model
2024-02-05 16:29:56,389:INFO:Uploading results into container
2024-02-05 16:29:56,390:INFO:Uploading model into container now
2024-02-05 16:29:56,398:INFO:_master_model_container: 1
2024-02-05 16:29:56,398:INFO:_display_container: 2
2024-02-05 16:29:56,398:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:29:56,398:INFO:create_model() successfully completed......................................
2024-02-05 16:29:56,469:INFO:Initializing plot_model()
2024-02-05 16:29:56,469:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D607316250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:29:56,469:INFO:Checking exceptions
2024-02-05 16:29:56,473:INFO:Preloading libraries
2024-02-05 16:29:56,477:INFO:Copying training dataset
2024-02-05 16:29:56,477:INFO:Plot type: confusion_matrix
2024-02-05 16:29:56,551:INFO:Fitting Model
2024-02-05 16:29:56,551:INFO:Scoring test/hold-out set
2024-02-05 16:29:56,567:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:29:56,657:INFO:Visual Rendered Successfully
2024-02-05 16:29:56,718:INFO:plot_model() successfully completed......................................
2024-02-05 16:29:56,718:INFO:Initializing plot_model()
2024-02-05 16:29:56,718:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D607316250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:29:56,718:INFO:Checking exceptions
2024-02-05 16:29:56,720:INFO:Preloading libraries
2024-02-05 16:29:56,724:INFO:Copying training dataset
2024-02-05 16:29:56,724:INFO:Plot type: error
2024-02-05 16:29:56,771:INFO:Fitting Model
2024-02-05 16:29:56,772:INFO:Scoring test/hold-out set
2024-02-05 16:29:56,785:INFO:Saving 'Prediction Error.png'
2024-02-05 16:29:56,898:INFO:Visual Rendered Successfully
2024-02-05 16:29:56,962:INFO:plot_model() successfully completed......................................
2024-02-05 16:41:04,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:41:04,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:41:04,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:41:04,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:41:05,179:INFO:PyCaret ClassificationExperiment
2024-02-05 16:41:05,179:INFO:Logging name: clf-default-name
2024-02-05 16:41:05,179:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:41:05,180:INFO:version 3.2.0
2024-02-05 16:41:05,180:INFO:Initializing setup()
2024-02-05 16:41:05,180:INFO:self.USI: 10ba
2024-02-05 16:41:05,180:INFO:self._variable_keys: {'exp_id', 'fold_groups_param', 'data', 'target_param', 'html_param', 'n_jobs_param', 'gpu_n_jobs_param', 'X_test', 'X', 'idx', 'pipeline', 'y_train', 'fix_imbalance', 'X_train', 'log_plots_param', 'y_test', '_ml_usecase', 'memory', 'fold_generator', 'USI', 'gpu_param', 'y', 'is_multiclass', '_available_plots', 'logging_param', 'exp_name_log', 'fold_shuffle_param', 'seed'}
2024-02-05 16:41:05,180:INFO:Checking environment
2024-02-05 16:41:05,180:INFO:python_version: 3.11.7
2024-02-05 16:41:05,180:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:41:05,180:INFO:machine: AMD64
2024-02-05 16:41:05,187:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:41:05,190:INFO:Memory: svmem(total=16892026880, available=6594142208, percent=61.0, used=10297884672, free=6594142208)
2024-02-05 16:41:05,191:INFO:Physical Core: 12
2024-02-05 16:41:05,191:INFO:Logical Core: 16
2024-02-05 16:41:05,191:INFO:Checking libraries
2024-02-05 16:41:05,191:INFO:System:
2024-02-05 16:41:05,191:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:41:05,191:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:41:05,191:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:41:05,191:INFO:PyCaret required dependencies:
2024-02-05 16:41:05,220:INFO:                 pip: 23.3.2
2024-02-05 16:41:05,220:INFO:          setuptools: 65.5.0
2024-02-05 16:41:05,220:INFO:             pycaret: 3.2.0
2024-02-05 16:41:05,220:INFO:             IPython: 8.20.0
2024-02-05 16:41:05,220:INFO:          ipywidgets: 8.1.1
2024-02-05 16:41:05,220:INFO:                tqdm: 4.66.1
2024-02-05 16:41:05,220:INFO:               numpy: 1.25.2
2024-02-05 16:41:05,220:INFO:              pandas: 1.5.3
2024-02-05 16:41:05,220:INFO:              jinja2: 3.1.3
2024-02-05 16:41:05,220:INFO:               scipy: 1.10.1
2024-02-05 16:41:05,220:INFO:              joblib: 1.3.2
2024-02-05 16:41:05,221:INFO:             sklearn: 1.2.2
2024-02-05 16:41:05,221:INFO:                pyod: 1.1.2
2024-02-05 16:41:05,221:INFO:            imblearn: 0.12.0
2024-02-05 16:41:05,221:INFO:   category_encoders: 2.6.3
2024-02-05 16:41:05,221:INFO:            lightgbm: 4.3.0
2024-02-05 16:41:05,221:INFO:               numba: 0.58.1
2024-02-05 16:41:05,221:INFO:            requests: 2.31.0
2024-02-05 16:41:05,221:INFO:          matplotlib: 3.6.0
2024-02-05 16:41:05,221:INFO:          scikitplot: 0.3.7
2024-02-05 16:41:05,221:INFO:         yellowbrick: 1.5
2024-02-05 16:41:05,221:INFO:              plotly: 5.18.0
2024-02-05 16:41:05,221:INFO:    plotly-resampler: Not installed
2024-02-05 16:41:05,221:INFO:             kaleido: 0.2.1
2024-02-05 16:41:05,221:INFO:           schemdraw: 0.15
2024-02-05 16:41:05,221:INFO:         statsmodels: 0.14.1
2024-02-05 16:41:05,221:INFO:              sktime: 0.21.1
2024-02-05 16:41:05,221:INFO:               tbats: 1.1.3
2024-02-05 16:41:05,221:INFO:            pmdarima: 2.0.4
2024-02-05 16:41:05,221:INFO:              psutil: 5.9.8
2024-02-05 16:41:05,221:INFO:          markupsafe: 2.1.4
2024-02-05 16:41:05,221:INFO:             pickle5: Not installed
2024-02-05 16:41:05,221:INFO:         cloudpickle: 3.0.0
2024-02-05 16:41:05,221:INFO:         deprecation: 2.1.0
2024-02-05 16:41:05,221:INFO:              xxhash: 3.4.1
2024-02-05 16:41:05,221:INFO:           wurlitzer: Not installed
2024-02-05 16:41:05,221:INFO:PyCaret optional dependencies:
2024-02-05 16:41:05,249:INFO:                shap: 0.44.1
2024-02-05 16:41:05,249:INFO:           interpret: Not installed
2024-02-05 16:41:05,249:INFO:                umap: Not installed
2024-02-05 16:41:05,249:INFO:     ydata_profiling: Not installed
2024-02-05 16:41:05,249:INFO:  explainerdashboard: Not installed
2024-02-05 16:41:05,249:INFO:             autoviz: Not installed
2024-02-05 16:41:05,249:INFO:           fairlearn: Not installed
2024-02-05 16:41:05,249:INFO:          deepchecks: Not installed
2024-02-05 16:41:05,249:INFO:             xgboost: 2.0.3
2024-02-05 16:41:05,249:INFO:            catboost: 1.2.2
2024-02-05 16:41:05,249:INFO:              kmodes: Not installed
2024-02-05 16:41:05,249:INFO:             mlxtend: Not installed
2024-02-05 16:41:05,249:INFO:       statsforecast: Not installed
2024-02-05 16:41:05,249:INFO:        tune_sklearn: Not installed
2024-02-05 16:41:05,249:INFO:                 ray: Not installed
2024-02-05 16:41:05,249:INFO:            hyperopt: Not installed
2024-02-05 16:41:05,249:INFO:              optuna: Not installed
2024-02-05 16:41:05,249:INFO:               skopt: Not installed
2024-02-05 16:41:05,249:INFO:              mlflow: Not installed
2024-02-05 16:41:05,249:INFO:              gradio: Not installed
2024-02-05 16:41:05,249:INFO:             fastapi: Not installed
2024-02-05 16:41:05,249:INFO:             uvicorn: Not installed
2024-02-05 16:41:05,249:INFO:              m2cgen: Not installed
2024-02-05 16:41:05,249:INFO:           evidently: Not installed
2024-02-05 16:41:05,249:INFO:               fugue: Not installed
2024-02-05 16:41:05,249:INFO:           streamlit: Not installed
2024-02-05 16:41:05,249:INFO:             prophet: 1.1.5
2024-02-05 16:41:05,249:INFO:None
2024-02-05 16:41:05,249:INFO:Set up data.
2024-02-05 16:41:05,253:INFO:Set up folding strategy.
2024-02-05 16:41:05,253:INFO:Set up train/test split.
2024-02-05 16:41:05,255:INFO:Set up index.
2024-02-05 16:41:05,255:INFO:Assigning column types.
2024-02-05 16:41:05,258:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:41:05,281:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:41:05,282:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:41:05,300:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:41:05,302:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:41:05,342:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:41:05,343:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:41:05,358:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:41:05,361:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:41:05,361:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:41:05,388:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:41:05,403:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:41:05,405:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:41:05,429:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:41:05,506:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:41:05,507:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:41:05,507:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:41:05,547:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:41:05,549:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:41:05,589:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:41:05,590:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:41:05,592:INFO:Preparing preprocessing pipeline...
2024-02-05 16:41:05,593:INFO:Set up label encoding.
2024-02-05 16:41:05,593:INFO:Set up simple imputation.
2024-02-05 16:41:05,606:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:41:05,609:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:41:05,609:INFO:Creating final display dataframe.
2024-02-05 16:41:05,647:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  10ba
2024-02-05 16:41:05,690:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:41:05,691:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:41:05,732:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:41:05,733:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:41:05,734:INFO:setup() successfully completed in 0.56s...............
2024-02-05 16:41:05,734:INFO:Initializing create_model()
2024-02-05 16:41:05,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7BCCA3B10>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:41:05,734:INFO:Checking exceptions
2024-02-05 16:41:05,736:INFO:Importing libraries
2024-02-05 16:41:05,736:INFO:Copying training dataset
2024-02-05 16:41:05,738:INFO:Defining folds
2024-02-05 16:41:05,738:INFO:Declaring metric variables
2024-02-05 16:41:05,738:INFO:Importing untrained model
2024-02-05 16:41:05,738:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:41:05,738:INFO:Starting cross validation
2024-02-05 16:41:05,739:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:41:08,448:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,449:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,450:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,542:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,544:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,545:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,570:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,572:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,572:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,600:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,602:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,603:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,610:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,611:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,612:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:41:08,616:INFO:Calculating mean and std
2024-02-05 16:41:08,616:INFO:Creating metrics dataframe
2024-02-05 16:41:08,617:INFO:Finalizing model
2024-02-05 16:41:08,666:INFO:Uploading results into container
2024-02-05 16:41:08,666:INFO:Uploading model into container now
2024-02-05 16:41:08,671:INFO:_master_model_container: 1
2024-02-05 16:41:08,671:INFO:_display_container: 2
2024-02-05 16:41:08,671:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:41:08,671:INFO:create_model() successfully completed......................................
2024-02-05 16:41:08,738:INFO:Initializing plot_model()
2024-02-05 16:41:08,738:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7BCCA3B10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:41:08,739:INFO:Checking exceptions
2024-02-05 16:41:08,741:INFO:Preloading libraries
2024-02-05 16:41:08,745:INFO:Copying training dataset
2024-02-05 16:41:08,745:INFO:Plot type: confusion_matrix
2024-02-05 16:41:08,814:INFO:Fitting Model
2024-02-05 16:41:08,814:INFO:Scoring test/hold-out set
2024-02-05 16:41:08,829:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:41:08,911:INFO:Visual Rendered Successfully
2024-02-05 16:41:08,967:INFO:plot_model() successfully completed......................................
2024-02-05 16:41:08,967:INFO:Initializing plot_model()
2024-02-05 16:41:08,967:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B7BCCA3B10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=error, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:41:08,967:INFO:Checking exceptions
2024-02-05 16:41:08,969:INFO:Preloading libraries
2024-02-05 16:41:08,972:INFO:Copying training dataset
2024-02-05 16:41:08,973:INFO:Plot type: error
2024-02-05 16:41:09,018:INFO:Fitting Model
2024-02-05 16:41:09,019:INFO:Scoring test/hold-out set
2024-02-05 16:41:09,030:INFO:Saving 'Prediction Error.png'
2024-02-05 16:41:09,140:INFO:Visual Rendered Successfully
2024-02-05 16:41:09,195:INFO:plot_model() successfully completed......................................
2024-02-05 16:45:11,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:45:11,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:45:11,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:45:11,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:45:11,798:INFO:PyCaret ClassificationExperiment
2024-02-05 16:45:11,798:INFO:Logging name: clf-default-name
2024-02-05 16:45:11,798:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:45:11,798:INFO:version 3.2.0
2024-02-05 16:45:11,798:INFO:Initializing setup()
2024-02-05 16:45:11,798:INFO:self.USI: e535
2024-02-05 16:45:11,798:INFO:self._variable_keys: {'_ml_usecase', 'X', 'seed', 'fold_groups_param', 'pipeline', 'log_plots_param', 'X_train', 'memory', 'gpu_param', 'fold_generator', 'fold_shuffle_param', 'logging_param', 'n_jobs_param', 'y_test', 'target_param', 'data', 'exp_id', 'gpu_n_jobs_param', 'y_train', 'fix_imbalance', '_available_plots', 'html_param', 'X_test', 'USI', 'y', 'is_multiclass', 'exp_name_log', 'idx'}
2024-02-05 16:45:11,798:INFO:Checking environment
2024-02-05 16:45:11,798:INFO:python_version: 3.11.7
2024-02-05 16:45:11,798:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:45:11,798:INFO:machine: AMD64
2024-02-05 16:45:11,806:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:45:11,809:INFO:Memory: svmem(total=16892026880, available=6008520704, percent=64.4, used=10883506176, free=6008520704)
2024-02-05 16:45:11,810:INFO:Physical Core: 12
2024-02-05 16:45:11,810:INFO:Logical Core: 16
2024-02-05 16:45:11,810:INFO:Checking libraries
2024-02-05 16:45:11,810:INFO:System:
2024-02-05 16:45:11,810:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:45:11,810:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:45:11,810:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:45:11,810:INFO:PyCaret required dependencies:
2024-02-05 16:45:11,839:INFO:                 pip: 23.3.2
2024-02-05 16:45:11,839:INFO:          setuptools: 65.5.0
2024-02-05 16:45:11,839:INFO:             pycaret: 3.2.0
2024-02-05 16:45:11,839:INFO:             IPython: 8.20.0
2024-02-05 16:45:11,839:INFO:          ipywidgets: 8.1.1
2024-02-05 16:45:11,839:INFO:                tqdm: 4.66.1
2024-02-05 16:45:11,839:INFO:               numpy: 1.25.2
2024-02-05 16:45:11,839:INFO:              pandas: 1.5.3
2024-02-05 16:45:11,839:INFO:              jinja2: 3.1.3
2024-02-05 16:45:11,839:INFO:               scipy: 1.10.1
2024-02-05 16:45:11,839:INFO:              joblib: 1.3.2
2024-02-05 16:45:11,839:INFO:             sklearn: 1.2.2
2024-02-05 16:45:11,839:INFO:                pyod: 1.1.2
2024-02-05 16:45:11,839:INFO:            imblearn: 0.12.0
2024-02-05 16:45:11,839:INFO:   category_encoders: 2.6.3
2024-02-05 16:45:11,839:INFO:            lightgbm: 4.3.0
2024-02-05 16:45:11,839:INFO:               numba: 0.58.1
2024-02-05 16:45:11,839:INFO:            requests: 2.31.0
2024-02-05 16:45:11,839:INFO:          matplotlib: 3.6.0
2024-02-05 16:45:11,839:INFO:          scikitplot: 0.3.7
2024-02-05 16:45:11,839:INFO:         yellowbrick: 1.5
2024-02-05 16:45:11,839:INFO:              plotly: 5.18.0
2024-02-05 16:45:11,839:INFO:    plotly-resampler: Not installed
2024-02-05 16:45:11,839:INFO:             kaleido: 0.2.1
2024-02-05 16:45:11,839:INFO:           schemdraw: 0.15
2024-02-05 16:45:11,839:INFO:         statsmodels: 0.14.1
2024-02-05 16:45:11,839:INFO:              sktime: 0.21.1
2024-02-05 16:45:11,840:INFO:               tbats: 1.1.3
2024-02-05 16:45:11,840:INFO:            pmdarima: 2.0.4
2024-02-05 16:45:11,840:INFO:              psutil: 5.9.8
2024-02-05 16:45:11,840:INFO:          markupsafe: 2.1.4
2024-02-05 16:45:11,840:INFO:             pickle5: Not installed
2024-02-05 16:45:11,840:INFO:         cloudpickle: 3.0.0
2024-02-05 16:45:11,840:INFO:         deprecation: 2.1.0
2024-02-05 16:45:11,840:INFO:              xxhash: 3.4.1
2024-02-05 16:45:11,840:INFO:           wurlitzer: Not installed
2024-02-05 16:45:11,840:INFO:PyCaret optional dependencies:
2024-02-05 16:45:11,867:INFO:                shap: 0.44.1
2024-02-05 16:45:11,867:INFO:           interpret: Not installed
2024-02-05 16:45:11,867:INFO:                umap: Not installed
2024-02-05 16:45:11,867:INFO:     ydata_profiling: Not installed
2024-02-05 16:45:11,867:INFO:  explainerdashboard: Not installed
2024-02-05 16:45:11,867:INFO:             autoviz: Not installed
2024-02-05 16:45:11,868:INFO:           fairlearn: Not installed
2024-02-05 16:45:11,868:INFO:          deepchecks: Not installed
2024-02-05 16:45:11,868:INFO:             xgboost: 2.0.3
2024-02-05 16:45:11,868:INFO:            catboost: 1.2.2
2024-02-05 16:45:11,868:INFO:              kmodes: Not installed
2024-02-05 16:45:11,868:INFO:             mlxtend: Not installed
2024-02-05 16:45:11,868:INFO:       statsforecast: Not installed
2024-02-05 16:45:11,868:INFO:        tune_sklearn: Not installed
2024-02-05 16:45:11,868:INFO:                 ray: Not installed
2024-02-05 16:45:11,868:INFO:            hyperopt: Not installed
2024-02-05 16:45:11,868:INFO:              optuna: Not installed
2024-02-05 16:45:11,868:INFO:               skopt: Not installed
2024-02-05 16:45:11,868:INFO:              mlflow: Not installed
2024-02-05 16:45:11,868:INFO:              gradio: Not installed
2024-02-05 16:45:11,868:INFO:             fastapi: Not installed
2024-02-05 16:45:11,868:INFO:             uvicorn: Not installed
2024-02-05 16:45:11,868:INFO:              m2cgen: Not installed
2024-02-05 16:45:11,868:INFO:           evidently: Not installed
2024-02-05 16:45:11,868:INFO:               fugue: Not installed
2024-02-05 16:45:11,868:INFO:           streamlit: Not installed
2024-02-05 16:45:11,868:INFO:             prophet: 1.1.5
2024-02-05 16:45:11,868:INFO:None
2024-02-05 16:45:11,868:INFO:Set up data.
2024-02-05 16:45:11,871:INFO:Set up folding strategy.
2024-02-05 16:45:11,871:INFO:Set up train/test split.
2024-02-05 16:45:11,874:INFO:Set up index.
2024-02-05 16:45:11,874:INFO:Assigning column types.
2024-02-05 16:45:11,876:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:45:11,899:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:45:11,900:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:45:11,917:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:45:11,918:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:45:11,957:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:45:11,958:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:45:11,973:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:45:11,974:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:45:11,975:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:45:11,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:45:12,012:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:45:12,013:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:45:12,039:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:45:12,117:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:45:12,119:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:45:12,119:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:45:12,159:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:45:12,161:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:45:12,204:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:45:12,205:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:45:12,207:INFO:Preparing preprocessing pipeline...
2024-02-05 16:45:12,208:INFO:Set up label encoding.
2024-02-05 16:45:12,208:INFO:Set up simple imputation.
2024-02-05 16:45:12,225:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:45:12,229:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:45:12,229:INFO:Creating final display dataframe.
2024-02-05 16:45:12,275:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  e535
2024-02-05 16:45:12,327:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:45:12,329:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:45:12,380:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:45:12,381:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:45:12,381:INFO:setup() successfully completed in 0.58s...............
2024-02-05 16:45:12,381:INFO:Initializing create_model()
2024-02-05 16:45:12,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002578BBAE910>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:45:12,381:INFO:Checking exceptions
2024-02-05 16:45:12,383:INFO:Importing libraries
2024-02-05 16:45:12,383:INFO:Copying training dataset
2024-02-05 16:45:12,387:INFO:Defining folds
2024-02-05 16:45:12,387:INFO:Declaring metric variables
2024-02-05 16:45:12,387:INFO:Importing untrained model
2024-02-05 16:45:12,388:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:45:12,388:INFO:Starting cross validation
2024-02-05 16:45:12,389:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:45:15,624:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,627:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,628:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,817:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,818:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,820:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,908:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,910:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,911:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,914:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,915:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,917:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,933:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,934:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,935:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:45:15,946:INFO:Calculating mean and std
2024-02-05 16:45:15,946:INFO:Creating metrics dataframe
2024-02-05 16:45:15,948:INFO:Finalizing model
2024-02-05 16:45:16,025:INFO:Uploading results into container
2024-02-05 16:45:16,026:INFO:Uploading model into container now
2024-02-05 16:45:16,036:INFO:_master_model_container: 1
2024-02-05 16:45:16,036:INFO:_display_container: 2
2024-02-05 16:45:16,037:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:45:16,037:INFO:create_model() successfully completed......................................
2024-02-05 16:45:16,151:INFO:Initializing plot_model()
2024-02-05 16:45:16,151:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002578BBAE910>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:45:16,151:INFO:Checking exceptions
2024-02-05 16:45:16,154:INFO:Preloading libraries
2024-02-05 16:45:16,158:INFO:Copying training dataset
2024-02-05 16:45:16,159:INFO:Plot type: confusion_matrix
2024-02-05 16:45:16,259:INFO:Fitting Model
2024-02-05 16:45:16,260:INFO:Scoring test/hold-out set
2024-02-05 16:45:16,277:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:45:16,366:INFO:Visual Rendered Successfully
2024-02-05 16:45:16,444:INFO:plot_model() successfully completed......................................
2024-02-05 16:45:16,445:INFO:Initializing plot_model()
2024-02-05 16:45:16,445:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002578BBAE910>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=vc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:45:16,445:INFO:Checking exceptions
2024-02-05 16:45:16,446:INFO:Preloading libraries
2024-02-05 16:45:16,450:INFO:Copying training dataset
2024-02-05 16:45:16,451:INFO:Plot type: vc
2024-02-05 16:45:16,451:INFO:Determining param_name
2024-02-05 16:45:16,451:INFO:param_name: max_depth
2024-02-05 16:45:16,517:INFO:Fitting Model
2024-02-05 16:45:18,123:INFO:Saving 'Validation Curve.png'
2024-02-05 16:45:18,378:INFO:Visual Rendered Successfully
2024-02-05 16:45:18,459:INFO:plot_model() successfully completed......................................
2024-02-05 16:47:17,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:47:17,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:47:17,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:47:17,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:47:18,195:INFO:PyCaret ClassificationExperiment
2024-02-05 16:47:18,195:INFO:Logging name: clf-default-name
2024-02-05 16:47:18,195:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:47:18,195:INFO:version 3.2.0
2024-02-05 16:47:18,195:INFO:Initializing setup()
2024-02-05 16:47:18,196:INFO:self.USI: 8610
2024-02-05 16:47:18,196:INFO:self._variable_keys: {'X_train', 'memory', 'exp_name_log', 'idx', 'gpu_n_jobs_param', 'y_train', 'fold_groups_param', 'seed', 'X', 'USI', 'n_jobs_param', 'data', 'pipeline', 'fold_shuffle_param', 'target_param', '_available_plots', 'logging_param', 'gpu_param', 'html_param', 'y_test', 'y', 'fix_imbalance', 'is_multiclass', 'exp_id', 'log_plots_param', 'X_test', 'fold_generator', '_ml_usecase'}
2024-02-05 16:47:18,196:INFO:Checking environment
2024-02-05 16:47:18,196:INFO:python_version: 3.11.7
2024-02-05 16:47:18,196:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:47:18,196:INFO:machine: AMD64
2024-02-05 16:47:18,203:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:47:18,207:INFO:Memory: svmem(total=16892026880, available=8568958976, percent=49.3, used=8323067904, free=8568958976)
2024-02-05 16:47:18,207:INFO:Physical Core: 12
2024-02-05 16:47:18,207:INFO:Logical Core: 16
2024-02-05 16:47:18,207:INFO:Checking libraries
2024-02-05 16:47:18,207:INFO:System:
2024-02-05 16:47:18,207:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:47:18,207:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:47:18,207:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:47:18,207:INFO:PyCaret required dependencies:
2024-02-05 16:47:18,233:INFO:                 pip: 23.3.2
2024-02-05 16:47:18,234:INFO:          setuptools: 65.5.0
2024-02-05 16:47:18,234:INFO:             pycaret: 3.2.0
2024-02-05 16:47:18,234:INFO:             IPython: 8.20.0
2024-02-05 16:47:18,234:INFO:          ipywidgets: 8.1.1
2024-02-05 16:47:18,234:INFO:                tqdm: 4.66.1
2024-02-05 16:47:18,234:INFO:               numpy: 1.25.2
2024-02-05 16:47:18,234:INFO:              pandas: 1.5.3
2024-02-05 16:47:18,234:INFO:              jinja2: 3.1.3
2024-02-05 16:47:18,234:INFO:               scipy: 1.10.1
2024-02-05 16:47:18,234:INFO:              joblib: 1.3.2
2024-02-05 16:47:18,234:INFO:             sklearn: 1.2.2
2024-02-05 16:47:18,234:INFO:                pyod: 1.1.2
2024-02-05 16:47:18,234:INFO:            imblearn: 0.12.0
2024-02-05 16:47:18,234:INFO:   category_encoders: 2.6.3
2024-02-05 16:47:18,234:INFO:            lightgbm: 4.3.0
2024-02-05 16:47:18,234:INFO:               numba: 0.58.1
2024-02-05 16:47:18,234:INFO:            requests: 2.31.0
2024-02-05 16:47:18,234:INFO:          matplotlib: 3.6.0
2024-02-05 16:47:18,234:INFO:          scikitplot: 0.3.7
2024-02-05 16:47:18,234:INFO:         yellowbrick: 1.5
2024-02-05 16:47:18,234:INFO:              plotly: 5.18.0
2024-02-05 16:47:18,234:INFO:    plotly-resampler: Not installed
2024-02-05 16:47:18,234:INFO:             kaleido: 0.2.1
2024-02-05 16:47:18,234:INFO:           schemdraw: 0.15
2024-02-05 16:47:18,234:INFO:         statsmodels: 0.14.1
2024-02-05 16:47:18,234:INFO:              sktime: 0.21.1
2024-02-05 16:47:18,234:INFO:               tbats: 1.1.3
2024-02-05 16:47:18,234:INFO:            pmdarima: 2.0.4
2024-02-05 16:47:18,234:INFO:              psutil: 5.9.8
2024-02-05 16:47:18,234:INFO:          markupsafe: 2.1.4
2024-02-05 16:47:18,234:INFO:             pickle5: Not installed
2024-02-05 16:47:18,234:INFO:         cloudpickle: 3.0.0
2024-02-05 16:47:18,234:INFO:         deprecation: 2.1.0
2024-02-05 16:47:18,234:INFO:              xxhash: 3.4.1
2024-02-05 16:47:18,234:INFO:           wurlitzer: Not installed
2024-02-05 16:47:18,234:INFO:PyCaret optional dependencies:
2024-02-05 16:47:18,263:INFO:                shap: 0.44.1
2024-02-05 16:47:18,263:INFO:           interpret: Not installed
2024-02-05 16:47:18,263:INFO:                umap: Not installed
2024-02-05 16:47:18,263:INFO:     ydata_profiling: Not installed
2024-02-05 16:47:18,263:INFO:  explainerdashboard: Not installed
2024-02-05 16:47:18,263:INFO:             autoviz: Not installed
2024-02-05 16:47:18,263:INFO:           fairlearn: Not installed
2024-02-05 16:47:18,263:INFO:          deepchecks: Not installed
2024-02-05 16:47:18,263:INFO:             xgboost: 2.0.3
2024-02-05 16:47:18,263:INFO:            catboost: 1.2.2
2024-02-05 16:47:18,263:INFO:              kmodes: Not installed
2024-02-05 16:47:18,263:INFO:             mlxtend: Not installed
2024-02-05 16:47:18,263:INFO:       statsforecast: Not installed
2024-02-05 16:47:18,263:INFO:        tune_sklearn: Not installed
2024-02-05 16:47:18,263:INFO:                 ray: Not installed
2024-02-05 16:47:18,263:INFO:            hyperopt: Not installed
2024-02-05 16:47:18,263:INFO:              optuna: Not installed
2024-02-05 16:47:18,263:INFO:               skopt: Not installed
2024-02-05 16:47:18,263:INFO:              mlflow: Not installed
2024-02-05 16:47:18,264:INFO:              gradio: Not installed
2024-02-05 16:47:18,264:INFO:             fastapi: Not installed
2024-02-05 16:47:18,264:INFO:             uvicorn: Not installed
2024-02-05 16:47:18,264:INFO:              m2cgen: Not installed
2024-02-05 16:47:18,264:INFO:           evidently: Not installed
2024-02-05 16:47:18,264:INFO:               fugue: Not installed
2024-02-05 16:47:18,264:INFO:           streamlit: Not installed
2024-02-05 16:47:18,264:INFO:             prophet: 1.1.5
2024-02-05 16:47:18,264:INFO:None
2024-02-05 16:47:18,264:INFO:Set up data.
2024-02-05 16:47:18,267:INFO:Set up folding strategy.
2024-02-05 16:47:18,267:INFO:Set up train/test split.
2024-02-05 16:47:18,269:INFO:Set up index.
2024-02-05 16:47:18,269:INFO:Assigning column types.
2024-02-05 16:47:18,271:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:47:18,293:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:47:18,295:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:47:18,312:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:47:18,313:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:47:18,351:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:47:18,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:47:18,368:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:47:18,369:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:47:18,370:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:47:18,394:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:47:18,408:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:47:18,410:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:47:18,434:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:47:18,504:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:47:18,505:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:47:18,505:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:47:18,544:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:47:18,546:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:47:18,583:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:47:18,584:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:47:18,586:INFO:Preparing preprocessing pipeline...
2024-02-05 16:47:18,586:INFO:Set up label encoding.
2024-02-05 16:47:18,586:INFO:Set up simple imputation.
2024-02-05 16:47:18,599:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:47:18,601:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:47:18,601:INFO:Creating final display dataframe.
2024-02-05 16:47:18,635:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  8610
2024-02-05 16:47:18,675:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:47:18,678:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:47:18,717:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:47:18,718:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:47:18,719:INFO:setup() successfully completed in 0.52s...............
2024-02-05 16:47:18,719:INFO:Initializing create_model()
2024-02-05 16:47:18,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000176811E3A90>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:47:18,719:INFO:Checking exceptions
2024-02-05 16:47:18,721:INFO:Importing libraries
2024-02-05 16:47:18,721:INFO:Copying training dataset
2024-02-05 16:47:18,722:INFO:Defining folds
2024-02-05 16:47:18,722:INFO:Declaring metric variables
2024-02-05 16:47:18,722:INFO:Importing untrained model
2024-02-05 16:47:18,722:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:47:18,723:INFO:Starting cross validation
2024-02-05 16:47:18,724:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:47:21,302:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,304:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,306:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,311:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,312:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,313:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,414:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,416:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,417:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,439:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,441:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,442:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,454:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,454:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,456:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:47:21,468:INFO:Calculating mean and std
2024-02-05 16:47:21,468:INFO:Creating metrics dataframe
2024-02-05 16:47:21,470:INFO:Finalizing model
2024-02-05 16:47:21,523:INFO:Uploading results into container
2024-02-05 16:47:21,525:INFO:Uploading model into container now
2024-02-05 16:47:21,532:INFO:_master_model_container: 1
2024-02-05 16:47:21,532:INFO:_display_container: 2
2024-02-05 16:47:21,533:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:47:21,533:INFO:create_model() successfully completed......................................
2024-02-05 16:47:21,600:INFO:Initializing plot_model()
2024-02-05 16:47:21,600:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000176811E3A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:47:21,600:INFO:Checking exceptions
2024-02-05 16:47:21,604:INFO:Preloading libraries
2024-02-05 16:47:21,608:INFO:Copying training dataset
2024-02-05 16:47:21,608:INFO:Plot type: confusion_matrix
2024-02-05 16:47:21,676:INFO:Fitting Model
2024-02-05 16:47:21,676:INFO:Scoring test/hold-out set
2024-02-05 16:47:21,691:INFO:Saving 'Confusion Matrix.png'
2024-02-05 16:47:21,789:INFO:Visual Rendered Successfully
2024-02-05 16:47:21,847:INFO:plot_model() successfully completed......................................
2024-02-05 16:47:21,847:INFO:Initializing plot_model()
2024-02-05 16:47:21,847:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000176811E3A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=cv, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:47:21,847:INFO:Checking exceptions
2024-02-05 16:48:08,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:48:08,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:48:08,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:48:08,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:48:08,820:INFO:PyCaret ClassificationExperiment
2024-02-05 16:48:08,820:INFO:Logging name: clf-default-name
2024-02-05 16:48:08,820:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:48:08,820:INFO:version 3.2.0
2024-02-05 16:48:08,820:INFO:Initializing setup()
2024-02-05 16:48:08,821:INFO:self.USI: 0c69
2024-02-05 16:48:08,821:INFO:self._variable_keys: {'data', 'n_jobs_param', 'html_param', 'fold_groups_param', 'USI', 'fold_generator', 'target_param', 'exp_id', 'memory', '_ml_usecase', 'X_test', 'X', '_available_plots', 'log_plots_param', 'y_test', 'is_multiclass', 'seed', 'fix_imbalance', 'gpu_param', 'exp_name_log', 'idx', 'gpu_n_jobs_param', 'y_train', 'X_train', 'y', 'pipeline', 'fold_shuffle_param', 'logging_param'}
2024-02-05 16:48:08,821:INFO:Checking environment
2024-02-05 16:48:08,821:INFO:python_version: 3.11.7
2024-02-05 16:48:08,821:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:48:08,821:INFO:machine: AMD64
2024-02-05 16:48:08,829:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:48:08,832:INFO:Memory: svmem(total=16892026880, available=7864623104, percent=53.4, used=9027403776, free=7864623104)
2024-02-05 16:48:08,833:INFO:Physical Core: 12
2024-02-05 16:48:08,833:INFO:Logical Core: 16
2024-02-05 16:48:08,833:INFO:Checking libraries
2024-02-05 16:48:08,833:INFO:System:
2024-02-05 16:48:08,833:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:48:08,833:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:48:08,833:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:48:08,833:INFO:PyCaret required dependencies:
2024-02-05 16:48:08,859:INFO:                 pip: 23.3.2
2024-02-05 16:48:08,859:INFO:          setuptools: 65.5.0
2024-02-05 16:48:08,859:INFO:             pycaret: 3.2.0
2024-02-05 16:48:08,859:INFO:             IPython: 8.20.0
2024-02-05 16:48:08,859:INFO:          ipywidgets: 8.1.1
2024-02-05 16:48:08,859:INFO:                tqdm: 4.66.1
2024-02-05 16:48:08,859:INFO:               numpy: 1.25.2
2024-02-05 16:48:08,859:INFO:              pandas: 1.5.3
2024-02-05 16:48:08,859:INFO:              jinja2: 3.1.3
2024-02-05 16:48:08,859:INFO:               scipy: 1.10.1
2024-02-05 16:48:08,859:INFO:              joblib: 1.3.2
2024-02-05 16:48:08,859:INFO:             sklearn: 1.2.2
2024-02-05 16:48:08,859:INFO:                pyod: 1.1.2
2024-02-05 16:48:08,859:INFO:            imblearn: 0.12.0
2024-02-05 16:48:08,859:INFO:   category_encoders: 2.6.3
2024-02-05 16:48:08,860:INFO:            lightgbm: 4.3.0
2024-02-05 16:48:08,860:INFO:               numba: 0.58.1
2024-02-05 16:48:08,860:INFO:            requests: 2.31.0
2024-02-05 16:48:08,860:INFO:          matplotlib: 3.6.0
2024-02-05 16:48:08,860:INFO:          scikitplot: 0.3.7
2024-02-05 16:48:08,860:INFO:         yellowbrick: 1.5
2024-02-05 16:48:08,860:INFO:              plotly: 5.18.0
2024-02-05 16:48:08,860:INFO:    plotly-resampler: Not installed
2024-02-05 16:48:08,860:INFO:             kaleido: 0.2.1
2024-02-05 16:48:08,860:INFO:           schemdraw: 0.15
2024-02-05 16:48:08,860:INFO:         statsmodels: 0.14.1
2024-02-05 16:48:08,860:INFO:              sktime: 0.21.1
2024-02-05 16:48:08,860:INFO:               tbats: 1.1.3
2024-02-05 16:48:08,860:INFO:            pmdarima: 2.0.4
2024-02-05 16:48:08,860:INFO:              psutil: 5.9.8
2024-02-05 16:48:08,860:INFO:          markupsafe: 2.1.4
2024-02-05 16:48:08,860:INFO:             pickle5: Not installed
2024-02-05 16:48:08,860:INFO:         cloudpickle: 3.0.0
2024-02-05 16:48:08,860:INFO:         deprecation: 2.1.0
2024-02-05 16:48:08,860:INFO:              xxhash: 3.4.1
2024-02-05 16:48:08,860:INFO:           wurlitzer: Not installed
2024-02-05 16:48:08,860:INFO:PyCaret optional dependencies:
2024-02-05 16:48:08,888:INFO:                shap: 0.44.1
2024-02-05 16:48:08,888:INFO:           interpret: Not installed
2024-02-05 16:48:08,888:INFO:                umap: Not installed
2024-02-05 16:48:08,888:INFO:     ydata_profiling: Not installed
2024-02-05 16:48:08,888:INFO:  explainerdashboard: Not installed
2024-02-05 16:48:08,888:INFO:             autoviz: Not installed
2024-02-05 16:48:08,888:INFO:           fairlearn: Not installed
2024-02-05 16:48:08,888:INFO:          deepchecks: Not installed
2024-02-05 16:48:08,888:INFO:             xgboost: 2.0.3
2024-02-05 16:48:08,888:INFO:            catboost: 1.2.2
2024-02-05 16:48:08,888:INFO:              kmodes: Not installed
2024-02-05 16:48:08,888:INFO:             mlxtend: Not installed
2024-02-05 16:48:08,888:INFO:       statsforecast: Not installed
2024-02-05 16:48:08,888:INFO:        tune_sklearn: Not installed
2024-02-05 16:48:08,888:INFO:                 ray: Not installed
2024-02-05 16:48:08,888:INFO:            hyperopt: Not installed
2024-02-05 16:48:08,888:INFO:              optuna: Not installed
2024-02-05 16:48:08,889:INFO:               skopt: Not installed
2024-02-05 16:48:08,889:INFO:              mlflow: Not installed
2024-02-05 16:48:08,889:INFO:              gradio: Not installed
2024-02-05 16:48:08,889:INFO:             fastapi: Not installed
2024-02-05 16:48:08,889:INFO:             uvicorn: Not installed
2024-02-05 16:48:08,889:INFO:              m2cgen: Not installed
2024-02-05 16:48:08,889:INFO:           evidently: Not installed
2024-02-05 16:48:08,889:INFO:               fugue: Not installed
2024-02-05 16:48:08,889:INFO:           streamlit: Not installed
2024-02-05 16:48:08,889:INFO:             prophet: 1.1.5
2024-02-05 16:48:08,889:INFO:None
2024-02-05 16:48:08,889:INFO:Set up data.
2024-02-05 16:48:08,892:INFO:Set up folding strategy.
2024-02-05 16:48:08,892:INFO:Set up train/test split.
2024-02-05 16:48:08,894:INFO:Set up index.
2024-02-05 16:48:08,895:INFO:Assigning column types.
2024-02-05 16:48:08,897:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:48:08,919:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:48:08,920:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:48:08,938:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:48:08,942:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:48:08,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:48:08,984:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:48:08,999:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:48:09,000:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:48:09,001:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:48:09,023:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:48:09,037:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:48:09,038:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:48:09,062:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:48:09,136:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:48:09,137:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:48:09,137:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:48:09,175:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:48:09,177:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:48:09,214:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:48:09,216:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:48:09,217:INFO:Preparing preprocessing pipeline...
2024-02-05 16:48:09,218:INFO:Set up label encoding.
2024-02-05 16:48:09,218:INFO:Set up simple imputation.
2024-02-05 16:48:09,230:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:48:09,233:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:48:09,233:INFO:Creating final display dataframe.
2024-02-05 16:48:09,269:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  0c69
2024-02-05 16:48:09,310:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:48:09,311:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:48:09,350:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:48:09,351:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:48:09,352:INFO:setup() successfully completed in 0.53s...............
2024-02-05 16:48:09,352:INFO:Initializing create_model()
2024-02-05 16:48:09,352:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A4B5AD3910>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:48:09,352:INFO:Checking exceptions
2024-02-05 16:48:09,353:INFO:Importing libraries
2024-02-05 16:48:09,353:INFO:Copying training dataset
2024-02-05 16:48:09,355:INFO:Defining folds
2024-02-05 16:48:09,355:INFO:Declaring metric variables
2024-02-05 16:48:09,356:INFO:Importing untrained model
2024-02-05 16:48:09,356:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:48:09,356:INFO:Starting cross validation
2024-02-05 16:48:09,357:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:48:11,906:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:11,908:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:11,909:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:11,972:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:11,974:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:11,975:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:12,056:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:12,057:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:12,058:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:12,081:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:12,082:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:12,083:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:12,083:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:12,084:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:12,085:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:48:12,091:INFO:Calculating mean and std
2024-02-05 16:48:12,092:INFO:Creating metrics dataframe
2024-02-05 16:48:12,093:INFO:Finalizing model
2024-02-05 16:48:12,143:INFO:Uploading results into container
2024-02-05 16:48:12,144:INFO:Uploading model into container now
2024-02-05 16:48:12,149:INFO:_master_model_container: 1
2024-02-05 16:48:12,149:INFO:_display_container: 2
2024-02-05 16:48:12,150:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:48:12,150:INFO:create_model() successfully completed......................................
2024-02-05 16:49:07,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:49:07,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:49:07,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:49:07,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 16:49:08,396:INFO:PyCaret ClassificationExperiment
2024-02-05 16:49:08,397:INFO:Logging name: clf-default-name
2024-02-05 16:49:08,397:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 16:49:08,397:INFO:version 3.2.0
2024-02-05 16:49:08,397:INFO:Initializing setup()
2024-02-05 16:49:08,397:INFO:self.USI: b52b
2024-02-05 16:49:08,397:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'n_jobs_param', 'USI', 'log_plots_param', '_ml_usecase', 'gpu_n_jobs_param', 'fold_shuffle_param', 'y_train', 'seed', '_available_plots', 'target_param', 'exp_id', 'data', 'logging_param', 'html_param', 'pipeline', 'y', 'is_multiclass', 'X_test', 'idx', 'memory', 'X', 'y_test', 'fix_imbalance', 'gpu_param', 'X_train', 'fold_generator'}
2024-02-05 16:49:08,397:INFO:Checking environment
2024-02-05 16:49:08,397:INFO:python_version: 3.11.7
2024-02-05 16:49:08,397:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 16:49:08,397:INFO:machine: AMD64
2024-02-05 16:49:08,404:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 16:49:08,407:INFO:Memory: svmem(total=16892026880, available=7636557824, percent=54.8, used=9255469056, free=7636557824)
2024-02-05 16:49:08,407:INFO:Physical Core: 12
2024-02-05 16:49:08,407:INFO:Logical Core: 16
2024-02-05 16:49:08,407:INFO:Checking libraries
2024-02-05 16:49:08,407:INFO:System:
2024-02-05 16:49:08,408:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 16:49:08,408:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 16:49:08,408:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 16:49:08,408:INFO:PyCaret required dependencies:
2024-02-05 16:49:08,438:INFO:                 pip: 23.3.2
2024-02-05 16:49:08,438:INFO:          setuptools: 65.5.0
2024-02-05 16:49:08,438:INFO:             pycaret: 3.2.0
2024-02-05 16:49:08,438:INFO:             IPython: 8.20.0
2024-02-05 16:49:08,438:INFO:          ipywidgets: 8.1.1
2024-02-05 16:49:08,438:INFO:                tqdm: 4.66.1
2024-02-05 16:49:08,438:INFO:               numpy: 1.25.2
2024-02-05 16:49:08,438:INFO:              pandas: 1.5.3
2024-02-05 16:49:08,438:INFO:              jinja2: 3.1.3
2024-02-05 16:49:08,438:INFO:               scipy: 1.10.1
2024-02-05 16:49:08,438:INFO:              joblib: 1.3.2
2024-02-05 16:49:08,438:INFO:             sklearn: 1.2.2
2024-02-05 16:49:08,438:INFO:                pyod: 1.1.2
2024-02-05 16:49:08,438:INFO:            imblearn: 0.12.0
2024-02-05 16:49:08,438:INFO:   category_encoders: 2.6.3
2024-02-05 16:49:08,439:INFO:            lightgbm: 4.3.0
2024-02-05 16:49:08,439:INFO:               numba: 0.58.1
2024-02-05 16:49:08,439:INFO:            requests: 2.31.0
2024-02-05 16:49:08,439:INFO:          matplotlib: 3.6.0
2024-02-05 16:49:08,439:INFO:          scikitplot: 0.3.7
2024-02-05 16:49:08,439:INFO:         yellowbrick: 1.5
2024-02-05 16:49:08,439:INFO:              plotly: 5.18.0
2024-02-05 16:49:08,439:INFO:    plotly-resampler: Not installed
2024-02-05 16:49:08,439:INFO:             kaleido: 0.2.1
2024-02-05 16:49:08,439:INFO:           schemdraw: 0.15
2024-02-05 16:49:08,439:INFO:         statsmodels: 0.14.1
2024-02-05 16:49:08,439:INFO:              sktime: 0.21.1
2024-02-05 16:49:08,439:INFO:               tbats: 1.1.3
2024-02-05 16:49:08,439:INFO:            pmdarima: 2.0.4
2024-02-05 16:49:08,439:INFO:              psutil: 5.9.8
2024-02-05 16:49:08,439:INFO:          markupsafe: 2.1.4
2024-02-05 16:49:08,439:INFO:             pickle5: Not installed
2024-02-05 16:49:08,439:INFO:         cloudpickle: 3.0.0
2024-02-05 16:49:08,439:INFO:         deprecation: 2.1.0
2024-02-05 16:49:08,439:INFO:              xxhash: 3.4.1
2024-02-05 16:49:08,439:INFO:           wurlitzer: Not installed
2024-02-05 16:49:08,439:INFO:PyCaret optional dependencies:
2024-02-05 16:49:08,469:INFO:                shap: 0.44.1
2024-02-05 16:49:08,469:INFO:           interpret: Not installed
2024-02-05 16:49:08,469:INFO:                umap: Not installed
2024-02-05 16:49:08,469:INFO:     ydata_profiling: Not installed
2024-02-05 16:49:08,469:INFO:  explainerdashboard: Not installed
2024-02-05 16:49:08,469:INFO:             autoviz: Not installed
2024-02-05 16:49:08,469:INFO:           fairlearn: Not installed
2024-02-05 16:49:08,469:INFO:          deepchecks: Not installed
2024-02-05 16:49:08,469:INFO:             xgboost: 2.0.3
2024-02-05 16:49:08,469:INFO:            catboost: 1.2.2
2024-02-05 16:49:08,469:INFO:              kmodes: Not installed
2024-02-05 16:49:08,469:INFO:             mlxtend: Not installed
2024-02-05 16:49:08,469:INFO:       statsforecast: Not installed
2024-02-05 16:49:08,469:INFO:        tune_sklearn: Not installed
2024-02-05 16:49:08,469:INFO:                 ray: Not installed
2024-02-05 16:49:08,469:INFO:            hyperopt: Not installed
2024-02-05 16:49:08,469:INFO:              optuna: Not installed
2024-02-05 16:49:08,469:INFO:               skopt: Not installed
2024-02-05 16:49:08,469:INFO:              mlflow: Not installed
2024-02-05 16:49:08,469:INFO:              gradio: Not installed
2024-02-05 16:49:08,469:INFO:             fastapi: Not installed
2024-02-05 16:49:08,469:INFO:             uvicorn: Not installed
2024-02-05 16:49:08,469:INFO:              m2cgen: Not installed
2024-02-05 16:49:08,469:INFO:           evidently: Not installed
2024-02-05 16:49:08,469:INFO:               fugue: Not installed
2024-02-05 16:49:08,469:INFO:           streamlit: Not installed
2024-02-05 16:49:08,469:INFO:             prophet: 1.1.5
2024-02-05 16:49:08,469:INFO:None
2024-02-05 16:49:08,469:INFO:Set up data.
2024-02-05 16:49:08,473:INFO:Set up folding strategy.
2024-02-05 16:49:08,473:INFO:Set up train/test split.
2024-02-05 16:49:08,475:INFO:Set up index.
2024-02-05 16:49:08,475:INFO:Assigning column types.
2024-02-05 16:49:08,477:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 16:49:08,502:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:49:08,503:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:49:08,522:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:49:08,524:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:49:08,568:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 16:49:08,568:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:49:08,584:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:49:08,586:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:49:08,586:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 16:49:08,612:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:49:08,627:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:49:08,628:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:49:08,652:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 16:49:08,723:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:49:08,724:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:49:08,725:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 16:49:08,762:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:49:08,763:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:49:08,801:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:49:08,802:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:49:08,803:INFO:Preparing preprocessing pipeline...
2024-02-05 16:49:08,804:INFO:Set up label encoding.
2024-02-05 16:49:08,804:INFO:Set up simple imputation.
2024-02-05 16:49:08,817:INFO:Finished creating preprocessing pipeline.
2024-02-05 16:49:08,820:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 16:49:08,820:INFO:Creating final display dataframe.
2024-02-05 16:49:08,856:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  b52b
2024-02-05 16:49:08,895:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:49:08,896:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:49:08,935:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 16:49:08,936:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 16:49:08,937:INFO:setup() successfully completed in 0.54s...............
2024-02-05 16:49:08,937:INFO:Initializing create_model()
2024-02-05 16:49:08,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024863F43A90>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 16:49:08,937:INFO:Checking exceptions
2024-02-05 16:49:08,939:INFO:Importing libraries
2024-02-05 16:49:08,939:INFO:Copying training dataset
2024-02-05 16:49:08,940:INFO:Defining folds
2024-02-05 16:49:08,940:INFO:Declaring metric variables
2024-02-05 16:49:08,940:INFO:Importing untrained model
2024-02-05 16:49:08,941:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 16:49:08,941:INFO:Starting cross validation
2024-02-05 16:49:08,942:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 16:49:11,487:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,489:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,490:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,517:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,519:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,520:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,606:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,608:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,608:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,621:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,622:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,624:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,631:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,633:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,634:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 16:49:11,640:INFO:Calculating mean and std
2024-02-05 16:49:11,640:INFO:Creating metrics dataframe
2024-02-05 16:49:11,642:INFO:Finalizing model
2024-02-05 16:49:11,692:INFO:Uploading results into container
2024-02-05 16:49:11,693:INFO:Uploading model into container now
2024-02-05 16:49:11,701:INFO:_master_model_container: 1
2024-02-05 16:49:11,701:INFO:_display_container: 2
2024-02-05 16:49:11,702:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 16:49:11,702:INFO:create_model() successfully completed......................................
2024-02-05 16:49:11,768:INFO:Initializing plot_model()
2024-02-05 16:49:11,768:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024863F43A90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=tree, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 16:49:11,768:INFO:Checking exceptions
2024-02-05 21:51:17,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 21:51:17,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 21:51:17,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 21:51:17,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 21:51:18,443:INFO:PyCaret ClassificationExperiment
2024-02-05 21:51:18,444:INFO:Logging name: clf-default-name
2024-02-05 21:51:18,444:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 21:51:18,444:INFO:version 3.2.0
2024-02-05 21:51:18,444:INFO:Initializing setup()
2024-02-05 21:51:18,444:INFO:self.USI: 7528
2024-02-05 21:51:18,444:INFO:self._variable_keys: {'exp_name_log', 'USI', 'html_param', 'exp_id', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'y_test', '_ml_usecase', 'fix_imbalance', 'fold_groups_param', 'idx', 'seed', 'y', 'target_param', 'X', 'is_multiclass', 'gpu_n_jobs_param', 'fold_generator', 'log_plots_param', 'pipeline', 'X_train', 'X_test', '_available_plots', 'data', 'logging_param', 'y_train', 'gpu_param'}
2024-02-05 21:51:18,444:INFO:Checking environment
2024-02-05 21:51:18,444:INFO:python_version: 3.11.7
2024-02-05 21:51:18,444:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 21:51:18,444:INFO:machine: AMD64
2024-02-05 21:51:18,452:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 21:51:18,456:INFO:Memory: svmem(total=16892026880, available=5628874752, percent=66.7, used=11263152128, free=5628874752)
2024-02-05 21:51:18,456:INFO:Physical Core: 12
2024-02-05 21:51:18,456:INFO:Logical Core: 16
2024-02-05 21:51:18,456:INFO:Checking libraries
2024-02-05 21:51:18,456:INFO:System:
2024-02-05 21:51:18,456:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 21:51:18,456:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 21:51:18,456:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 21:51:18,456:INFO:PyCaret required dependencies:
2024-02-05 21:51:18,505:INFO:                 pip: 23.3.2
2024-02-05 21:51:18,505:INFO:          setuptools: 65.5.0
2024-02-05 21:51:18,505:INFO:             pycaret: 3.2.0
2024-02-05 21:51:18,505:INFO:             IPython: 8.20.0
2024-02-05 21:51:18,505:INFO:          ipywidgets: 8.1.1
2024-02-05 21:51:18,505:INFO:                tqdm: 4.66.1
2024-02-05 21:51:18,505:INFO:               numpy: 1.25.2
2024-02-05 21:51:18,505:INFO:              pandas: 1.5.3
2024-02-05 21:51:18,505:INFO:              jinja2: 3.1.3
2024-02-05 21:51:18,505:INFO:               scipy: 1.10.1
2024-02-05 21:51:18,505:INFO:              joblib: 1.3.2
2024-02-05 21:51:18,505:INFO:             sklearn: 1.2.2
2024-02-05 21:51:18,505:INFO:                pyod: 1.1.2
2024-02-05 21:51:18,505:INFO:            imblearn: 0.12.0
2024-02-05 21:51:18,505:INFO:   category_encoders: 2.6.3
2024-02-05 21:51:18,505:INFO:            lightgbm: 4.3.0
2024-02-05 21:51:18,505:INFO:               numba: 0.58.1
2024-02-05 21:51:18,505:INFO:            requests: 2.31.0
2024-02-05 21:51:18,505:INFO:          matplotlib: 3.6.0
2024-02-05 21:51:18,505:INFO:          scikitplot: 0.3.7
2024-02-05 21:51:18,506:INFO:         yellowbrick: 1.5
2024-02-05 21:51:18,506:INFO:              plotly: 5.18.0
2024-02-05 21:51:18,506:INFO:    plotly-resampler: Not installed
2024-02-05 21:51:18,506:INFO:             kaleido: 0.2.1
2024-02-05 21:51:18,506:INFO:           schemdraw: 0.15
2024-02-05 21:51:18,506:INFO:         statsmodels: 0.14.1
2024-02-05 21:51:18,506:INFO:              sktime: 0.21.1
2024-02-05 21:51:18,506:INFO:               tbats: 1.1.3
2024-02-05 21:51:18,506:INFO:            pmdarima: 2.0.4
2024-02-05 21:51:18,506:INFO:              psutil: 5.9.8
2024-02-05 21:51:18,506:INFO:          markupsafe: 2.1.4
2024-02-05 21:51:18,506:INFO:             pickle5: Not installed
2024-02-05 21:51:18,506:INFO:         cloudpickle: 3.0.0
2024-02-05 21:51:18,506:INFO:         deprecation: 2.1.0
2024-02-05 21:51:18,506:INFO:              xxhash: 3.4.1
2024-02-05 21:51:18,506:INFO:           wurlitzer: Not installed
2024-02-05 21:51:18,506:INFO:PyCaret optional dependencies:
2024-02-05 21:51:18,569:INFO:                shap: 0.44.1
2024-02-05 21:51:18,569:INFO:           interpret: Not installed
2024-02-05 21:51:18,569:INFO:                umap: Not installed
2024-02-05 21:51:18,569:INFO:     ydata_profiling: Not installed
2024-02-05 21:51:18,569:INFO:  explainerdashboard: Not installed
2024-02-05 21:51:18,569:INFO:             autoviz: Not installed
2024-02-05 21:51:18,569:INFO:           fairlearn: Not installed
2024-02-05 21:51:18,569:INFO:          deepchecks: Not installed
2024-02-05 21:51:18,569:INFO:             xgboost: 2.0.3
2024-02-05 21:51:18,570:INFO:            catboost: 1.2.2
2024-02-05 21:51:18,570:INFO:              kmodes: Not installed
2024-02-05 21:51:18,570:INFO:             mlxtend: Not installed
2024-02-05 21:51:18,570:INFO:       statsforecast: Not installed
2024-02-05 21:51:18,570:INFO:        tune_sklearn: Not installed
2024-02-05 21:51:18,570:INFO:                 ray: Not installed
2024-02-05 21:51:18,570:INFO:            hyperopt: Not installed
2024-02-05 21:51:18,570:INFO:              optuna: Not installed
2024-02-05 21:51:18,570:INFO:               skopt: Not installed
2024-02-05 21:51:18,570:INFO:              mlflow: Not installed
2024-02-05 21:51:18,570:INFO:              gradio: Not installed
2024-02-05 21:51:18,570:INFO:             fastapi: Not installed
2024-02-05 21:51:18,570:INFO:             uvicorn: Not installed
2024-02-05 21:51:18,570:INFO:              m2cgen: Not installed
2024-02-05 21:51:18,570:INFO:           evidently: Not installed
2024-02-05 21:51:18,570:INFO:               fugue: Not installed
2024-02-05 21:51:18,570:INFO:           streamlit: Not installed
2024-02-05 21:51:18,570:INFO:             prophet: 1.1.5
2024-02-05 21:51:18,570:INFO:None
2024-02-05 21:51:18,570:INFO:Set up data.
2024-02-05 21:51:18,575:INFO:Set up folding strategy.
2024-02-05 21:51:18,575:INFO:Set up train/test split.
2024-02-05 21:51:18,579:INFO:Set up index.
2024-02-05 21:51:18,580:INFO:Assigning column types.
2024-02-05 21:51:18,582:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 21:51:18,606:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 21:51:18,608:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 21:51:18,630:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:18,632:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:18,769:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 21:51:18,770:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 21:51:18,786:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:18,789:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:18,789:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 21:51:18,817:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 21:51:18,834:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:18,835:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:18,863:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 21:51:18,941:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:18,942:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:18,942:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 21:51:18,984:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:18,986:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:19,029:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:19,031:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:19,041:INFO:Preparing preprocessing pipeline...
2024-02-05 21:51:19,042:INFO:Set up label encoding.
2024-02-05 21:51:19,042:INFO:Set up simple imputation.
2024-02-05 21:51:19,058:INFO:Finished creating preprocessing pipeline.
2024-02-05 21:51:19,061:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 21:51:19,061:INFO:Creating final display dataframe.
2024-02-05 21:51:19,105:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  7528
2024-02-05 21:51:19,149:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:19,151:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:19,192:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:19,193:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:19,194:INFO:setup() successfully completed in 0.75s...............
2024-02-05 21:51:19,194:INFO:Initializing create_model()
2024-02-05 21:51:19,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A978103910>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 21:51:19,194:INFO:Checking exceptions
2024-02-05 21:51:19,198:INFO:Importing libraries
2024-02-05 21:51:19,198:INFO:Copying training dataset
2024-02-05 21:51:19,199:INFO:Defining folds
2024-02-05 21:51:19,199:INFO:Declaring metric variables
2024-02-05 21:51:19,200:INFO:Importing untrained model
2024-02-05 21:51:19,200:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 21:51:19,200:INFO:Starting cross validation
2024-02-05 21:51:19,201:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 21:51:22,067:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,069:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,070:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,130:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,131:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,132:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,219:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,220:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,221:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,228:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,229:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,230:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,236:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,236:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,239:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:22,242:INFO:Calculating mean and std
2024-02-05 21:51:22,243:INFO:Creating metrics dataframe
2024-02-05 21:51:22,245:INFO:Finalizing model
2024-02-05 21:51:22,291:INFO:Uploading results into container
2024-02-05 21:51:22,292:INFO:Uploading model into container now
2024-02-05 21:51:22,298:INFO:_master_model_container: 1
2024-02-05 21:51:22,298:INFO:_display_container: 2
2024-02-05 21:51:22,299:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 21:51:22,299:INFO:create_model() successfully completed......................................
2024-02-05 21:51:30,370:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 21:51:30,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 21:51:30,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 21:51:30,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 21:51:31,118:INFO:PyCaret ClassificationExperiment
2024-02-05 21:51:31,118:INFO:Logging name: clf-default-name
2024-02-05 21:51:31,118:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 21:51:31,118:INFO:version 3.2.0
2024-02-05 21:51:31,118:INFO:Initializing setup()
2024-02-05 21:51:31,118:INFO:self.USI: 148e
2024-02-05 21:51:31,118:INFO:self._variable_keys: {'fold_shuffle_param', 'logging_param', 'html_param', 'y', 'target_param', '_available_plots', 'fix_imbalance', 'memory', 'y_test', 'is_multiclass', '_ml_usecase', 'USI', 'data', 'X', 'seed', 'idx', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'fold_groups_param', 'log_plots_param', 'X_test', 'pipeline', 'y_train', 'fold_generator', 'gpu_param', 'exp_id', 'exp_name_log'}
2024-02-05 21:51:31,118:INFO:Checking environment
2024-02-05 21:51:31,118:INFO:python_version: 3.11.7
2024-02-05 21:51:31,118:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 21:51:31,118:INFO:machine: AMD64
2024-02-05 21:51:31,128:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 21:51:31,131:INFO:Memory: svmem(total=16892026880, available=5526138880, percent=67.3, used=11365888000, free=5526138880)
2024-02-05 21:51:31,132:INFO:Physical Core: 12
2024-02-05 21:51:31,132:INFO:Logical Core: 16
2024-02-05 21:51:31,132:INFO:Checking libraries
2024-02-05 21:51:31,132:INFO:System:
2024-02-05 21:51:31,132:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 21:51:31,132:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 21:51:31,132:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 21:51:31,132:INFO:PyCaret required dependencies:
2024-02-05 21:51:31,160:INFO:                 pip: 23.3.2
2024-02-05 21:51:31,160:INFO:          setuptools: 65.5.0
2024-02-05 21:51:31,160:INFO:             pycaret: 3.2.0
2024-02-05 21:51:31,160:INFO:             IPython: 8.20.0
2024-02-05 21:51:31,160:INFO:          ipywidgets: 8.1.1
2024-02-05 21:51:31,161:INFO:                tqdm: 4.66.1
2024-02-05 21:51:31,161:INFO:               numpy: 1.25.2
2024-02-05 21:51:31,161:INFO:              pandas: 1.5.3
2024-02-05 21:51:31,161:INFO:              jinja2: 3.1.3
2024-02-05 21:51:31,161:INFO:               scipy: 1.10.1
2024-02-05 21:51:31,161:INFO:              joblib: 1.3.2
2024-02-05 21:51:31,161:INFO:             sklearn: 1.2.2
2024-02-05 21:51:31,161:INFO:                pyod: 1.1.2
2024-02-05 21:51:31,161:INFO:            imblearn: 0.12.0
2024-02-05 21:51:31,161:INFO:   category_encoders: 2.6.3
2024-02-05 21:51:31,161:INFO:            lightgbm: 4.3.0
2024-02-05 21:51:31,161:INFO:               numba: 0.58.1
2024-02-05 21:51:31,161:INFO:            requests: 2.31.0
2024-02-05 21:51:31,161:INFO:          matplotlib: 3.6.0
2024-02-05 21:51:31,161:INFO:          scikitplot: 0.3.7
2024-02-05 21:51:31,161:INFO:         yellowbrick: 1.5
2024-02-05 21:51:31,161:INFO:              plotly: 5.18.0
2024-02-05 21:51:31,161:INFO:    plotly-resampler: Not installed
2024-02-05 21:51:31,161:INFO:             kaleido: 0.2.1
2024-02-05 21:51:31,161:INFO:           schemdraw: 0.15
2024-02-05 21:51:31,161:INFO:         statsmodels: 0.14.1
2024-02-05 21:51:31,161:INFO:              sktime: 0.21.1
2024-02-05 21:51:31,161:INFO:               tbats: 1.1.3
2024-02-05 21:51:31,161:INFO:            pmdarima: 2.0.4
2024-02-05 21:51:31,161:INFO:              psutil: 5.9.8
2024-02-05 21:51:31,161:INFO:          markupsafe: 2.1.4
2024-02-05 21:51:31,161:INFO:             pickle5: Not installed
2024-02-05 21:51:31,161:INFO:         cloudpickle: 3.0.0
2024-02-05 21:51:31,161:INFO:         deprecation: 2.1.0
2024-02-05 21:51:31,161:INFO:              xxhash: 3.4.1
2024-02-05 21:51:31,161:INFO:           wurlitzer: Not installed
2024-02-05 21:51:31,161:INFO:PyCaret optional dependencies:
2024-02-05 21:51:31,189:INFO:                shap: 0.44.1
2024-02-05 21:51:31,189:INFO:           interpret: Not installed
2024-02-05 21:51:31,189:INFO:                umap: Not installed
2024-02-05 21:51:31,189:INFO:     ydata_profiling: Not installed
2024-02-05 21:51:31,189:INFO:  explainerdashboard: Not installed
2024-02-05 21:51:31,189:INFO:             autoviz: Not installed
2024-02-05 21:51:31,189:INFO:           fairlearn: Not installed
2024-02-05 21:51:31,189:INFO:          deepchecks: Not installed
2024-02-05 21:51:31,189:INFO:             xgboost: 2.0.3
2024-02-05 21:51:31,189:INFO:            catboost: 1.2.2
2024-02-05 21:51:31,189:INFO:              kmodes: Not installed
2024-02-05 21:51:31,189:INFO:             mlxtend: Not installed
2024-02-05 21:51:31,189:INFO:       statsforecast: Not installed
2024-02-05 21:51:31,189:INFO:        tune_sklearn: Not installed
2024-02-05 21:51:31,189:INFO:                 ray: Not installed
2024-02-05 21:51:31,189:INFO:            hyperopt: Not installed
2024-02-05 21:51:31,189:INFO:              optuna: Not installed
2024-02-05 21:51:31,189:INFO:               skopt: Not installed
2024-02-05 21:51:31,189:INFO:              mlflow: Not installed
2024-02-05 21:51:31,189:INFO:              gradio: Not installed
2024-02-05 21:51:31,189:INFO:             fastapi: Not installed
2024-02-05 21:51:31,189:INFO:             uvicorn: Not installed
2024-02-05 21:51:31,189:INFO:              m2cgen: Not installed
2024-02-05 21:51:31,189:INFO:           evidently: Not installed
2024-02-05 21:51:31,189:INFO:               fugue: Not installed
2024-02-05 21:51:31,189:INFO:           streamlit: Not installed
2024-02-05 21:51:31,189:INFO:             prophet: 1.1.5
2024-02-05 21:51:31,189:INFO:None
2024-02-05 21:51:31,189:INFO:Set up data.
2024-02-05 21:51:31,193:INFO:Set up folding strategy.
2024-02-05 21:51:31,193:INFO:Set up train/test split.
2024-02-05 21:51:31,195:INFO:Set up index.
2024-02-05 21:51:31,195:INFO:Assigning column types.
2024-02-05 21:51:31,196:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 21:51:31,220:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 21:51:31,221:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 21:51:31,240:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:31,242:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:31,280:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 21:51:31,281:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 21:51:31,298:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:31,299:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:31,299:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 21:51:31,324:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 21:51:31,338:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:31,340:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:31,364:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 21:51:31,439:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:31,441:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:31,441:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 21:51:31,479:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:31,480:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:31,519:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:31,521:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:31,522:INFO:Preparing preprocessing pipeline...
2024-02-05 21:51:31,524:INFO:Set up label encoding.
2024-02-05 21:51:31,524:INFO:Set up simple imputation.
2024-02-05 21:51:31,536:INFO:Finished creating preprocessing pipeline.
2024-02-05 21:51:31,540:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 21:51:31,540:INFO:Creating final display dataframe.
2024-02-05 21:51:31,579:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  148e
2024-02-05 21:51:31,621:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:31,622:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:31,663:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 21:51:31,665:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 21:51:31,665:INFO:setup() successfully completed in 0.55s...............
2024-02-05 21:51:31,665:INFO:Initializing create_model()
2024-02-05 21:51:31,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000173BA537B90>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 21:51:31,665:INFO:Checking exceptions
2024-02-05 21:51:31,667:INFO:Importing libraries
2024-02-05 21:51:31,667:INFO:Copying training dataset
2024-02-05 21:51:31,669:INFO:Defining folds
2024-02-05 21:51:31,669:INFO:Declaring metric variables
2024-02-05 21:51:31,669:INFO:Importing untrained model
2024-02-05 21:51:31,670:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 21:51:31,670:INFO:Starting cross validation
2024-02-05 21:51:31,670:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 21:51:34,338:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,339:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,340:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,341:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,343:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,344:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,450:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,451:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,455:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,474:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,475:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,475:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,477:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,477:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 21:51:34,486:INFO:Calculating mean and std
2024-02-05 21:51:34,486:INFO:Creating metrics dataframe
2024-02-05 21:51:34,489:INFO:Finalizing model
2024-02-05 21:51:34,539:INFO:Uploading results into container
2024-02-05 21:51:34,539:INFO:Uploading model into container now
2024-02-05 21:51:34,548:INFO:_master_model_container: 1
2024-02-05 21:51:34,548:INFO:_display_container: 2
2024-02-05 21:51:34,549:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 21:51:34,549:INFO:create_model() successfully completed......................................
2024-02-05 21:51:34,614:INFO:Initializing predict_model()
2024-02-05 21:51:34,614:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000173BA537B90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000173B92C2520>)
2024-02-05 21:51:34,614:INFO:Checking exceptions
2024-02-05 21:51:34,614:INFO:Preloading libraries
2024-02-05 21:51:34,614:INFO:Set up data.
2024-02-05 21:51:34,616:INFO:Set up index.
2024-02-05 22:46:00,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 22:46:00,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 22:46:00,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 22:46:00,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-05 22:46:01,480:INFO:PyCaret ClassificationExperiment
2024-02-05 22:46:01,480:INFO:Logging name: clf-default-name
2024-02-05 22:46:01,480:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-05 22:46:01,480:INFO:version 3.2.0
2024-02-05 22:46:01,481:INFO:Initializing setup()
2024-02-05 22:46:01,481:INFO:self.USI: 8d19
2024-02-05 22:46:01,481:INFO:self._variable_keys: {'is_multiclass', 'html_param', 'fold_groups_param', 'fold_generator', 'X_test', '_available_plots', 'logging_param', 'gpu_n_jobs_param', '_ml_usecase', 'log_plots_param', 'data', 'target_param', 'gpu_param', 'n_jobs_param', 'y', 'USI', 'X_train', 'fold_shuffle_param', 'memory', 'X', 'exp_name_log', 'fix_imbalance', 'seed', 'pipeline', 'y_test', 'idx', 'exp_id', 'y_train'}
2024-02-05 22:46:01,481:INFO:Checking environment
2024-02-05 22:46:01,481:INFO:python_version: 3.11.7
2024-02-05 22:46:01,481:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2024-02-05 22:46:01,481:INFO:machine: AMD64
2024-02-05 22:46:01,490:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-05 22:46:01,493:INFO:Memory: svmem(total=16892026880, available=7227277312, percent=57.2, used=9664749568, free=7227277312)
2024-02-05 22:46:01,493:INFO:Physical Core: 12
2024-02-05 22:46:01,493:INFO:Logical Core: 16
2024-02-05 22:46:01,493:INFO:Checking libraries
2024-02-05 22:46:01,493:INFO:System:
2024-02-05 22:46:01,493:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2024-02-05 22:46:01,493:INFO:executable: C:\Softwares\Enviroments\Python\python.exe
2024-02-05 22:46:01,493:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-05 22:46:01,494:INFO:PyCaret required dependencies:
2024-02-05 22:46:01,528:INFO:                 pip: 23.3.2
2024-02-05 22:46:01,528:INFO:          setuptools: 65.5.0
2024-02-05 22:46:01,528:INFO:             pycaret: 3.2.0
2024-02-05 22:46:01,528:INFO:             IPython: 8.20.0
2024-02-05 22:46:01,528:INFO:          ipywidgets: 8.1.1
2024-02-05 22:46:01,528:INFO:                tqdm: 4.66.1
2024-02-05 22:46:01,528:INFO:               numpy: 1.25.2
2024-02-05 22:46:01,528:INFO:              pandas: 1.5.3
2024-02-05 22:46:01,528:INFO:              jinja2: 3.1.3
2024-02-05 22:46:01,528:INFO:               scipy: 1.10.1
2024-02-05 22:46:01,528:INFO:              joblib: 1.3.2
2024-02-05 22:46:01,528:INFO:             sklearn: 1.2.2
2024-02-05 22:46:01,528:INFO:                pyod: 1.1.2
2024-02-05 22:46:01,528:INFO:            imblearn: 0.12.0
2024-02-05 22:46:01,528:INFO:   category_encoders: 2.6.3
2024-02-05 22:46:01,528:INFO:            lightgbm: 4.3.0
2024-02-05 22:46:01,528:INFO:               numba: 0.58.1
2024-02-05 22:46:01,528:INFO:            requests: 2.31.0
2024-02-05 22:46:01,528:INFO:          matplotlib: 3.6.0
2024-02-05 22:46:01,528:INFO:          scikitplot: 0.3.7
2024-02-05 22:46:01,528:INFO:         yellowbrick: 1.5
2024-02-05 22:46:01,528:INFO:              plotly: 5.18.0
2024-02-05 22:46:01,528:INFO:    plotly-resampler: Not installed
2024-02-05 22:46:01,528:INFO:             kaleido: 0.2.1
2024-02-05 22:46:01,529:INFO:           schemdraw: 0.15
2024-02-05 22:46:01,529:INFO:         statsmodels: 0.14.1
2024-02-05 22:46:01,529:INFO:              sktime: 0.21.1
2024-02-05 22:46:01,529:INFO:               tbats: 1.1.3
2024-02-05 22:46:01,529:INFO:            pmdarima: 2.0.4
2024-02-05 22:46:01,529:INFO:              psutil: 5.9.8
2024-02-05 22:46:01,529:INFO:          markupsafe: 2.1.4
2024-02-05 22:46:01,529:INFO:             pickle5: Not installed
2024-02-05 22:46:01,529:INFO:         cloudpickle: 3.0.0
2024-02-05 22:46:01,529:INFO:         deprecation: 2.1.0
2024-02-05 22:46:01,529:INFO:              xxhash: 3.4.1
2024-02-05 22:46:01,529:INFO:           wurlitzer: Not installed
2024-02-05 22:46:01,529:INFO:PyCaret optional dependencies:
2024-02-05 22:46:01,564:INFO:                shap: 0.44.1
2024-02-05 22:46:01,565:INFO:           interpret: Not installed
2024-02-05 22:46:01,565:INFO:                umap: Not installed
2024-02-05 22:46:01,565:INFO:     ydata_profiling: Not installed
2024-02-05 22:46:01,565:INFO:  explainerdashboard: Not installed
2024-02-05 22:46:01,565:INFO:             autoviz: Not installed
2024-02-05 22:46:01,565:INFO:           fairlearn: Not installed
2024-02-05 22:46:01,565:INFO:          deepchecks: Not installed
2024-02-05 22:46:01,565:INFO:             xgboost: 2.0.3
2024-02-05 22:46:01,565:INFO:            catboost: 1.2.2
2024-02-05 22:46:01,565:INFO:              kmodes: Not installed
2024-02-05 22:46:01,565:INFO:             mlxtend: Not installed
2024-02-05 22:46:01,565:INFO:       statsforecast: Not installed
2024-02-05 22:46:01,565:INFO:        tune_sklearn: Not installed
2024-02-05 22:46:01,565:INFO:                 ray: Not installed
2024-02-05 22:46:01,565:INFO:            hyperopt: Not installed
2024-02-05 22:46:01,565:INFO:              optuna: Not installed
2024-02-05 22:46:01,565:INFO:               skopt: Not installed
2024-02-05 22:46:01,565:INFO:              mlflow: Not installed
2024-02-05 22:46:01,565:INFO:              gradio: Not installed
2024-02-05 22:46:01,565:INFO:             fastapi: Not installed
2024-02-05 22:46:01,565:INFO:             uvicorn: Not installed
2024-02-05 22:46:01,565:INFO:              m2cgen: Not installed
2024-02-05 22:46:01,565:INFO:           evidently: Not installed
2024-02-05 22:46:01,565:INFO:               fugue: Not installed
2024-02-05 22:46:01,565:INFO:           streamlit: Not installed
2024-02-05 22:46:01,565:INFO:             prophet: 1.1.5
2024-02-05 22:46:01,565:INFO:None
2024-02-05 22:46:01,565:INFO:Set up data.
2024-02-05 22:46:01,569:INFO:Set up folding strategy.
2024-02-05 22:46:01,569:INFO:Set up train/test split.
2024-02-05 22:46:01,572:INFO:Set up index.
2024-02-05 22:46:01,572:INFO:Assigning column types.
2024-02-05 22:46:01,574:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-05 22:46:01,599:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 22:46:01,601:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 22:46:01,622:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 22:46:01,623:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 22:46:01,667:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-05 22:46:01,668:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 22:46:01,684:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 22:46:01,686:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 22:46:01,687:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-05 22:46:01,711:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 22:46:01,728:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 22:46:01,730:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 22:46:01,757:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-05 22:46:01,832:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 22:46:01,834:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 22:46:01,834:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-05 22:46:01,879:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 22:46:01,881:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 22:46:01,921:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 22:46:01,923:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 22:46:01,926:INFO:Preparing preprocessing pipeline...
2024-02-05 22:46:01,926:INFO:Set up label encoding.
2024-02-05 22:46:01,926:INFO:Set up simple imputation.
2024-02-05 22:46:01,940:INFO:Finished creating preprocessing pipeline.
2024-02-05 22:46:01,943:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Jin_zd\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['momentum1', 'type', 'ace', 'df',
                                             'bw', 'ue', 'rc'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-02-05 22:46:01,943:INFO:Creating final display dataframe.
2024-02-05 22:46:01,992:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   123
1                        Target                 label
2                   Target type                Binary
3                Target mapping  normal: 0, swings: 1
4           Original data shape              (150, 8)
5        Transformed data shape              (150, 8)
6   Transformed train set shape              (105, 8)
7    Transformed test set shape               (45, 8)
8              Numeric features                     7
9                    Preprocess                  True
10              Imputation type                simple
11           Numeric imputation                  mean
12       Categorical imputation                  mode
13               Fold Generator       StratifiedKFold
14                  Fold Number                     5
15                     CPU Jobs                    -1
16                      Use GPU                 False
17               Log Experiment                 False
18              Experiment Name      clf-default-name
19                          USI                  8d19
2024-02-05 22:46:02,037:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 22:46:02,039:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 22:46:02,080:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-05 22:46:02,082:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-05 22:46:02,084:INFO:setup() successfully completed in 0.61s...............
2024-02-05 22:46:02,084:INFO:Initializing create_model()
2024-02-05 22:46:02,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D52E6E7A50>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-05 22:46:02,084:INFO:Checking exceptions
2024-02-05 22:46:02,085:INFO:Importing libraries
2024-02-05 22:46:02,085:INFO:Copying training dataset
2024-02-05 22:46:02,087:INFO:Defining folds
2024-02-05 22:46:02,087:INFO:Declaring metric variables
2024-02-05 22:46:02,087:INFO:Importing untrained model
2024-02-05 22:46:02,088:INFO:Extreme Gradient Boosting Imported successfully
2024-02-05 22:46:02,088:INFO:Starting cross validation
2024-02-05 22:46:02,089:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-02-05 22:46:05,451:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,454:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,457:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,505:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,507:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,508:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,584:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,585:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,587:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,621:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,621:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,622:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,622:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,623:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,623:WARNING:C:\Softwares\Enviroments\Python\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'swings') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-05 22:46:05,627:INFO:Calculating mean and std
2024-02-05 22:46:05,628:INFO:Creating metrics dataframe
2024-02-05 22:46:05,630:INFO:Finalizing model
2024-02-05 22:46:05,707:INFO:Uploading results into container
2024-02-05 22:46:05,708:INFO:Uploading model into container now
2024-02-05 22:46:05,716:INFO:_master_model_container: 1
2024-02-05 22:46:05,716:INFO:_display_container: 2
2024-02-05 22:46:05,717:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-05 22:46:05,717:INFO:create_model() successfully completed......................................
2024-02-05 22:46:05,789:INFO:Initializing predict_model()
2024-02-05 22:46:05,789:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D52E6E7A50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5085E6480>)
2024-02-05 22:46:05,789:INFO:Checking exceptions
2024-02-05 22:46:05,789:INFO:Preloading libraries
2024-02-05 22:46:05,790:INFO:Set up data.
2024-02-05 22:46:05,792:INFO:Set up index.
2024-02-05 22:46:05,891:INFO:Initializing plot_model()
2024-02-05 22:46:05,891:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D52E6E7A50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 22:46:05,892:INFO:Checking exceptions
2024-02-05 22:46:05,905:INFO:Preloading libraries
2024-02-05 22:46:05,909:INFO:Copying training dataset
2024-02-05 22:46:05,909:INFO:Plot type: auc
2024-02-05 22:46:06,018:INFO:Fitting Model
2024-02-05 22:46:06,019:INFO:Scoring test/hold-out set
2024-02-05 22:46:06,040:INFO:Saving 'AUC.png'
2024-02-05 22:46:06,244:INFO:Visual Rendered Successfully
2024-02-05 22:46:06,322:INFO:plot_model() successfully completed......................................
2024-02-05 22:46:06,323:INFO:Initializing plot_model()
2024-02-05 22:46:06,323:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D52E6E7A50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs={'percent': True}, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 22:46:06,323:INFO:Checking exceptions
2024-02-05 22:46:06,324:INFO:Preloading libraries
2024-02-05 22:46:06,328:INFO:Copying training dataset
2024-02-05 22:46:06,328:INFO:Plot type: confusion_matrix
2024-02-05 22:46:06,384:INFO:Fitting Model
2024-02-05 22:46:06,386:INFO:Scoring test/hold-out set
2024-02-05 22:46:06,397:INFO:Saving 'Confusion Matrix.png'
2024-02-05 22:46:06,485:INFO:Visual Rendered Successfully
2024-02-05 22:46:06,550:INFO:plot_model() successfully completed......................................
2024-02-05 22:46:06,551:INFO:Initializing plot_model()
2024-02-05 22:46:06,551:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D52E6E7A50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-05 22:46:06,551:INFO:Checking exceptions
2024-02-05 22:46:06,552:INFO:Preloading libraries
2024-02-05 22:46:06,555:INFO:Copying training dataset
2024-02-05 22:46:06,555:INFO:Plot type: feature
2024-02-05 22:46:06,556:WARNING:No coef_ found. Trying feature_importances_
2024-02-05 22:46:06,598:INFO:Saving 'Feature Importance.png'
2024-02-05 22:46:06,688:INFO:Visual Rendered Successfully
2024-02-05 22:46:06,748:INFO:plot_model() successfully completed......................................
2024-02-05 22:46:06,749:INFO:Initializing interpret_model()
2024-02-05 22:46:06,749:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D52E6E7A50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=True, kwargs={})
2024-02-05 22:46:06,749:INFO:Checking exceptions
2024-02-05 22:46:06,749:INFO:Soft dependency imported: shap: 0.44.1
2024-02-05 22:46:07,219:INFO:plot type: summary
2024-02-05 22:46:07,219:INFO:Creating TreeExplainer
2024-02-05 22:46:07,235:INFO:Compiling shap values
2024-02-05 22:46:07,306:INFO:Saving 'SHAP summary.png'
2024-02-05 22:46:07,432:INFO:Visual Rendered Successfully
2024-02-05 22:46:07,432:INFO:interpret_model() successfully completed......................................
